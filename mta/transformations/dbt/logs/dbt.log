[0m13:57:24.213102 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08f24f400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08d9999f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08d999a20>]}


============================== 13:57:24.216920 | 134466d0-a9a9-41ce-86c9-280e89a09cca ==============================
[0m13:57:24.216920 [info ] [MainThread]: Running with dbt=1.8.7
[0m13:57:24.217328 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt build', 'static_parser': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m13:57:24.609037 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08f319150>]}
[0m13:57:24.665261 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08e556800>]}
[0m13:57:24.669623 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m13:57:24.680224 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m13:57:24.680882 [info ] [MainThread]: Unable to do partial parsing because saved manifest not found. Starting full parse.
[0m13:57:24.681256 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08d855e70>]}
[0m13:57:25.531935 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff0805d44f0>]}
[0m13:57:25.639956 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08041c580>]}
[0m13:57:25.640410 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m13:57:25.642002 [info ] [MainThread]: 
[0m13:57:25.642503 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:57:25.646193 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_nfl_database'
[0m13:57:25.709814 [debug] [ThreadPool]: Using duckdb connection "list_nfl_database"
[0m13:57:25.710292 [debug] [ThreadPool]: On list_nfl_database: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_nfl_database"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"nfl_database"'
    
  
  
[0m13:57:25.710630 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:57:25.756050 [debug] [ThreadPool]: SQL status: OK in 0.045 seconds
[0m13:57:25.757596 [debug] [ThreadPool]: On list_nfl_database: Close
[0m13:57:25.760137 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_nfl_database, now create_nfl_database_main)
[0m13:57:25.760855 [debug] [ThreadPool]: Creating schema "database: "nfl_database"
schema: "main"
"
[0m13:57:25.765572 [debug] [ThreadPool]: Using duckdb connection "create_nfl_database_main"
[0m13:57:25.765901 [debug] [ThreadPool]: On create_nfl_database_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_nfl_database_main"} */

    
        select type from duckdb_databases()
        where database_name='nfl_database'
        and type='sqlite'
    
  
[0m13:57:25.766207 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:57:25.773880 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m13:57:25.775325 [debug] [ThreadPool]: Using duckdb connection "create_nfl_database_main"
[0m13:57:25.775676 [debug] [ThreadPool]: On create_nfl_database_main: BEGIN
[0m13:57:25.776207 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:57:25.776493 [debug] [ThreadPool]: Using duckdb connection "create_nfl_database_main"
[0m13:57:25.776737 [debug] [ThreadPool]: On create_nfl_database_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_nfl_database_main"} */

    
    
        create schema if not exists "nfl_database"."main"
    
[0m13:57:25.779841 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m13:57:25.780873 [debug] [ThreadPool]: On create_nfl_database_main: COMMIT
[0m13:57:25.781205 [debug] [ThreadPool]: Using duckdb connection "create_nfl_database_main"
[0m13:57:25.781478 [debug] [ThreadPool]: On create_nfl_database_main: COMMIT
[0m13:57:25.782067 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:57:25.782357 [debug] [ThreadPool]: On create_nfl_database_main: Close
[0m13:57:25.785683 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_nfl_database_main, now list_nfl_database_main)
[0m13:57:25.789897 [debug] [ThreadPool]: Using duckdb connection "list_nfl_database_main"
[0m13:57:25.790459 [debug] [ThreadPool]: On list_nfl_database_main: BEGIN
[0m13:57:25.790819 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:57:25.796078 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m13:57:25.796476 [debug] [ThreadPool]: Using duckdb connection "list_nfl_database_main"
[0m13:57:25.796762 [debug] [ThreadPool]: On list_nfl_database_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_nfl_database_main"} */
select
      'nfl_database' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'nfl_database'
  
[0m13:57:25.829116 [debug] [ThreadPool]: SQL status: OK in 0.032 seconds
[0m13:57:25.830342 [debug] [ThreadPool]: On list_nfl_database_main: ROLLBACK
[0m13:57:25.832005 [debug] [ThreadPool]: Failed to rollback 'list_nfl_database_main'
[0m13:57:25.832301 [debug] [ThreadPool]: On list_nfl_database_main: Close
[0m13:57:25.836522 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08f53ecb0>]}
[0m13:57:25.837078 [debug] [MainThread]: Using duckdb connection "master"
[0m13:57:25.837386 [debug] [MainThread]: On master: BEGIN
[0m13:57:25.837634 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:57:25.843025 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m13:57:25.843435 [debug] [MainThread]: On master: COMMIT
[0m13:57:25.843740 [debug] [MainThread]: Using duckdb connection "master"
[0m13:57:25.844025 [debug] [MainThread]: On master: COMMIT
[0m13:57:25.844586 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:57:25.844872 [debug] [MainThread]: On master: Close
[0m13:57:25.846494 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m13:57:25.846855 [info ] [MainThread]: 
[0m13:57:25.854136 [debug] [Thread-1 (]: Began running node model.nfl.avg_riders_per_day
[0m13:57:25.855299 [debug] [Thread-2 (]: Began running node model.nfl.busiest_specific_times
[0m13:57:25.854903 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m13:57:25.856042 [debug] [Thread-3 (]: Began running node model.nfl.fare_class_boro
[0m13:57:25.856827 [debug] [Thread-4 (]: Began running node model.nfl.hourly_riders
[0m13:57:25.856460 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m13:57:25.857460 [debug] [Thread-5 (]: Began running node model.nfl.omny_adoption_by_station
[0m13:57:25.858532 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.nfl.avg_riders_per_day'
[0m13:57:25.858960 [debug] [Thread-6 (]: Began running node model.nfl.omny_adoption_increase
[0m13:57:25.859412 [debug] [Thread-7 (]: Began running node model.nfl.total_riders_per_station
[0m13:57:25.859923 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m13:57:25.860494 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m13:57:25.861084 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.nfl.busiest_specific_times'
[0m13:57:25.861544 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m13:57:25.862055 [debug] [Thread-1 (]: Began compiling node model.nfl.avg_riders_per_day
[0m13:57:25.862518 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m13:57:25.863058 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m13:57:25.863829 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.nfl.fare_class_boro'
[0m13:57:25.864450 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.nfl.hourly_riders'
[0m13:57:25.864865 [debug] [Thread-2 (]: Began compiling node model.nfl.busiest_specific_times
[0m13:57:25.865285 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_nfl_database_main, now model.nfl.omny_adoption_by_station)
[0m13:57:25.872361 [debug] [Thread-1 (]: Writing injected SQL for node "model.nfl.avg_riders_per_day"
[0m13:57:25.873813 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.nfl.omny_adoption_increase'
[0m13:57:25.875611 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.nfl.total_riders_per_station'
[0m13:57:25.876220 [debug] [Thread-3 (]: Began compiling node model.nfl.fare_class_boro
[0m13:57:25.876735 [debug] [Thread-4 (]: Began compiling node model.nfl.hourly_riders
[0m13:57:25.879349 [debug] [Thread-2 (]: Writing injected SQL for node "model.nfl.busiest_specific_times"
[0m13:57:25.879817 [debug] [Thread-5 (]: Began compiling node model.nfl.omny_adoption_by_station
[0m13:57:25.880382 [debug] [Thread-6 (]: Began compiling node model.nfl.omny_adoption_increase
[0m13:57:25.880793 [debug] [Thread-7 (]: Began compiling node model.nfl.total_riders_per_station
[0m13:57:25.883417 [debug] [Thread-3 (]: Writing injected SQL for node "model.nfl.fare_class_boro"
[0m13:57:25.884193 [debug] [Thread-1 (]: Began executing node model.nfl.avg_riders_per_day
[0m13:57:25.887598 [debug] [Thread-4 (]: Writing injected SQL for node "model.nfl.hourly_riders"
[0m13:57:25.893603 [debug] [Thread-5 (]: Writing injected SQL for node "model.nfl.omny_adoption_by_station"
[0m13:57:25.896396 [debug] [Thread-6 (]: Writing injected SQL for node "model.nfl.omny_adoption_increase"
[0m13:57:25.896855 [debug] [Thread-2 (]: Began executing node model.nfl.busiest_specific_times
[0m13:57:25.898990 [debug] [Thread-7 (]: Writing injected SQL for node "model.nfl.total_riders_per_station"
[0m13:57:25.911224 [debug] [Thread-3 (]: Began executing node model.nfl.fare_class_boro
[0m13:57:25.912067 [debug] [Thread-4 (]: Began executing node model.nfl.hourly_riders
[0m13:57:25.912718 [debug] [Thread-5 (]: Began executing node model.nfl.omny_adoption_by_station
[0m13:57:25.925538 [debug] [Thread-1 (]: Writing runtime sql for node "model.nfl.avg_riders_per_day"
[0m13:57:25.926212 [debug] [Thread-6 (]: Began executing node model.nfl.omny_adoption_increase
[0m13:57:25.928621 [debug] [Thread-2 (]: Writing runtime sql for node "model.nfl.busiest_specific_times"
[0m13:57:25.929104 [debug] [Thread-7 (]: Began executing node model.nfl.total_riders_per_station
[0m13:57:25.931245 [debug] [Thread-3 (]: Writing runtime sql for node "model.nfl.fare_class_boro"
[0m13:57:25.934480 [debug] [Thread-4 (]: Writing runtime sql for node "model.nfl.hourly_riders"
[0m13:57:25.937160 [debug] [Thread-5 (]: Writing runtime sql for node "model.nfl.omny_adoption_by_station"
[0m13:57:25.939558 [debug] [Thread-6 (]: Writing runtime sql for node "model.nfl.omny_adoption_increase"
[0m13:57:25.941933 [debug] [Thread-7 (]: Writing runtime sql for node "model.nfl.total_riders_per_station"
[0m13:57:25.942774 [debug] [Thread-1 (]: Using duckdb connection "model.nfl.avg_riders_per_day"
[0m13:57:25.943384 [debug] [Thread-3 (]: Using duckdb connection "model.nfl.fare_class_boro"
[0m13:57:25.943831 [debug] [Thread-2 (]: Using duckdb connection "model.nfl.busiest_specific_times"
[0m13:57:25.944486 [debug] [Thread-4 (]: Using duckdb connection "model.nfl.hourly_riders"
[0m13:57:25.945499 [debug] [Thread-7 (]: Using duckdb connection "model.nfl.total_riders_per_station"
[0m13:57:25.945971 [debug] [Thread-1 (]: On model.nfl.avg_riders_per_day: BEGIN
[0m13:57:25.946440 [debug] [Thread-5 (]: Using duckdb connection "model.nfl.omny_adoption_by_station"
[0m13:57:25.946896 [debug] [Thread-6 (]: Using duckdb connection "model.nfl.omny_adoption_increase"
[0m13:57:25.947344 [debug] [Thread-3 (]: On model.nfl.fare_class_boro: BEGIN
[0m13:57:25.947779 [debug] [Thread-2 (]: On model.nfl.busiest_specific_times: BEGIN
[0m13:57:25.948128 [debug] [Thread-4 (]: On model.nfl.hourly_riders: BEGIN
[0m13:57:25.948465 [debug] [Thread-7 (]: On model.nfl.total_riders_per_station: BEGIN
[0m13:57:25.948790 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m13:57:25.949123 [debug] [Thread-5 (]: On model.nfl.omny_adoption_by_station: BEGIN
[0m13:57:25.949494 [debug] [Thread-6 (]: On model.nfl.omny_adoption_increase: BEGIN
[0m13:57:25.949980 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m13:57:25.950427 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m13:57:25.951087 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m13:57:25.951458 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m13:57:25.957551 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m13:57:25.958312 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m13:57:25.960238 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m13:57:25.960602 [debug] [Thread-1 (]: Using duckdb connection "model.nfl.avg_riders_per_day"
[0m13:57:25.960933 [debug] [Thread-1 (]: On model.nfl.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.avg_riders_per_day"} */

  
    
    

    create  table
      "nfl_database"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC;
    );
  
  
[0m13:57:25.979680 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.avg_riders_per_day"} */

  
    
    

    create  table
      "nfl_database"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC;
    );
  
  
[0m13:57:25.980230 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:25.980722 [debug] [Thread-1 (]: On model.nfl.avg_riders_per_day: ROLLBACK
[0m13:57:25.983523 [debug] [Thread-3 (]: SQL status: OK in 0.033 seconds
[0m13:57:25.985787 [debug] [Thread-3 (]: Using duckdb connection "model.nfl.fare_class_boro"
[0m13:57:25.986543 [debug] [Thread-3 (]: On model.nfl.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.fare_class_boro"} */

  
    
    

    create  table
      "nfl_database"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC;
    );
  
  
[0m13:57:25.988261 [debug] [Thread-3 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.fare_class_boro"} */

  
    
    

    create  table
      "nfl_database"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC;
    );
  
  
[0m13:57:25.989211 [debug] [Thread-2 (]: SQL status: OK in 0.039 seconds
[0m13:57:25.989642 [debug] [Thread-3 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:25.990060 [debug] [Thread-2 (]: Using duckdb connection "model.nfl.busiest_specific_times"
[0m13:57:25.991020 [debug] [Thread-3 (]: On model.nfl.fare_class_boro: ROLLBACK
[0m13:57:25.991624 [debug] [Thread-2 (]: On model.nfl.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.busiest_specific_times"} */

  
    
    

    create  table
      "nfl_database"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC;
    );
  
  
[0m13:57:25.993485 [debug] [Thread-2 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.busiest_specific_times"} */

  
    
    

    create  table
      "nfl_database"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC;
    );
  
  
[0m13:57:25.995206 [debug] [Thread-2 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:25.995894 [debug] [Thread-2 (]: On model.nfl.busiest_specific_times: ROLLBACK
[0m13:57:25.996295 [debug] [Thread-4 (]: SQL status: OK in 0.045 seconds
[0m13:57:25.997844 [debug] [Thread-4 (]: Using duckdb connection "model.nfl.hourly_riders"
[0m13:57:25.998953 [debug] [Thread-4 (]: On model.nfl.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.hourly_riders"} */

  
    
    

    create  table
      "nfl_database"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC;
    );
  
  
[0m13:57:25.999803 [debug] [Thread-4 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.hourly_riders"} */

  
    
    

    create  table
      "nfl_database"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC;
    );
  
  
[0m13:57:26.000613 [debug] [Thread-4 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:26.001006 [debug] [Thread-7 (]: SQL status: OK in 0.050 seconds
[0m13:57:26.002620 [debug] [Thread-4 (]: On model.nfl.hourly_riders: ROLLBACK
[0m13:57:26.004011 [debug] [Thread-7 (]: Using duckdb connection "model.nfl.total_riders_per_station"
[0m13:57:26.004977 [debug] [Thread-7 (]: On model.nfl.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.total_riders_per_station"} */

  
    
    

    create  table
      "nfl_database"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC;
    );
  
  
[0m13:57:26.005928 [debug] [Thread-7 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.total_riders_per_station"} */

  
    
    

    create  table
      "nfl_database"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "nfl_database"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC;
    );
  
  
[0m13:57:26.006573 [debug] [Thread-1 (]: Failed to rollback 'model.nfl.avg_riders_per_day'
[0m13:57:26.007459 [debug] [Thread-2 (]: Failed to rollback 'model.nfl.busiest_specific_times'
[0m13:57:26.007979 [debug] [Thread-3 (]: Failed to rollback 'model.nfl.fare_class_boro'
[0m13:57:26.008743 [debug] [Thread-7 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:26.009686 [debug] [Thread-4 (]: Failed to rollback 'model.nfl.hourly_riders'
[0m13:57:26.010189 [debug] [Thread-1 (]: On model.nfl.avg_riders_per_day: Close
[0m13:57:26.010531 [debug] [Thread-5 (]: SQL status: OK in 0.053 seconds
[0m13:57:26.010965 [debug] [Thread-2 (]: On model.nfl.busiest_specific_times: Close
[0m13:57:26.011367 [debug] [Thread-6 (]: SQL status: OK in 0.053 seconds
[0m13:57:26.011679 [debug] [Thread-3 (]: On model.nfl.fare_class_boro: Close
[0m13:57:26.012127 [debug] [Thread-7 (]: On model.nfl.total_riders_per_station: ROLLBACK
[0m13:57:26.012521 [debug] [Thread-4 (]: On model.nfl.hourly_riders: Close
[0m13:57:26.013251 [debug] [Thread-5 (]: Using duckdb connection "model.nfl.omny_adoption_by_station"
[0m13:57:26.013820 [debug] [Thread-1 (]: Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.014591 [debug] [Thread-6 (]: Using duckdb connection "model.nfl.omny_adoption_increase"
[0m13:57:26.015202 [debug] [Thread-2 (]: Runtime Error in model busiest_specific_times (models/busiest_specific_times.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.016559 [debug] [Thread-7 (]: Failed to rollback 'model.nfl.total_riders_per_station'
[0m13:57:26.017206 [debug] [Thread-3 (]: Runtime Error in model fare_class_boro (models/fare_class_boro.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.018323 [debug] [Thread-5 (]: On model.nfl.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.omny_adoption_by_station"} */

  
    
    

    create  table
      "nfl_database"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC;
    );
  
  
[0m13:57:26.019109 [debug] [Thread-4 (]: Runtime Error in model hourly_riders (models/hourly_riders.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.020569 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08e58a830>]}
[0m13:57:26.021051 [debug] [Thread-6 (]: On model.nfl.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.omny_adoption_increase"} */

  
    
    

    create  table
      "nfl_database"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m13:57:26.021595 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b321ff0>]}
[0m13:57:26.022007 [debug] [Thread-7 (]: On model.nfl.total_riders_per_station: Close
[0m13:57:26.022415 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b4d6bf0>]}
[0m13:57:26.023721 [debug] [Thread-5 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.omny_adoption_by_station"} */

  
    
    

    create  table
      "nfl_database"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC;
    );
  
  
[0m13:57:26.024249 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b587100>]}
[0m13:57:26.024887 [error] [Thread-1 (]: 1 of 7 ERROR creating sql table model main.avg_riders_per_day .................. [[31mERROR[0m in 0.16s]
[0m13:57:26.026130 [error] [Thread-2 (]: 2 of 7 ERROR creating sql table model main.busiest_specific_times .............. [[31mERROR[0m in 0.16s]
[0m13:57:26.028125 [error] [Thread-3 (]: 3 of 7 ERROR creating sql table model main.fare_class_boro ..................... [[31mERROR[0m in 0.16s]
[0m13:57:26.029004 [debug] [Thread-5 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:26.029693 [debug] [Thread-7 (]: Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.030461 [error] [Thread-4 (]: 4 of 7 ERROR creating sql table model main.hourly_riders ....................... [[31mERROR[0m in 0.16s]
[0m13:57:26.031245 [debug] [Thread-1 (]: Finished running node model.nfl.avg_riders_per_day
[0m13:57:26.031996 [debug] [Thread-2 (]: Finished running node model.nfl.busiest_specific_times
[0m13:57:26.032744 [debug] [Thread-3 (]: Finished running node model.nfl.fare_class_boro
[0m13:57:26.033965 [debug] [Thread-5 (]: On model.nfl.omny_adoption_by_station: ROLLBACK
[0m13:57:26.034731 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b31b820>]}
[0m13:57:26.035423 [debug] [Thread-4 (]: Finished running node model.nfl.hourly_riders
[0m13:57:26.037440 [error] [Thread-7 (]: 7 of 7 ERROR creating sql table model main.total_riders_per_station ............ [[31mERROR[0m in 0.16s]
[0m13:57:26.038716 [debug] [Thread-5 (]: Failed to rollback 'model.nfl.omny_adoption_by_station'
[0m13:57:26.039297 [debug] [Thread-7 (]: Finished running node model.nfl.total_riders_per_station
[0m13:57:26.039701 [debug] [Thread-5 (]: On model.nfl.omny_adoption_by_station: Close
[0m13:57:26.041108 [debug] [Thread-5 (]: Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.041536 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b452bf0>]}
[0m13:57:26.042076 [error] [Thread-5 (]: 5 of 7 ERROR creating sql table model main.omny_adoption_by_station ............ [[31mERROR[0m in 0.18s]
[0m13:57:26.042564 [debug] [Thread-5 (]: Finished running node model.nfl.omny_adoption_by_station
[0m13:57:26.055236 [debug] [Thread-6 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.nfl.omny_adoption_increase"} */

  
    
    

    create  table
      "nfl_database"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "nfl_database"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m13:57:26.056277 [debug] [Thread-6 (]: DuckDB adapter: Rolling back transaction.
[0m13:57:26.057755 [debug] [Thread-6 (]: On model.nfl.omny_adoption_increase: ROLLBACK
[0m13:57:26.059061 [debug] [Thread-6 (]: Failed to rollback 'model.nfl.omny_adoption_increase'
[0m13:57:26.059498 [debug] [Thread-6 (]: On model.nfl.omny_adoption_increase: Close
[0m13:57:26.062741 [debug] [Thread-6 (]: Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "temp.information_schema.schemata"?
  LINE 22:         "nfl_database"."main"."mta_hourly_subway_socrata"
      WHERE 
          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_percentage_by_station AS (
      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
      SELECT 
          station_complex_id, 
          station_complex, 
          latitude, 
          longitude, 
          year, 
          (omny_ridership / total_ridership) AS omny_percentage
      FROM 
          omny_ridership_by_station_year
  )
  SELECT 
      s2023.station_complex_id AS station_id, 
      s2023.station_complex AS station_name,
      s2023.latitude,
      s2023.longitude,
      s2023.omny_percentage AS omny_percentage_2023,
      s2024.omny_percentage AS omny_percentage_2024,
      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
  FROM 
      omny_percentage_by_station s2023
  JOIN 
      omny_percentage_by_station s2024 
      ON s2023.station_complex_id = s2024.station_complex_id
      AND s2023.latitude = s2024.latitude
      AND s2023.longitude = s2024.longitude
      AND s2023.year = 2023
      AND s2024.year = 2024
  WHERE 
      s2024.omny_percentage > s2023.omny_percentage
  ORDER BY 
      omny_percentage_increase DESC
      );
    
    ...
                   ^
[0m13:57:26.063284 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '134466d0-a9a9-41ce-86c9-280e89a09cca', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b4513f0>]}
[0m13:57:26.063879 [error] [Thread-6 (]: 6 of 7 ERROR creating sql table model main.omny_adoption_increase .............. [[31mERROR[0m in 0.19s]
[0m13:57:26.064514 [debug] [Thread-6 (]: Finished running node model.nfl.omny_adoption_increase
[0m13:57:26.067871 [debug] [MainThread]: Using duckdb connection "master"
[0m13:57:26.068644 [debug] [MainThread]: On master: BEGIN
[0m13:57:26.069105 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:57:26.076913 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m13:57:26.077409 [debug] [MainThread]: On master: COMMIT
[0m13:57:26.077722 [debug] [MainThread]: Using duckdb connection "master"
[0m13:57:26.077977 [debug] [MainThread]: On master: COMMIT
[0m13:57:26.078492 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:57:26.078809 [debug] [MainThread]: On master: Close
[0m13:57:26.080951 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:57:26.081314 [debug] [MainThread]: Connection 'model.nfl.omny_adoption_by_station' was properly closed.
[0m13:57:26.081564 [debug] [MainThread]: Connection 'model.nfl.avg_riders_per_day' was properly closed.
[0m13:57:26.081782 [debug] [MainThread]: Connection 'model.nfl.busiest_specific_times' was properly closed.
[0m13:57:26.081987 [debug] [MainThread]: Connection 'model.nfl.fare_class_boro' was properly closed.
[0m13:57:26.082187 [debug] [MainThread]: Connection 'model.nfl.hourly_riders' was properly closed.
[0m13:57:26.082394 [debug] [MainThread]: Connection 'model.nfl.omny_adoption_increase' was properly closed.
[0m13:57:26.082603 [debug] [MainThread]: Connection 'model.nfl.total_riders_per_station' was properly closed.
[0m13:57:26.083072 [info ] [MainThread]: 
[0m13:57:26.083517 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 0.44 seconds (0.44s).
[0m13:57:26.085177 [debug] [MainThread]: Command end result
[0m13:57:26.174707 [info ] [MainThread]: 
[0m13:57:26.175211 [info ] [MainThread]: [31mCompleted with 7 errors and 0 warnings:[0m
[0m13:57:26.175518 [info ] [MainThread]: 
[0m13:57:26.175862 [error] [MainThread]:   Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.176126 [info ] [MainThread]: 
[0m13:57:26.176426 [error] [MainThread]:   Runtime Error in model busiest_specific_times (models/busiest_specific_times.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.176671 [info ] [MainThread]: 
[0m13:57:26.176955 [error] [MainThread]:   Runtime Error in model fare_class_boro (models/fare_class_boro.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.177192 [info ] [MainThread]: 
[0m13:57:26.177466 [error] [MainThread]:   Runtime Error in model hourly_riders (models/hourly_riders.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.177699 [info ] [MainThread]: 
[0m13:57:26.177973 [error] [MainThread]:   Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.178206 [info ] [MainThread]: 
[0m13:57:26.178488 [error] [MainThread]:   Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Parser Error: syntax error at or near ";"
[0m13:57:26.178721 [info ] [MainThread]: 
[0m13:57:26.179028 [error] [MainThread]:   Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "temp.information_schema.schemata"?
  LINE 22:         "nfl_database"."main"."mta_hourly_subway_socrata"
      WHERE 
          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_percentage_by_station AS (
      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
      SELECT 
          station_complex_id, 
          station_complex, 
          latitude, 
          longitude, 
          year, 
          (omny_ridership / total_ridership) AS omny_percentage
      FROM 
          omny_ridership_by_station_year
  )
  SELECT 
      s2023.station_complex_id AS station_id, 
      s2023.station_complex AS station_name,
      s2023.latitude,
      s2023.longitude,
      s2023.omny_percentage AS omny_percentage_2023,
      s2024.omny_percentage AS omny_percentage_2024,
      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
  FROM 
      omny_percentage_by_station s2023
  JOIN 
      omny_percentage_by_station s2024 
      ON s2023.station_complex_id = s2024.station_complex_id
      AND s2023.latitude = s2024.latitude
      AND s2023.longitude = s2024.longitude
      AND s2023.year = 2023
      AND s2024.year = 2024
  WHERE 
      s2024.omny_percentage > s2023.omny_percentage
  ORDER BY 
      omny_percentage_increase DESC
      );
    
    ...
                   ^
[0m13:57:26.179417 [info ] [MainThread]: 
[0m13:57:26.179702 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=7 SKIP=0 TOTAL=7
[0m13:57:26.182772 [debug] [MainThread]: Resource report: {"command_name": "build", "command_wall_clock_time": 2.0096865, "process_user_time": 2.654633, "process_kernel_time": 0.435835, "process_mem_max_rss": "206684", "process_in_blocks": "42648", "process_out_blocks": "2864", "command_success": false}
[0m13:57:26.183823 [debug] [MainThread]: Command `dbt build` failed at 13:57:26.183606 after 2.01 seconds
[0m13:57:26.184353 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff08f24f400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff0805d65f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff07b4e3820>]}
[0m13:57:26.184769 [debug] [MainThread]: Flushing usage events
[0m13:59:29.322568 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd275cdb430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd27441d9c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd27441da20>]}


============================== 13:59:29.324833 | 5e5d64e5-4300-46ff-96f8-e12648004637 ==============================
[0m13:59:29.324833 [info ] [MainThread]: Running with dbt=1.8.7
[0m13:59:29.325331 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'warn_error': 'None', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt build', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m13:59:29.497115 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd269113580>]}
[0m13:59:29.545501 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2743d6380>]}
[0m13:59:29.547939 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m13:59:29.557987 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m13:59:29.632113 [info ] [MainThread]: Unable to do partial parsing because profile has changed
[0m13:59:29.632674 [info ] [MainThread]: Unable to do partial parsing because a project dependency has been added
[0m13:59:29.633017 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2750150c0>]}
[0m13:59:30.488820 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd262b71b70>]}
[0m13:59:30.553395 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd262b4aa70>]}
[0m13:59:30.553891 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m13:59:30.555486 [info ] [MainThread]: 
[0m13:59:30.556022 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:59:30.559822 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m13:59:30.582291 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m13:59:30.582823 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m13:59:30.583133 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:59:30.601153 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m13:59:30.602326 [debug] [ThreadPool]: On list_lake: Close
[0m13:59:30.605396 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m13:59:30.605858 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m13:59:30.610760 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:30.611215 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m13:59:30.611510 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:59:30.618383 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m13:59:30.619654 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:30.620022 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m13:59:30.620637 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:30.620893 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:30.621124 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m13:59:30.621555 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:30.622158 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m13:59:30.622429 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:30.622642 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m13:59:30.623107 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:30.623337 [debug] [ThreadPool]: On create_lake_main: Close
[0m13:59:30.626764 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m13:59:30.631244 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m13:59:30.631833 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m13:59:30.632163 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:59:30.637589 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m13:59:30.638037 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m13:59:30.638338 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m13:59:30.655038 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m13:59:30.657576 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m13:59:30.658066 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m13:59:30.658325 [debug] [ThreadPool]: On list_lake_main: Close
[0m13:59:30.661279 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd262a054b0>]}
[0m13:59:30.661672 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:30.661907 [debug] [MainThread]: On master: BEGIN
[0m13:59:30.662138 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:59:30.667322 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m13:59:30.667650 [debug] [MainThread]: On master: COMMIT
[0m13:59:30.667921 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:30.668163 [debug] [MainThread]: On master: COMMIT
[0m13:59:30.668561 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:59:30.668806 [debug] [MainThread]: On master: Close
[0m13:59:30.670591 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m13:59:30.670954 [info ] [MainThread]: 
[0m13:59:30.677425 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m13:59:30.677928 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m13:59:30.678446 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m13:59:30.679491 [debug] [Thread-4 (]: Began running node model.mta.hourly_riders
[0m13:59:30.679916 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m13:59:30.680380 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m13:59:30.679115 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m13:59:30.680983 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m13:59:30.681441 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m13:59:30.682192 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m13:59:30.682743 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m13:59:30.683302 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m13:59:30.683871 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m13:59:30.684582 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m13:59:30.685297 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m13:59:30.685912 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m13:59:30.686634 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m13:59:30.687194 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.hourly_riders'
[0m13:59:30.688616 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_by_station)
[0m13:59:30.689723 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m13:59:30.690455 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m13:59:30.691074 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m13:59:30.691810 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m13:59:30.692515 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m13:59:30.693334 [debug] [Thread-4 (]: Began compiling node model.mta.hourly_riders
[0m13:59:30.694040 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m13:59:30.694512 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m13:59:30.702645 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m13:59:30.707230 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m13:59:30.707819 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m13:59:30.710554 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m13:59:30.713398 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.hourly_riders"
[0m13:59:30.716318 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m13:59:30.719883 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m13:59:30.722791 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m13:59:30.723723 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m13:59:30.725095 [debug] [Thread-4 (]: Began executing node model.mta.hourly_riders
[0m13:59:30.725541 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m13:59:30.726140 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m13:59:30.726902 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m13:59:30.727837 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m13:59:30.733950 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m13:59:30.817254 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.hourly_riders"
[0m13:59:30.818802 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m13:59:30.821645 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m13:59:30.824212 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m13:59:30.826808 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m13:59:30.829513 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m13:59:30.832096 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m13:59:30.834374 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:30.834875 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:30.835304 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:30.835637 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:30.836236 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:30.836727 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:30.837139 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m13:59:30.837476 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:30.837827 [debug] [Thread-4 (]: On model.mta.hourly_riders: BEGIN
[0m13:59:30.838163 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m13:59:30.838488 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m13:59:30.838838 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m13:59:30.839207 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m13:59:30.839565 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m13:59:30.839909 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m13:59:30.840247 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m13:59:30.840572 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m13:59:30.840901 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m13:59:30.841247 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m13:59:30.841587 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m13:59:30.848448 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m13:59:30.849969 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m13:59:30.850517 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:30.850880 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m13:59:30.852669 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m13:59:30.853048 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:30.853379 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m13:59:30.854192 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m13:59:30.854634 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:30.854991 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m13:59:30.857042 [debug] [Thread-2 (]: SQL status: OK in 0.016 seconds
[0m13:59:30.857532 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:30.858001 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m13:59:30.859516 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m13:59:30.860004 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:30.860482 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m13:59:30.861629 [debug] [Thread-6 (]: SQL status: OK in 0.020 seconds
[0m13:59:30.862078 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:30.862480 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m13:59:30.863855 [debug] [Thread-7 (]: SQL status: OK in 0.015 seconds
[0m13:59:30.864275 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:30.864656 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m13:59:32.915943 [debug] [Thread-2 (]: SQL status: OK in 2.057 seconds
[0m13:59:32.968653 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:32.969839 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m13:59:32.981220 [debug] [Thread-2 (]: SQL status: OK in 0.010 seconds
[0m13:59:33.088698 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m13:59:33.089747 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:33.090515 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m13:59:33.153432 [debug] [Thread-2 (]: SQL status: OK in 0.061 seconds
[0m13:59:33.165484 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:33.166521 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m13:59:33.178428 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m13:59:33.187307 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m13:59:33.190819 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd275d67550>]}
[0m13:59:33.206005 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 2.50s]
[0m13:59:33.210020 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m13:59:37.400402 [debug] [Thread-7 (]: SQL status: OK in 6.535 seconds
[0m13:59:37.408754 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:37.402442 [debug] [Thread-1 (]: SQL status: OK in 6.551 seconds
[0m13:59:37.409706 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m13:59:37.433411 [debug] [Thread-7 (]: SQL status: OK in 0.004 seconds
[0m13:59:37.436681 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m13:59:37.445026 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:37.445885 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m13:59:37.444137 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:37.447915 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m13:59:37.449396 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:37.452695 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m13:59:37.453525 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m13:59:37.454402 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:37.459442 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:37.484799 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m13:59:37.487107 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m13:59:37.490172 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m13:59:37.491942 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2690e9ab0>]}
[0m13:59:37.493401 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 6.80s]
[0m13:59:37.483707 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m13:59:37.495462 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m13:59:37.506675 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m13:59:37.515752 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:37.516778 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m13:59:37.518435 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m13:59:37.521428 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m13:59:37.523972 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd268e661d0>]}
[0m13:59:37.526347 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 6.84s]
[0m13:59:37.531449 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m13:59:37.768773 [debug] [Thread-4 (]: SQL status: OK in 6.915 seconds
[0m13:59:37.775019 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:37.776154 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
alter table "lake"."main"."hourly_riders__dbt_tmp" rename to "hourly_riders"
[0m13:59:37.789814 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m13:59:37.793156 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m13:59:37.794101 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:37.794822 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m13:59:37.864914 [debug] [Thread-4 (]: SQL status: OK in 0.069 seconds
[0m13:59:37.873563 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:37.874499 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
drop table if exists "lake"."main"."hourly_riders__dbt_backup" cascade
[0m13:59:37.878787 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m13:59:37.883418 [debug] [Thread-4 (]: On model.mta.hourly_riders: Close
[0m13:59:37.884659 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd261b777f0>]}
[0m13:59:37.885937 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.hourly_riders ........................... [[32mOK[0m in 7.20s]
[0m13:59:37.887318 [debug] [Thread-4 (]: Finished running node model.mta.hourly_riders
[0m13:59:39.606536 [debug] [Thread-3 (]: SQL status: OK in 8.751 seconds
[0m13:59:39.614533 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:39.616002 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m13:59:39.620002 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m13:59:39.626212 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m13:59:39.644817 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:39.649256 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m13:59:39.667337 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m13:59:39.706926 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:39.708317 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m13:59:39.709924 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m13:59:39.713316 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m13:59:39.718629 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd261b40d90>]}
[0m13:59:39.720810 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 9.03s]
[0m13:59:39.723088 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m13:59:40.540510 [debug] [Thread-6 (]: SQL status: OK in 9.677 seconds
[0m13:59:40.544578 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:40.545137 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m13:59:40.546101 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m13:59:40.547690 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m13:59:40.548091 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:40.548456 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m13:59:40.552503 [debug] [Thread-6 (]: SQL status: OK in 0.004 seconds
[0m13:59:40.555252 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:40.555741 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m13:59:40.556641 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m13:59:40.558051 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m13:59:40.558778 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2680fef50>]}
[0m13:59:40.559455 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 9.87s]
[0m13:59:40.560457 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m13:59:40.563904 [debug] [Thread-5 (]: SQL status: OK in 9.703 seconds
[0m13:59:40.567118 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:40.567641 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m13:59:40.568983 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m13:59:40.570581 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m13:59:40.570975 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:40.571291 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m13:59:40.576416 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m13:59:40.581270 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:40.581840 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m13:59:40.583884 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m13:59:40.586024 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m13:59:40.667678 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5e5d64e5-4300-46ff-96f8-e12648004637', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd268f39d80>]}
[0m13:59:40.668494 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 9.98s]
[0m13:59:40.669115 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m13:59:40.672006 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:40.672372 [debug] [MainThread]: On master: BEGIN
[0m13:59:40.672641 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:59:40.685126 [debug] [MainThread]: SQL status: OK in 0.012 seconds
[0m13:59:40.685720 [debug] [MainThread]: On master: COMMIT
[0m13:59:40.686305 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:40.686692 [debug] [MainThread]: On master: COMMIT
[0m13:59:40.687817 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m13:59:40.688206 [debug] [MainThread]: On master: Close
[0m13:59:40.690577 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:59:40.690907 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m13:59:40.691155 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m13:59:40.691375 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m13:59:40.691607 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m13:59:40.691859 [debug] [MainThread]: Connection 'model.mta.hourly_riders' was properly closed.
[0m13:59:40.692119 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m13:59:40.692388 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m13:59:40.692921 [info ] [MainThread]: 
[0m13:59:40.693352 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 10.14 seconds (10.14s).
[0m13:59:40.694787 [debug] [MainThread]: Command end result
[0m13:59:40.721908 [info ] [MainThread]: 
[0m13:59:40.722460 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:59:40.722822 [info ] [MainThread]: 
[0m13:59:40.723142 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m13:59:40.723957 [debug] [MainThread]: Resource report: {"command_name": "build", "command_success": true, "command_wall_clock_time": 11.445572, "process_user_time": 114.76515, "process_kernel_time": 11.114711, "process_mem_max_rss": "455404", "process_in_blocks": "1051680", "process_out_blocks": "13088"}
[0m13:59:40.724677 [debug] [MainThread]: Command `dbt build` succeeded at 13:59:40.724565 after 11.45 seconds
[0m13:59:40.725058 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd275cdb430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2749fc1f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd2743f82b0>]}
[0m13:59:40.725396 [debug] [MainThread]: Flushing usage events
[0m13:59:47.069309 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9f57400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9b2c3a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce8601ea0>]}


============================== 13:59:47.071238 | 10933252-4b8d-453d-9424-60060e9d47d7 ==============================
[0m13:59:47.071238 [info ] [MainThread]: Running with dbt=1.8.7
[0m13:59:47.071728 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'warn_error': 'None', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt run', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m13:59:47.241594 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce85a60e0>]}
[0m13:59:47.296891 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9262800>]}
[0m13:59:47.299404 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m13:59:47.306719 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m13:59:47.384899 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m13:59:47.385345 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m13:59:47.412358 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdd1398d0>]}
[0m13:59:47.475656 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdd2cdde0>]}
[0m13:59:47.476267 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m13:59:47.476679 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdd2cec80>]}
[0m13:59:47.478263 [info ] [MainThread]: 
[0m13:59:47.478855 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m13:59:47.483074 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m13:59:47.509664 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m13:59:47.511625 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m13:59:47.512149 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m13:59:47.521672 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m13:59:47.522948 [debug] [ThreadPool]: On list_lake: Close
[0m13:59:47.527149 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m13:59:47.528730 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m13:59:47.534289 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:47.534801 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m13:59:47.535083 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:59:47.542662 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m13:59:47.544144 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:47.544668 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m13:59:47.545271 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:47.545510 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:47.545728 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m13:59:47.546243 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:47.546851 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m13:59:47.547077 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m13:59:47.547268 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m13:59:47.547669 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m13:59:47.547905 [debug] [ThreadPool]: On create_lake_main: Close
[0m13:59:47.551376 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m13:59:47.556076 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m13:59:47.556560 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m13:59:47.556854 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m13:59:47.563701 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m13:59:47.564226 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m13:59:47.564820 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m13:59:47.581708 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m13:59:47.586965 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m13:59:47.587581 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m13:59:47.587915 [debug] [ThreadPool]: On list_lake_main: Close
[0m13:59:47.591814 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce8706d40>]}
[0m13:59:47.592207 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:47.592475 [debug] [MainThread]: On master: BEGIN
[0m13:59:47.592701 [debug] [MainThread]: Opening a new connection, currently in state init
[0m13:59:47.597864 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m13:59:47.598141 [debug] [MainThread]: On master: COMMIT
[0m13:59:47.598358 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:47.598561 [debug] [MainThread]: On master: COMMIT
[0m13:59:47.598897 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:59:47.599121 [debug] [MainThread]: On master: Close
[0m13:59:47.600452 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m13:59:47.600767 [info ] [MainThread]: 
[0m13:59:47.610707 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m13:59:47.611376 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m13:59:47.611934 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m13:59:47.613299 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m13:59:47.613823 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m13:59:47.614382 [debug] [Thread-4 (]: Began running node model.mta.hourly_riders
[0m13:59:47.615283 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m13:59:47.614918 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m13:59:47.615875 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m13:59:47.616322 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m13:59:47.617235 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m13:59:47.616818 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m13:59:47.618920 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m13:59:47.620867 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m13:59:47.621721 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m13:59:47.622414 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m13:59:47.629633 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m13:59:47.630523 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m13:59:47.631715 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m13:59:47.632587 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.hourly_riders'
[0m13:59:47.633180 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_by_station)
[0m13:59:47.633699 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m13:59:47.634275 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m13:59:47.635801 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m13:59:47.636870 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m13:59:47.637943 [debug] [Thread-4 (]: Began compiling node model.mta.hourly_riders
[0m13:59:47.638623 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m13:59:47.639094 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m13:59:47.642685 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m13:59:47.643338 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m13:59:47.644094 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m13:59:47.647334 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m13:59:47.649933 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.hourly_riders"
[0m13:59:47.674722 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m13:59:47.684309 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m13:59:47.685087 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m13:59:47.738184 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m13:59:47.740254 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m13:59:47.741066 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m13:59:47.741789 [debug] [Thread-4 (]: Began executing node model.mta.hourly_riders
[0m13:59:47.742361 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m13:59:47.745931 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m13:59:47.746480 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:47.750420 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m13:59:47.750937 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m13:59:47.754444 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.hourly_riders"
[0m13:59:47.754996 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m13:59:47.758285 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m13:59:47.759192 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m13:59:47.763555 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m13:59:47.764854 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:47.765533 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:47.766273 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:47.770358 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m13:59:47.771376 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m13:59:47.772219 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m13:59:47.773049 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:47.773460 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m13:59:47.773813 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:47.774366 [debug] [Thread-4 (]: On model.mta.hourly_riders: BEGIN
[0m13:59:47.780379 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m13:59:47.781189 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:47.781644 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m13:59:47.782242 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m13:59:47.782633 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m13:59:47.783064 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m13:59:47.783459 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m13:59:47.784012 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m13:59:47.784426 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m13:59:47.785014 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:47.785418 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m13:59:47.786245 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m13:59:47.787803 [debug] [Thread-3 (]: SQL status: OK in 0.007 seconds
[0m13:59:47.788208 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m13:59:47.788927 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:47.789861 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m13:59:47.790667 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m13:59:47.791468 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:47.792018 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m13:59:47.793291 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m13:59:47.793706 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:47.794954 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m13:59:47.796487 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m13:59:47.796877 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:47.797278 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m13:59:47.798387 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m13:59:47.798938 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:47.799346 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m13:59:47.803512 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m13:59:47.803996 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:47.804494 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m13:59:49.555606 [debug] [Thread-1 (]: SQL status: OK in 1.766 seconds
[0m13:59:49.610117 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:49.633952 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m13:59:49.635806 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:49.646322 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:49.648991 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m13:59:49.650297 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m13:59:49.754294 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m13:59:49.755433 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:49.756551 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m13:59:49.790245 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m13:59:49.819211 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m13:59:49.820080 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m13:59:49.832828 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m13:59:49.837330 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m13:59:49.840076 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdc525600>]}
[0m13:59:49.841522 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.23s]
[0m13:59:49.842666 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m13:59:51.265619 [debug] [Thread-2 (]: SQL status: OK in 3.473 seconds
[0m13:59:51.271799 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:51.272895 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m13:59:51.296555 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m13:59:51.306082 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:51.308130 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m13:59:51.311415 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m13:59:51.317483 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m13:59:51.334977 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:51.335784 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m13:59:51.343279 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m13:59:51.348453 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m13:59:51.349224 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m13:59:51.356125 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m13:59:51.359755 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m13:59:51.361136 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce8529e40>]}
[0m13:59:51.362310 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 3.74s]
[0m13:59:51.363320 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m13:59:53.766020 [debug] [Thread-6 (]: SQL status: OK in 5.961 seconds
[0m13:59:53.771415 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:53.785004 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m13:59:53.786502 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m13:59:53.792002 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:53.792917 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m13:59:53.819155 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m13:59:53.823087 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m13:59:53.823845 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:53.824853 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m13:59:53.843063 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m13:59:53.847716 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m13:59:53.848516 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m13:59:53.854802 [debug] [Thread-6 (]: SQL status: OK in 0.005 seconds
[0m13:59:53.857752 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m13:59:53.859111 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdc5ae050>]}
[0m13:59:53.860261 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.22s]
[0m13:59:53.861354 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m13:59:54.025953 [debug] [Thread-7 (]: SQL status: OK in 6.226 seconds
[0m13:59:54.045722 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:54.046862 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m13:59:54.048450 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m13:59:54.054874 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:54.055769 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m13:59:54.057076 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m13:59:54.060362 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m13:59:54.075023 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:54.075813 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m13:59:54.082290 [debug] [Thread-5 (]: SQL status: OK in 6.284 seconds
[0m13:59:54.088969 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:54.089832 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m13:59:54.104916 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m13:59:54.112222 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m13:59:54.113114 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m13:59:54.114226 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m13:59:54.119619 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:54.121087 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m13:59:54.124474 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m13:59:54.128860 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m13:59:54.137555 [debug] [Thread-7 (]: SQL status: OK in 0.024 seconds
[0m13:59:54.138452 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:54.143288 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m13:59:54.145241 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9d72140>]}
[0m13:59:54.146592 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 6.51s]
[0m13:59:54.147957 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m13:59:54.144178 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m13:59:54.164621 [debug] [Thread-5 (]: SQL status: OK in 0.015 seconds
[0m13:59:54.170224 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m13:59:54.172952 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m13:59:54.196244 [debug] [Thread-5 (]: SQL status: OK in 0.021 seconds
[0m13:59:54.200169 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m13:59:54.201473 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdc5ad4e0>]}
[0m13:59:54.202617 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 6.57s]
[0m13:59:54.203525 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m13:59:55.138166 [debug] [Thread-4 (]: SQL status: OK in 7.342 seconds
[0m13:59:55.143497 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:55.144451 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
alter table "lake"."main"."hourly_riders" rename to "hourly_riders__dbt_backup"
[0m13:59:55.145766 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m13:59:55.150274 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:55.151007 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
alter table "lake"."main"."hourly_riders__dbt_tmp" rename to "hourly_riders"
[0m13:59:55.152067 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m13:59:55.154729 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m13:59:55.155412 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:55.156107 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m13:59:55.187306 [debug] [Thread-4 (]: SQL status: OK in 0.030 seconds
[0m13:59:55.192186 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m13:59:55.193034 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
drop table if exists "lake"."main"."hourly_riders__dbt_backup" cascade
[0m13:59:55.200632 [debug] [Thread-4 (]: SQL status: OK in 0.007 seconds
[0m13:59:55.203008 [debug] [Thread-4 (]: On model.mta.hourly_riders: Close
[0m13:59:55.203911 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdd143df0>]}
[0m13:59:55.204943 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.hourly_riders ........................... [[32mOK[0m in 7.57s]
[0m13:59:55.205910 [debug] [Thread-4 (]: Finished running node model.mta.hourly_riders
[0m13:59:55.246514 [debug] [Thread-3 (]: SQL status: OK in 7.456 seconds
[0m13:59:55.250029 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:55.250535 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m13:59:55.251494 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m13:59:55.253969 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:55.254325 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m13:59:55.255140 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m13:59:55.256729 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m13:59:55.257084 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:55.257392 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m13:59:55.261171 [debug] [Thread-3 (]: SQL status: OK in 0.003 seconds
[0m13:59:55.264672 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m13:59:55.265032 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m13:59:55.267931 [debug] [Thread-3 (]: SQL status: OK in 0.003 seconds
[0m13:59:55.269122 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m13:59:55.335891 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '10933252-4b8d-453d-9424-60060e9d47d7', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3cdc39c9a0>]}
[0m13:59:55.336697 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 7.70s]
[0m13:59:55.337262 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m13:59:55.340187 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:55.340518 [debug] [MainThread]: On master: BEGIN
[0m13:59:55.340785 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m13:59:55.347133 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m13:59:55.347633 [debug] [MainThread]: On master: COMMIT
[0m13:59:55.347960 [debug] [MainThread]: Using duckdb connection "master"
[0m13:59:55.348237 [debug] [MainThread]: On master: COMMIT
[0m13:59:55.348802 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m13:59:55.349110 [debug] [MainThread]: On master: Close
[0m13:59:55.351482 [debug] [MainThread]: Connection 'master' was properly closed.
[0m13:59:55.352163 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m13:59:55.352435 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m13:59:55.352647 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m13:59:55.352825 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m13:59:55.353010 [debug] [MainThread]: Connection 'model.mta.hourly_riders' was properly closed.
[0m13:59:55.353181 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m13:59:55.353374 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m13:59:55.353770 [info ] [MainThread]: 
[0m13:59:55.354153 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 7.87 seconds (7.87s).
[0m13:59:55.355575 [debug] [MainThread]: Command end result
[0m13:59:55.383951 [info ] [MainThread]: 
[0m13:59:55.384692 [info ] [MainThread]: [32mCompleted successfully[0m
[0m13:59:55.385110 [info ] [MainThread]: 
[0m13:59:55.385506 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m13:59:55.386470 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 8.360214, "process_user_time": 111.31652, "process_kernel_time": 3.601798, "process_mem_max_rss": "465472", "process_in_blocks": "8464", "process_out_blocks": "12304"}
[0m13:59:55.387958 [debug] [MainThread]: Command `dbt run` succeeded at 13:59:55.387706 after 8.36 seconds
[0m13:59:55.388527 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9f57400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9262800>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f3ce9297790>]}
[0m13:59:55.388948 [debug] [MainThread]: Flushing usage events
[0m14:33:48.742037 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f91184cb490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f91180765f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9116b76920>]}


============================== 14:33:48.747716 | 0a3fdf4e-a10d-4310-b8a9-752b1db1d197 ==============================
[0m14:33:48.747716 [info ] [MainThread]: Running with dbt=1.8.7
[0m14:33:48.748154 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m14:33:49.037534 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0a3fdf4e-a10d-4310-b8a9-752b1db1d197', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9118590ac0>]}
[0m14:33:49.092287 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0a3fdf4e-a10d-4310-b8a9-752b1db1d197', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9116bacfd0>]}
[0m14:33:49.097389 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m14:33:49.106872 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m14:33:49.212250 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:33:49.212616 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:33:49.236517 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0a3fdf4e-a10d-4310-b8a9-752b1db1d197', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f910b63d930>]}
[0m14:33:49.305226 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0a3fdf4e-a10d-4310-b8a9-752b1db1d197', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f910b7d9ff0>]}
[0m14:33:49.305800 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m14:33:49.306168 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0a3fdf4e-a10d-4310-b8a9-752b1db1d197', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f910b7d85e0>]}
[0m14:33:49.307757 [info ] [MainThread]: 
[0m14:33:49.308280 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:33:49.312581 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m14:33:49.369043 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m14:33:49.369491 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m14:33:49.369782 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:33:49.394903 [debug] [ThreadPool]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m14:33:49.395352 [debug] [ThreadPool]: DuckDB adapter: Rolling back transaction.
[0m14:33:49.396197 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:33:49.396498 [debug] [MainThread]: Connection 'list_lake' was properly closed.
[0m14:33:49.396762 [info ] [MainThread]: 
[0m14:33:49.397071 [info ] [MainThread]: Finished running  in 0 hours 0 minutes and 0.09 seconds (0.09s).
[0m14:33:49.397463 [error] [MainThread]: Encountered an error:
Runtime Error
  IO Error: Could not set lock on file "/home/christianocean/mta/lake.duckdb": Conflicting lock is held in /usr/bin/python3.10 (PID 2444975). See also https://duckdb.org/docs/connect/concurrency
[0m14:33:49.398934 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 0.7143306, "process_user_time": 1.4682, "process_kernel_time": 0.729106, "process_mem_max_rss": "132932", "process_in_blocks": "4152", "process_out_blocks": "904", "command_success": false}
[0m14:33:49.399390 [debug] [MainThread]: Command `dbt run` failed at 14:33:49.399305 after 0.71 seconds
[0m14:33:49.399704 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f91184cb490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f910b7d8d60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f910b6443a0>]}
[0m14:33:49.400017 [debug] [MainThread]: Flushing usage events
[0m14:33:59.682070 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3b145b460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3afcb9e10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3afcb8c70>]}


============================== 14:33:59.683919 | d48633a8-45b7-44fe-8f74-8e473e0ed85a ==============================
[0m14:33:59.683919 [info ] [MainThread]: Running with dbt=1.8.7
[0m14:33:59.684391 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m14:33:59.847569 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3b1518e20>]}
[0m14:33:59.896316 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3afaf8fd0>]}
[0m14:33:59.898794 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m14:33:59.906305 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m14:33:59.986408 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:33:59.986835 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:34:00.012758 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a4605930>]}
[0m14:34:00.077348 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a479f6a0>]}
[0m14:34:00.077840 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m14:34:00.078192 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a479dc60>]}
[0m14:34:00.079588 [info ] [MainThread]: 
[0m14:34:00.080130 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:34:00.084268 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m14:34:00.109791 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m14:34:00.111166 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m14:34:00.111558 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:34:00.153690 [debug] [ThreadPool]: SQL status: OK in 0.042 seconds
[0m14:34:00.157194 [debug] [ThreadPool]: On list_lake: Close
[0m14:34:00.159447 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m14:34:00.160189 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m14:34:00.164642 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:34:00.164935 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m14:34:00.165219 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:34:00.174892 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m14:34:00.176082 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:34:00.176407 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m14:34:00.177481 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m14:34:00.177755 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:34:00.177993 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m14:34:00.179075 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m14:34:00.179751 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:34:00.179992 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:34:00.180221 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:34:00.180640 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:34:00.180901 [debug] [ThreadPool]: On create_lake_main: Close
[0m14:34:00.183774 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m14:34:00.187645 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:34:00.187927 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m14:34:00.188159 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:34:00.195231 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m14:34:00.195753 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:34:00.196075 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m14:34:00.234037 [debug] [ThreadPool]: SQL status: OK in 0.038 seconds
[0m14:34:00.236680 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m14:34:00.239692 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m14:34:00.240146 [debug] [ThreadPool]: On list_lake_main: Close
[0m14:34:00.245376 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a460c370>]}
[0m14:34:00.245916 [debug] [MainThread]: Using duckdb connection "master"
[0m14:34:00.246299 [debug] [MainThread]: On master: BEGIN
[0m14:34:00.246550 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:34:00.252219 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m14:34:00.252523 [debug] [MainThread]: On master: COMMIT
[0m14:34:00.252801 [debug] [MainThread]: Using duckdb connection "master"
[0m14:34:00.253031 [debug] [MainThread]: On master: COMMIT
[0m14:34:00.253429 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:34:00.253667 [debug] [MainThread]: On master: Close
[0m14:34:00.255588 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m14:34:00.256058 [info ] [MainThread]: 
[0m14:34:00.264544 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m14:34:00.265207 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m14:34:00.265962 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m14:34:00.266582 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m14:34:00.267174 [debug] [Thread-4 (]: Began running node model.mta.hourly_riders
[0m14:34:00.267971 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m14:34:00.267590 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m14:34:00.269569 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m14:34:00.270713 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m14:34:00.270207 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m14:34:00.271939 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m14:34:00.272862 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m14:34:00.274131 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m14:34:00.276977 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m14:34:00.277973 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m14:34:00.279026 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m14:34:00.279951 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m14:34:00.281263 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m14:34:00.282512 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.hourly_riders'
[0m14:34:00.283337 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_by_station)
[0m14:34:00.284189 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m14:34:00.285529 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m14:34:00.286373 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m14:34:00.287037 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m14:34:00.293233 [debug] [Thread-4 (]: Began compiling node model.mta.hourly_riders
[0m14:34:00.295511 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m14:34:00.296310 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m14:34:00.300426 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m14:34:00.302858 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m14:34:00.303675 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m14:34:00.306920 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m14:34:00.309822 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.hourly_riders"
[0m14:34:00.312851 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m14:34:00.315667 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m14:34:00.316840 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m14:34:00.322175 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m14:34:00.372843 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m14:34:00.374167 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m14:34:00.375259 [debug] [Thread-4 (]: Began executing node model.mta.hourly_riders
[0m14:34:00.391185 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m14:34:00.391693 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m14:34:00.396865 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m14:34:00.399380 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m14:34:00.399791 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m14:34:00.402226 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m14:34:00.404411 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.hourly_riders"
[0m14:34:00.406727 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m14:34:00.409221 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m14:34:00.410004 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:34:00.412402 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m14:34:00.413001 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:34:00.413607 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:34:00.414342 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:34:00.415309 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:34:00.415649 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m14:34:00.416060 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:34:00.416569 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m14:34:00.416969 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m14:34:00.417498 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m14:34:00.417958 [debug] [Thread-4 (]: On model.mta.hourly_riders: BEGIN
[0m14:34:00.418373 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:34:00.418810 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:34:00.419172 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m14:34:00.419544 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m14:34:00.419932 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m14:34:00.420353 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m14:34:00.420701 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m14:34:00.421075 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m14:34:00.426567 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m14:34:00.428021 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m14:34:00.428670 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m14:34:00.429377 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:34:00.430257 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:34:00.430673 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m14:34:00.431651 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:34:00.432020 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:34:00.434091 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m14:34:00.434532 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:34:00.434894 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:34:00.436914 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m14:34:00.437361 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:34:00.437786 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m14:34:00.440155 [debug] [Thread-4 (]: SQL status: OK in 0.019 seconds
[0m14:34:00.440818 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:34:00.441238 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m14:34:00.442802 [debug] [Thread-5 (]: SQL status: OK in 0.016 seconds
[0m14:34:00.443226 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:34:00.443621 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m14:34:00.445007 [debug] [Thread-7 (]: SQL status: OK in 0.016 seconds
[0m14:34:00.445384 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:34:00.445704 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:34:04.244295 [debug] [Thread-2 (]: SQL status: OK in 3.813 seconds
[0m14:34:04.275247 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:34:04.276138 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m14:34:04.285336 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m14:34:04.397526 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m14:34:04.398480 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:34:04.399137 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m14:34:04.413261 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m14:34:04.425739 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:34:04.444738 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m14:34:04.446755 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m14:34:04.437922 [debug] [Thread-1 (]: SQL status: OK in 4.005 seconds
[0m14:34:04.458772 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:34:04.461525 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m14:34:04.463520 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:34:04.451385 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m14:34:04.501975 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m14:34:04.515126 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:34:04.515980 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m14:34:04.521701 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a5c610>]}
[0m14:34:04.523358 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 4.24s]
[0m14:34:04.524523 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m14:34:04.526307 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m14:34:04.530686 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:34:04.531570 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m14:34:04.532955 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m14:34:04.535901 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m14:34:04.537255 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a75360>]}
[0m14:34:04.538489 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 4.27s]
[0m14:34:04.539923 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m14:34:07.533219 [debug] [Thread-3 (]: SQL status: OK in 7.098 seconds
[0m14:34:07.547741 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:34:07.548649 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m14:34:07.565270 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m14:34:07.575984 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m14:34:07.576988 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:34:07.577613 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m14:34:07.585914 [debug] [Thread-3 (]: SQL status: OK in 0.007 seconds
[0m14:34:07.591965 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:34:07.593168 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m14:34:07.595113 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m14:34:07.597486 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m14:34:07.598394 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a76500>]}
[0m14:34:07.599378 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 7.32s]
[0m14:34:07.601140 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m14:34:08.071149 [debug] [Thread-4 (]: SQL status: OK in 7.629 seconds
[0m14:34:08.108189 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:34:08.109043 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
alter table "lake"."main"."hourly_riders__dbt_tmp" rename to "hourly_riders"
[0m14:34:08.110444 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m14:34:08.113146 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m14:34:08.114008 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:34:08.114722 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m14:34:08.209383 [debug] [Thread-4 (]: SQL status: OK in 0.094 seconds
[0m14:34:08.214688 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:34:08.215849 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
drop table if exists "lake"."main"."hourly_riders__dbt_backup" cascade
[0m14:34:08.217192 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m14:34:08.219536 [debug] [Thread-4 (]: On model.mta.hourly_riders: Close
[0m14:34:08.230850 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a74ac0>]}
[0m14:34:08.232274 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.hourly_riders ........................... [[32mOK[0m in 7.95s]
[0m14:34:08.233794 [debug] [Thread-4 (]: Finished running node model.mta.hourly_riders
[0m14:34:08.410436 [debug] [Thread-6 (]: SQL status: OK in 7.972 seconds
[0m14:34:08.417833 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:34:08.418755 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m14:34:08.420423 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m14:34:08.423949 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m14:34:08.446967 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:34:08.447738 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m14:34:08.458813 [debug] [Thread-6 (]: SQL status: OK in 0.010 seconds
[0m14:34:08.465448 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:34:08.466285 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m14:34:08.467444 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m14:34:08.470006 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m14:34:08.471273 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a74ca0>]}
[0m14:34:08.472440 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 8.19s]
[0m14:34:08.473722 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m14:34:08.698780 [debug] [Thread-7 (]: SQL status: OK in 8.253 seconds
[0m14:34:08.705175 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:34:08.706228 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m14:34:08.707780 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m14:34:08.710749 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m14:34:08.711559 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:34:08.712188 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m14:34:08.739876 [debug] [Thread-7 (]: SQL status: OK in 0.027 seconds
[0m14:34:08.744613 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:34:08.745358 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m14:34:08.746422 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m14:34:08.748726 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m14:34:08.762064 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a75cf0>]}
[0m14:34:08.763284 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 8.48s]
[0m14:34:08.764248 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m14:34:08.882056 [debug] [Thread-5 (]: SQL status: OK in 8.438 seconds
[0m14:34:08.885962 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:34:08.886347 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m14:34:08.887056 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m14:34:08.888272 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m14:34:08.888600 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:34:08.888899 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m14:34:08.892762 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m14:34:08.895075 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:34:08.895447 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m14:34:08.896187 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m14:34:08.897309 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m14:34:08.970801 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'd48633a8-45b7-44fe-8f74-8e473e0ed85a', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a3a51c60>]}
[0m14:34:08.971599 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 8.69s]
[0m14:34:08.972166 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m14:34:08.974880 [debug] [MainThread]: Using duckdb connection "master"
[0m14:34:08.975467 [debug] [MainThread]: On master: BEGIN
[0m14:34:08.975824 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:34:08.981712 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m14:34:08.982210 [debug] [MainThread]: On master: COMMIT
[0m14:34:08.982522 [debug] [MainThread]: Using duckdb connection "master"
[0m14:34:08.982794 [debug] [MainThread]: On master: COMMIT
[0m14:34:08.983294 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:34:08.983618 [debug] [MainThread]: On master: Close
[0m14:34:08.985526 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:34:08.985928 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m14:34:08.986186 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m14:34:08.986405 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m14:34:08.986611 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m14:34:08.986811 [debug] [MainThread]: Connection 'model.mta.hourly_riders' was properly closed.
[0m14:34:08.987012 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m14:34:08.987216 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m14:34:08.987566 [info ] [MainThread]: 
[0m14:34:08.987915 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 8.91 seconds (8.91s).
[0m14:34:08.989069 [debug] [MainThread]: Command end result
[0m14:34:09.018060 [info ] [MainThread]: 
[0m14:34:09.018573 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:34:09.018907 [info ] [MainThread]: 
[0m14:34:09.019200 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m14:34:09.019893 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 9.381788, "process_user_time": 111.56231, "process_kernel_time": 17.613008, "process_mem_max_rss": "481448", "process_in_blocks": "2784", "process_out_blocks": "12240"}
[0m14:34:09.020390 [debug] [MainThread]: Command `dbt run` succeeded at 14:34:09.020302 after 9.38 seconds
[0m14:34:09.020736 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3b145b460>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3ac8fe4d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff3a4821db0>]}
[0m14:34:09.021079 [debug] [MainThread]: Flushing usage events
[0m14:45:49.474515 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050e047430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c6f1c30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c6f35b0>]}


============================== 14:45:49.478625 | 18c0b9bd-2b41-4d6e-abd0-7abb284dd787 ==============================
[0m14:45:49.478625 [info ] [MainThread]: Running with dbt=1.8.7
[0m14:45:49.479043 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt run', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m14:45:49.652601 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050e104e20>]}
[0m14:45:49.703648 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050d39c6a0>]}
[0m14:45:49.707552 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m14:45:49.717443 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m14:45:49.818522 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:45:49.818868 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:45:49.843218 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050123d900>]}
[0m14:45:49.919912 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f05013dbe80>]}
[0m14:45:49.920510 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m14:45:49.920874 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f05013d9ff0>]}
[0m14:45:49.922561 [info ] [MainThread]: 
[0m14:45:49.923091 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:45:49.927709 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m14:45:50.059999 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m14:45:50.060471 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m14:45:50.060743 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:45:50.087040 [debug] [ThreadPool]: SQL status: OK in 0.026 seconds
[0m14:45:50.088268 [debug] [ThreadPool]: On list_lake: Close
[0m14:45:50.090410 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m14:45:50.091128 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m14:45:50.096012 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:45:50.096325 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m14:45:50.096571 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:45:50.102541 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m14:45:50.103973 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:45:50.104304 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m14:45:50.104857 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:45:50.105155 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:45:50.105408 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m14:45:50.107201 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m14:45:50.107880 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:45:50.108166 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:45:50.108405 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:45:50.108797 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:45:50.109066 [debug] [ThreadPool]: On create_lake_main: Close
[0m14:45:50.111676 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m14:45:50.115815 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:45:50.116117 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m14:45:50.116359 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:45:50.121420 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m14:45:50.121743 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:45:50.122013 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m14:45:50.140212 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m14:45:50.141391 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m14:45:50.142697 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m14:45:50.142966 [debug] [ThreadPool]: On list_lake_main: Close
[0m14:45:50.145680 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c7f7700>]}
[0m14:45:50.146040 [debug] [MainThread]: Using duckdb connection "master"
[0m14:45:50.146315 [debug] [MainThread]: On master: BEGIN
[0m14:45:50.146572 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:45:50.152441 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m14:45:50.152813 [debug] [MainThread]: On master: COMMIT
[0m14:45:50.153093 [debug] [MainThread]: Using duckdb connection "master"
[0m14:45:50.153335 [debug] [MainThread]: On master: COMMIT
[0m14:45:50.153765 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:45:50.154016 [debug] [MainThread]: On master: Close
[0m14:45:50.155506 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m14:45:50.155876 [info ] [MainThread]: 
[0m14:45:50.161274 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m14:45:50.161758 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m14:45:50.162229 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m14:45:50.162809 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m14:45:50.163505 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m14:45:50.164627 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m14:45:50.165327 [debug] [Thread-4 (]: Began running node model.mta.hourly_riders
[0m14:45:50.166720 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m14:45:50.167285 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m14:45:50.167834 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m14:45:50.168359 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m14:45:50.168794 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m14:45:50.169328 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m14:45:50.169892 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m14:45:50.170877 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m14:45:50.172133 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m14:45:50.173089 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m14:45:50.173662 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m14:45:50.174255 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m14:45:50.182849 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m14:45:50.183757 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.hourly_riders'
[0m14:45:50.184449 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_by_station)
[0m14:45:50.184925 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m14:45:50.185446 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m14:45:50.188125 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m14:45:50.188874 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m14:45:50.189704 [debug] [Thread-4 (]: Began compiling node model.mta.hourly_riders
[0m14:45:50.190286 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m14:45:50.190684 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m14:45:50.195121 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m14:45:50.195713 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m14:45:50.196352 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m14:45:50.196757 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m14:45:50.199129 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.hourly_riders"
[0m14:45:50.202231 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m14:45:50.241960 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m14:45:50.286475 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m14:45:50.289304 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m14:45:50.292634 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m14:45:50.293052 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m14:45:50.294024 [debug] [Thread-4 (]: Began executing node model.mta.hourly_riders
[0m14:45:50.294766 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:45:50.295574 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m14:45:50.296183 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m14:45:50.296649 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:45:50.299455 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m14:45:50.302017 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.hourly_riders"
[0m14:45:50.302454 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m14:45:50.302807 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m14:45:50.305297 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m14:45:50.308349 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m14:45:50.308807 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m14:45:50.309353 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:45:50.313097 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m14:45:50.313916 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m14:45:50.314967 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:45:50.316533 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:45:50.317145 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:45:50.317866 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m14:45:50.330039 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:45:50.331252 [debug] [Thread-4 (]: On model.mta.hourly_riders: BEGIN
[0m14:45:50.332122 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:45:50.333196 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m14:45:50.335034 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m14:45:50.336285 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m14:45:50.337155 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m14:45:50.337969 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m14:45:50.338450 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m14:45:50.338978 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m14:45:50.339451 [debug] [Thread-2 (]: SQL status: OK in 0.022 seconds
[0m14:45:50.340053 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:45:50.340658 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m14:45:50.341394 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m14:45:50.342008 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:45:50.343074 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:45:50.343714 [debug] [Thread-3 (]: SQL status: OK in 0.009 seconds
[0m14:45:50.344902 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:45:50.345378 [debug] [Thread-4 (]: SQL status: OK in 0.007 seconds
[0m14:45:50.346183 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:45:50.347359 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:45:50.348801 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:45:50.349465 [debug] [Thread-5 (]: SQL status: OK in 0.010 seconds
[0m14:45:50.349955 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m14:45:50.350991 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:45:50.353200 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m14:45:50.354892 [debug] [Thread-7 (]: SQL status: OK in 0.014 seconds
[0m14:45:50.356097 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:45:50.356982 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:45:50.358104 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m14:45:50.358593 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:45:50.359020 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m14:45:50.376059 [debug] [Thread-3 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:45:50.376869 [debug] [Thread-7 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:45:50.377352 [debug] [Thread-6 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m14:45:50.377838 [debug] [Thread-4 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m14:45:50.378235 [debug] [Thread-2 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:45:50.378662 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:45:50.379135 [debug] [Thread-5 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m14:45:50.379488 [debug] [Thread-3 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.380171 [debug] [Thread-7 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.380543 [debug] [Thread-6 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.380985 [debug] [Thread-4 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.381367 [debug] [Thread-2 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.381842 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.382237 [debug] [Thread-5 (]: DuckDB adapter: Rolling back transaction.
[0m14:45:50.382732 [debug] [Thread-3 (]: On model.mta.fare_class_boro: ROLLBACK
[0m14:45:50.383219 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: ROLLBACK
[0m14:45:50.383670 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: ROLLBACK
[0m14:45:50.384114 [debug] [Thread-4 (]: On model.mta.hourly_riders: ROLLBACK
[0m14:45:50.384589 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: ROLLBACK
[0m14:45:50.385027 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: ROLLBACK
[0m14:45:50.385463 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: ROLLBACK
[0m14:45:50.407871 [debug] [Thread-7 (]: Failed to rollback 'model.mta.total_riders_per_station'
[0m14:45:50.408786 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m14:45:50.409566 [debug] [Thread-4 (]: Failed to rollback 'model.mta.hourly_riders'
[0m14:45:50.410151 [debug] [Thread-6 (]: Failed to rollback 'model.mta.omny_adoption_increase'
[0m14:45:50.410704 [debug] [Thread-2 (]: Failed to rollback 'model.mta.busiest_specific_times'
[0m14:45:50.411838 [debug] [Thread-1 (]: Failed to rollback 'model.mta.avg_riders_per_day'
[0m14:45:50.412393 [debug] [Thread-3 (]: Failed to rollback 'model.mta.fare_class_boro'
[0m14:45:50.413047 [debug] [Thread-4 (]: On model.mta.hourly_riders: Close
[0m14:45:50.413793 [debug] [Thread-7 (]: Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 18:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, station_complex, latitude, longitude
  ORDER BY 
      total_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.414441 [debug] [Thread-5 (]: Failed to rollback 'model.mta.omny_adoption_by_station'
[0m14:45:50.414773 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m14:45:50.415156 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m14:45:50.415525 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m14:45:50.415882 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m14:45:50.417679 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c6962f0>]}
[0m14:45:50.418462 [debug] [Thread-4 (]: Runtime Error in model hourly_riders (models/hourly_riders.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 17:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, 
      station_complex, 
      date
  ORDER BY 
      date, total_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.418846 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m14:45:50.421142 [debug] [Thread-6 (]: Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 22:         "lake"."main"."mta_hourly_subway_socrata"
      WHERE 
          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_percentage_by_station AS (
      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
      SELECT 
          station_complex_id, 
          station_complex, 
          latitude, 
          longitude, 
          year, 
          (omny_ridership / total_ridership) AS omny_percentage
      FROM 
          omny_ridership_by_station_year
  )
  SELECT 
      s2023.station_complex_id AS station_id, 
      s2023.station_complex AS station_name,
      s2023.latitude,
      s2023.longitude,
      s2023.omny_percentage AS omny_percentage_2023,
      s2024.omny_percentage AS omny_percentage_2024,
      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
  FROM 
      omny_percentage_by_station s2023
  JOIN 
      omny_percentage_by_station s2024 
      ON s2023.station_complex_id = s2024.station_complex_id
      AND s2023.latitude = s2024.latitude
      AND s2023.longitude = s2024.longitude
      AND s2023.year = 2023
      AND s2024.year = 2024
  WHERE 
      s2024.omny_percentage > s2023.omny_percentage
  ORDER BY 
      omny_percentage_increase DESC
      );
    
    ...
                   ^
[0m14:45:50.422376 [debug] [Thread-2 (]: Runtime Error in model busiest_specific_times (models/busiest_specific_times.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 15:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      transit_hour
  ORDER BY 
      average_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.423312 [debug] [Thread-1 (]: Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 19:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, 
      station_complex, 
      latitude, 
      longitude, 
      day_of_week
  ORDER BY 
      average_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.424012 [error] [Thread-7 (]: 7 of 7 ERROR creating sql table model main.total_riders_per_station ............ [[31mERROR[0m in 0.23s]
[0m14:45:50.425016 [debug] [Thread-3 (]: Runtime Error in model fare_class_boro (models/fare_class_boro.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 36:         "lake"."main"."mta_hourly_subway_socrata"
      GROUP BY 
          borough, fare_class_category, day_type
  )
  SELECT 
      r.borough, 
      r.fare_class_category, 
      r.day_type,
      r.total_ridership, 
      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
  FROM 
      ridership_by_fare_class r
  JOIN 
      total_ridership_per_borough_daytype t
      ON r.borough = t.borough 
      AND r.day_type = t.day_type
  ORDER BY 
      total_ridership DESC
      );
    
    ...
                   ^
[0m14:45:50.425511 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050057b070>]}
[0m14:45:50.431384 [debug] [Thread-5 (]: Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 21:         "lake"."main"."mta_hourly_subway_socrata"
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_ridership_by_station AS (
      -- Calculate OMNY ridership by station, year, latitude, and longitude
      SELECT 
          station_complex_id, 
          latitude, 
          longitude, 
          EXTRACT(YEAR FROM transit_timestamp) AS year, 
          SUM(ridership) AS omny_ridership
      FROM 
          "lake"."main"."mta_hourly_subway_socrata"
      WHERE 
          payment_method = 'omny'
      GROUP BY 
          station_complex_id, latitude, longitude, year
  )
  SELECT 
      t.station_complex_id AS station_id,
      t.station_complex AS station_name,
      t.latitude,
      t.longitude,
      t.year, 
      (o.omny_ridership / t.total_ridership) AS omny_percentage
  FROM 
      total_ridership_by_station t
  LEFT JOIN 
      omny_ridership_by_station o
      ON t.station_complex_id = o.station_complex_id 
      AND t.latitude = o.latitude
      AND t.longitude = o.longitude
      AND t.year = o.year
  ORDER BY 
      t.year, omny_percentage DESC
      );
    
    ...
                   ^
[0m14:45:50.432611 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050055f640>]}
[0m14:45:50.434123 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c656290>]}
[0m14:45:50.435178 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f05005bd4b0>]}
[0m14:45:50.436311 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m14:45:50.437220 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0500694460>]}
[0m14:45:50.438347 [error] [Thread-4 (]: 4 of 7 ERROR creating sql table model main.hourly_riders ....................... [[31mERROR[0m in 0.24s]
[0m14:45:50.439525 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '18c0b9bd-2b41-4d6e-abd0-7abb284dd787', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0500591510>]}
[0m14:45:50.440621 [error] [Thread-6 (]: 6 of 7 ERROR creating sql table model main.omny_adoption_increase .............. [[31mERROR[0m in 0.25s]
[0m14:45:50.441837 [error] [Thread-2 (]: 2 of 7 ERROR creating sql table model main.busiest_specific_times .............. [[31mERROR[0m in 0.27s]
[0m14:45:50.443034 [error] [Thread-1 (]: 1 of 7 ERROR creating sql table model main.avg_riders_per_day .................. [[31mERROR[0m in 0.27s]
[0m14:45:50.447770 [error] [Thread-3 (]: 3 of 7 ERROR creating sql table model main.fare_class_boro ..................... [[31mERROR[0m in 0.27s]
[0m14:45:50.451224 [debug] [Thread-4 (]: Finished running node model.mta.hourly_riders
[0m14:45:50.453870 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m14:45:50.452836 [error] [Thread-5 (]: 5 of 7 ERROR creating sql table model main.omny_adoption_by_station ............ [[31mERROR[0m in 0.26s]
[0m14:45:50.455252 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m14:45:50.456365 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m14:45:50.457733 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m14:45:50.461615 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m14:45:50.466197 [debug] [MainThread]: Using duckdb connection "master"
[0m14:45:50.466733 [debug] [MainThread]: On master: BEGIN
[0m14:45:50.467086 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:45:50.480532 [debug] [MainThread]: SQL status: OK in 0.013 seconds
[0m14:45:50.483088 [debug] [MainThread]: On master: COMMIT
[0m14:45:50.483884 [debug] [MainThread]: Using duckdb connection "master"
[0m14:45:50.484320 [debug] [MainThread]: On master: COMMIT
[0m14:45:50.485690 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m14:45:50.486190 [debug] [MainThread]: On master: Close
[0m14:45:50.489721 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:45:50.491396 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m14:45:50.491856 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m14:45:50.492135 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m14:45:50.492333 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m14:45:50.492530 [debug] [MainThread]: Connection 'model.mta.hourly_riders' was properly closed.
[0m14:45:50.492746 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m14:45:50.492919 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m14:45:50.493318 [info ] [MainThread]: 
[0m14:45:50.493693 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 0.57 seconds (0.57s).
[0m14:45:50.494992 [debug] [MainThread]: Command end result
[0m14:45:50.520366 [info ] [MainThread]: 
[0m14:45:50.520988 [info ] [MainThread]: [31mCompleted with 7 errors and 0 warnings:[0m
[0m14:45:50.521355 [info ] [MainThread]: 
[0m14:45:50.521786 [error] [MainThread]:   Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 18:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, station_complex, latitude, longitude
  ORDER BY 
      total_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.522096 [info ] [MainThread]: 
[0m14:45:50.522434 [error] [MainThread]:   Runtime Error in model hourly_riders (models/hourly_riders.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 17:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, 
      station_complex, 
      date
  ORDER BY 
      date, total_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.522706 [info ] [MainThread]: 
[0m14:45:50.523113 [error] [MainThread]:   Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 22:         "lake"."main"."mta_hourly_subway_socrata"
      WHERE 
          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_percentage_by_station AS (
      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
      SELECT 
          station_complex_id, 
          station_complex, 
          latitude, 
          longitude, 
          year, 
          (omny_ridership / total_ridership) AS omny_percentage
      FROM 
          omny_ridership_by_station_year
  )
  SELECT 
      s2023.station_complex_id AS station_id, 
      s2023.station_complex AS station_name,
      s2023.latitude,
      s2023.longitude,
      s2023.omny_percentage AS omny_percentage_2023,
      s2024.omny_percentage AS omny_percentage_2024,
      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
  FROM 
      omny_percentage_by_station s2023
  JOIN 
      omny_percentage_by_station s2024 
      ON s2023.station_complex_id = s2024.station_complex_id
      AND s2023.latitude = s2024.latitude
      AND s2023.longitude = s2024.longitude
      AND s2023.year = 2023
      AND s2024.year = 2024
  WHERE 
      s2024.omny_percentage > s2023.omny_percentage
  ORDER BY 
      omny_percentage_increase DESC
      );
    
    ...
                   ^
[0m14:45:50.523524 [info ] [MainThread]: 
[0m14:45:50.523855 [error] [MainThread]:   Runtime Error in model busiest_specific_times (models/busiest_specific_times.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 15:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      transit_hour
  ORDER BY 
      average_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.524135 [info ] [MainThread]: 
[0m14:45:50.524516 [error] [MainThread]:   Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 19:     "lake"."main"."mta_hourly_subway_socrata"
  GROUP BY 
      station_complex_id, 
      station_complex, 
      latitude, 
      longitude, 
      day_of_week
  ORDER BY 
      average_ridership DESC
      );
    
    ...
               ^
[0m14:45:50.524796 [info ] [MainThread]: 
[0m14:45:50.525151 [error] [MainThread]:   Runtime Error in model fare_class_boro (models/fare_class_boro.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 36:         "lake"."main"."mta_hourly_subway_socrata"
      GROUP BY 
          borough, fare_class_category, day_type
  )
  SELECT 
      r.borough, 
      r.fare_class_category, 
      r.day_type,
      r.total_ridership, 
      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
  FROM 
      ridership_by_fare_class r
  JOIN 
      total_ridership_per_borough_daytype t
      ON r.borough = t.borough 
      AND r.day_type = t.day_type
  ORDER BY 
      total_ridership DESC
      );
    
    ...
                   ^
[0m14:45:50.525554 [info ] [MainThread]: 
[0m14:45:50.526004 [error] [MainThread]:   Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!
  Did you mean "mta_daily_subway_socrata"?
  LINE 21:         "lake"."main"."mta_hourly_subway_socrata"
      GROUP BY 
          station_complex_id, station_complex, latitude, longitude, year
  ),
  omny_ridership_by_station AS (
      -- Calculate OMNY ridership by station, year, latitude, and longitude
      SELECT 
          station_complex_id, 
          latitude, 
          longitude, 
          EXTRACT(YEAR FROM transit_timestamp) AS year, 
          SUM(ridership) AS omny_ridership
      FROM 
          "lake"."main"."mta_hourly_subway_socrata"
      WHERE 
          payment_method = 'omny'
      GROUP BY 
          station_complex_id, latitude, longitude, year
  )
  SELECT 
      t.station_complex_id AS station_id,
      t.station_complex AS station_name,
      t.latitude,
      t.longitude,
      t.year, 
      (o.omny_ridership / t.total_ridership) AS omny_percentage
  FROM 
      total_ridership_by_station t
  LEFT JOIN 
      omny_ridership_by_station o
      ON t.station_complex_id = o.station_complex_id 
      AND t.latitude = o.latitude
      AND t.longitude = o.longitude
      AND t.year = o.year
  ORDER BY 
      t.year, omny_percentage DESC
      );
    
    ...
                   ^
[0m14:45:50.527253 [info ] [MainThread]: 
[0m14:45:50.527670 [info ] [MainThread]: Done. PASS=0 WARN=0 ERROR=7 SKIP=0 TOTAL=7
[0m14:45:50.529759 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 1.0989745, "process_user_time": 1.770061, "process_kernel_time": 0.366219, "process_mem_max_rss": "177012", "process_in_blocks": "42216", "process_out_blocks": "2016", "command_success": false}
[0m14:45:50.530272 [debug] [MainThread]: Command `dbt run` failed at 14:45:50.530181 after 1.10 seconds
[0m14:45:50.530624 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050e047430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050c633a60>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f050df71960>]}
[0m14:45:50.530973 [debug] [MainThread]: Flushing usage events
[0m14:48:28.872115 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88410fb490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883f95bf10>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883f95a560>]}


============================== 14:48:28.873895 | a5c76f80-98ae-44b1-b2ab-985b5f110642 ==============================
[0m14:48:28.873895 [info ] [MainThread]: Running with dbt=1.8.7
[0m14:48:28.874353 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt run', 'static_parser': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m14:48:29.035582 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883c594d60>]}
[0m14:48:29.085697 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883f79cfd0>]}
[0m14:48:29.088224 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m14:48:29.095463 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m14:48:29.169287 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m14:48:29.169715 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m14:48:29.194353 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8834205960>]}
[0m14:48:29.253104 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8834398c10>]}
[0m14:48:29.253614 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m14:48:29.253959 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883439a050>]}
[0m14:48:29.255422 [info ] [MainThread]: 
[0m14:48:29.255983 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m14:48:29.260123 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m14:48:29.285872 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m14:48:29.286308 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m14:48:29.286608 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m14:48:29.298094 [debug] [ThreadPool]: SQL status: OK in 0.011 seconds
[0m14:48:29.299444 [debug] [ThreadPool]: On list_lake: Close
[0m14:48:29.303001 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m14:48:29.303477 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m14:48:29.308736 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:48:29.309158 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m14:48:29.309420 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:48:29.314929 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m14:48:29.315966 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:48:29.316244 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m14:48:29.317114 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m14:48:29.317361 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:48:29.317605 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m14:48:29.318066 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:48:29.318628 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:48:29.318879 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m14:48:29.319095 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m14:48:29.319539 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m14:48:29.319791 [debug] [ThreadPool]: On create_lake_main: Close
[0m14:48:29.322338 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m14:48:29.326350 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:48:29.326669 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m14:48:29.326938 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m14:48:29.332085 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m14:48:29.332366 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m14:48:29.332602 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m14:48:29.347574 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m14:48:29.349007 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m14:48:29.349459 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m14:48:29.349696 [debug] [ThreadPool]: On list_lake_main: Close
[0m14:48:29.352507 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883420d000>]}
[0m14:48:29.352885 [debug] [MainThread]: Using duckdb connection "master"
[0m14:48:29.353126 [debug] [MainThread]: On master: BEGIN
[0m14:48:29.353350 [debug] [MainThread]: Opening a new connection, currently in state init
[0m14:48:29.358262 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m14:48:29.358593 [debug] [MainThread]: On master: COMMIT
[0m14:48:29.358841 [debug] [MainThread]: Using duckdb connection "master"
[0m14:48:29.359051 [debug] [MainThread]: On master: COMMIT
[0m14:48:29.359529 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:48:29.359758 [debug] [MainThread]: On master: Close
[0m14:48:29.361286 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m14:48:29.361647 [info ] [MainThread]: 
[0m14:48:29.368245 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m14:48:29.368731 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m14:48:29.369248 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m14:48:29.370188 [debug] [Thread-4 (]: Began running node model.mta.hourly_riders
[0m14:48:29.369747 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m14:48:29.370762 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m14:48:29.372062 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m14:48:29.372576 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m14:48:29.373041 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m14:48:29.373698 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m14:48:29.374218 [info ] [Thread-4 (]: 4 of 7 START sql table model main.hourly_riders ................................ [RUN]
[0m14:48:29.375042 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m14:48:29.375567 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m14:48:29.376508 [info ] [Thread-6 (]: 6 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m14:48:29.377225 [info ] [Thread-7 (]: 7 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m14:48:29.378195 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m14:48:29.379832 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m14:48:29.382888 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.hourly_riders'
[0m14:48:29.383515 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m14:48:29.384226 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_by_station)
[0m14:48:29.385138 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m14:48:29.385751 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m14:48:29.386193 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m14:48:29.386605 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m14:48:29.387058 [debug] [Thread-4 (]: Began compiling node model.mta.hourly_riders
[0m14:48:29.395586 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m14:48:29.396291 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m14:48:29.396843 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m14:48:29.397248 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m14:48:29.399570 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m14:48:29.401803 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m14:48:29.403836 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.hourly_riders"
[0m14:48:29.406512 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m14:48:29.410175 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m14:48:29.411325 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m14:48:29.414406 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m14:48:29.415366 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m14:48:29.416666 [debug] [Thread-4 (]: Began executing node model.mta.hourly_riders
[0m14:48:29.417394 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m14:48:29.418281 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m14:48:29.464224 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m14:48:29.487318 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m14:48:29.495987 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m14:48:29.496783 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m14:48:29.499397 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.hourly_riders"
[0m14:48:29.501735 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m14:48:29.503869 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m14:48:29.506786 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m14:48:29.509036 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m14:48:29.509762 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:48:29.510778 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:48:29.511857 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:48:29.512473 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:48:29.513073 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:48:29.513628 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:48:29.514092 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m14:48:29.514485 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:48:29.514945 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m14:48:29.515328 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m14:48:29.515666 [debug] [Thread-4 (]: On model.mta.hourly_riders: BEGIN
[0m14:48:29.515998 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m14:48:29.516330 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m14:48:29.516668 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m14:48:29.517044 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m14:48:29.517374 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m14:48:29.517714 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m14:48:29.518029 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m14:48:29.518330 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m14:48:29.518622 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m14:48:29.523964 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m14:48:29.525751 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m14:48:29.526299 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:48:29.526652 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:48:29.529055 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m14:48:29.529444 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:48:29.529997 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:48:29.531643 [debug] [Thread-5 (]: SQL status: OK in 0.014 seconds
[0m14:48:29.532035 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:48:29.532421 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m14:48:29.533174 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m14:48:29.533489 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:48:29.533795 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */

  
    
    

    create  table
      "lake"."main"."hourly_riders__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m14:48:29.535853 [debug] [Thread-2 (]: SQL status: OK in 0.017 seconds
[0m14:48:29.536287 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:48:29.536700 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m14:48:29.538838 [debug] [Thread-7 (]: SQL status: OK in 0.020 seconds
[0m14:48:29.539336 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:48:29.539971 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m14:48:29.542663 [debug] [Thread-6 (]: SQL status: OK in 0.019 seconds
[0m14:48:29.543086 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:48:29.543494 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m14:48:32.278648 [debug] [Thread-1 (]: SQL status: OK in 2.751 seconds
[0m14:48:32.327689 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:48:32.336315 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m14:48:32.339877 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m14:48:32.548489 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m14:48:32.550226 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:48:32.551990 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m14:48:32.565624 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m14:48:32.595422 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m14:48:32.596726 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m14:48:32.619869 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m14:48:32.627369 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m14:48:32.641600 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f883367a530>]}
[0m14:48:32.642899 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 3.26s]
[0m14:48:32.644151 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m14:48:33.373861 [debug] [Thread-2 (]: SQL status: OK in 3.836 seconds
[0m14:48:33.381562 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:48:33.382663 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m14:48:33.384893 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m14:48:33.403540 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m14:48:33.404652 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:48:33.405659 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m14:48:33.414528 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m14:48:33.473913 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m14:48:33.475479 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m14:48:33.477841 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m14:48:33.482080 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m14:48:33.483605 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8833678b80>]}
[0m14:48:33.495478 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 4.11s]
[0m14:48:33.498333 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m14:48:36.208445 [debug] [Thread-7 (]: SQL status: OK in 6.668 seconds
[0m14:48:36.218704 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:48:36.242113 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m14:48:36.243590 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m14:48:36.246345 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m14:48:36.247020 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:48:36.265587 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m14:48:36.273913 [debug] [Thread-6 (]: SQL status: OK in 6.730 seconds
[0m14:48:36.281628 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:48:36.282647 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m14:48:36.283882 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m14:48:36.291120 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m14:48:36.293300 [debug] [Thread-7 (]: SQL status: OK in 0.025 seconds
[0m14:48:36.304926 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:48:36.309760 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m14:48:36.310568 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m14:48:36.311248 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m14:48:36.320466 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m14:48:36.327276 [debug] [Thread-7 (]: SQL status: OK in 0.014 seconds
[0m14:48:36.329909 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m14:48:36.331074 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8833679f30>]}
[0m14:48:36.332145 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 6.95s]
[0m14:48:36.333075 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m14:48:36.344712 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m14:48:36.345669 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m14:48:36.346860 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m14:48:36.352214 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m14:48:36.353413 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88336604c0>]}
[0m14:48:36.354809 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.97s]
[0m14:48:36.356145 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m14:48:37.487602 [debug] [Thread-4 (]: SQL status: OK in 7.953 seconds
[0m14:48:37.495124 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:48:37.496099 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
alter table "lake"."main"."hourly_riders__dbt_tmp" rename to "hourly_riders"
[0m14:48:37.497533 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m14:48:37.500627 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m14:48:37.501613 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:48:37.502445 [debug] [Thread-4 (]: On model.mta.hourly_riders: COMMIT
[0m14:48:37.563755 [debug] [Thread-4 (]: SQL status: OK in 0.060 seconds
[0m14:48:37.569056 [debug] [Thread-4 (]: Using duckdb connection "model.mta.hourly_riders"
[0m14:48:37.570089 [debug] [Thread-4 (]: On model.mta.hourly_riders: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.hourly_riders"} */
drop table if exists "lake"."main"."hourly_riders__dbt_backup" cascade
[0m14:48:37.571363 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m14:48:37.573614 [debug] [Thread-4 (]: On model.mta.hourly_riders: Close
[0m14:48:37.574694 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88336798d0>]}
[0m14:48:37.575871 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.hourly_riders ........................... [[32mOK[0m in 8.19s]
[0m14:48:37.576949 [debug] [Thread-4 (]: Finished running node model.mta.hourly_riders
[0m14:48:37.734467 [debug] [Thread-5 (]: SQL status: OK in 8.201 seconds
[0m14:48:37.740684 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:48:37.741546 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m14:48:37.742711 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m14:48:37.745392 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m14:48:37.746102 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:48:37.746714 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m14:48:37.751911 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m14:48:37.757657 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m14:48:37.758766 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m14:48:37.760064 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m14:48:37.762155 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m14:48:37.763094 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88336604f0>]}
[0m14:48:37.764134 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 8.38s]
[0m14:48:37.765324 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m14:48:38.587913 [debug] [Thread-3 (]: SQL status: OK in 9.057 seconds
[0m14:48:38.591998 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:48:38.592426 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m14:48:38.593202 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m14:48:38.594577 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m14:48:38.594909 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:48:38.595186 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m14:48:38.599423 [debug] [Thread-3 (]: SQL status: OK in 0.004 seconds
[0m14:48:38.601402 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m14:48:38.601748 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m14:48:38.602366 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m14:48:38.603480 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m14:48:38.671131 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a5c76f80-98ae-44b1-b2ab-985b5f110642', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8833679570>]}
[0m14:48:38.672037 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 9.29s]
[0m14:48:38.672633 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m14:48:38.676053 [debug] [MainThread]: Using duckdb connection "master"
[0m14:48:38.676539 [debug] [MainThread]: On master: BEGIN
[0m14:48:38.676823 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m14:48:38.683704 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m14:48:38.684370 [debug] [MainThread]: On master: COMMIT
[0m14:48:38.684735 [debug] [MainThread]: Using duckdb connection "master"
[0m14:48:38.684975 [debug] [MainThread]: On master: COMMIT
[0m14:48:38.685516 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m14:48:38.685882 [debug] [MainThread]: On master: Close
[0m14:48:38.688083 [debug] [MainThread]: Connection 'master' was properly closed.
[0m14:48:38.688459 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m14:48:38.688709 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m14:48:38.688928 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m14:48:38.689146 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m14:48:38.689356 [debug] [MainThread]: Connection 'model.mta.hourly_riders' was properly closed.
[0m14:48:38.689561 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m14:48:38.689768 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m14:48:38.690175 [info ] [MainThread]: 
[0m14:48:38.690558 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 9.43 seconds (9.43s).
[0m14:48:38.691857 [debug] [MainThread]: Command end result
[0m14:48:38.719232 [info ] [MainThread]: 
[0m14:48:38.719803 [info ] [MainThread]: [32mCompleted successfully[0m
[0m14:48:38.720152 [info ] [MainThread]: 
[0m14:48:38.720455 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m14:48:38.721280 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 9.888595, "process_user_time": 122.93175, "process_kernel_time": 7.700735, "process_mem_max_rss": "466384", "process_in_blocks": "1022664", "process_out_blocks": "12248"}
[0m14:48:38.721841 [debug] [MainThread]: Command `dbt run` succeeded at 14:48:38.721745 after 9.89 seconds
[0m14:48:38.722250 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88410fb490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f88345cd840>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8833651240>]}
[0m14:48:38.722604 [debug] [MainThread]: Flushing usage events
[0m15:11:22.713178 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c57dd73d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c56480be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c56480b50>]}


============================== 15:11:22.718107 | a2ab0461-780c-4ea4-9fbf-3b896f0ccd50 ==============================
[0m15:11:22.718107 [info ] [MainThread]: Running with dbt=1.8.7
[0m15:11:22.718563 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m15:11:22.934635 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c563c6620>]}
[0m15:11:22.985224 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c563ab520>]}
[0m15:11:22.990736 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m15:11:23.002961 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m15:11:23.127043 [debug] [MainThread]: Partial parsing enabled: 1 files deleted, 1 files added, 0 files changed.
[0m15:11:23.127660 [debug] [MainThread]: Partial parsing: added file: mta://models/weekly_riders_per_station.sql
[0m15:11:23.127959 [debug] [MainThread]: Partial parsing: deleted file: mta://models/hourly_riders.sql
[0m15:11:23.341081 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c4af27550>]}
[0m15:11:23.418255 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c4aed1ff0>]}
[0m15:11:23.418787 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m15:11:23.419146 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c4aed20b0>]}
[0m15:11:23.420674 [info ] [MainThread]: 
[0m15:11:23.421227 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:11:23.425366 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m15:11:23.558745 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m15:11:23.559298 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m15:11:23.559622 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:11:23.577684 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m15:11:23.579298 [debug] [ThreadPool]: On list_lake: Close
[0m15:11:23.581595 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m15:11:23.582373 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m15:11:23.587709 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:11:23.588126 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m15:11:23.588470 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:11:23.596210 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m15:11:23.597509 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:11:23.597842 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m15:11:23.599315 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m15:11:23.599636 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:11:23.599883 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m15:11:23.601791 [debug] [ThreadPool]: SQL status: OK in 0.002 seconds
[0m15:11:23.602550 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:11:23.602895 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:11:23.603154 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:11:23.604472 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m15:11:23.604850 [debug] [ThreadPool]: On create_lake_main: Close
[0m15:11:23.608590 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m15:11:23.613124 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:11:23.613466 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m15:11:23.613729 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:11:23.619897 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m15:11:23.620281 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:11:23.620557 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m15:11:23.647180 [debug] [ThreadPool]: SQL status: OK in 0.026 seconds
[0m15:11:23.648790 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m15:11:23.650604 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m15:11:23.650935 [debug] [ThreadPool]: On list_lake_main: Close
[0m15:11:23.654094 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c580c2c80>]}
[0m15:11:23.654558 [debug] [MainThread]: Using duckdb connection "master"
[0m15:11:23.654831 [debug] [MainThread]: On master: BEGIN
[0m15:11:23.655104 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:11:23.660365 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m15:11:23.660717 [debug] [MainThread]: On master: COMMIT
[0m15:11:23.660966 [debug] [MainThread]: Using duckdb connection "master"
[0m15:11:23.661186 [debug] [MainThread]: On master: COMMIT
[0m15:11:23.661723 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:11:23.662027 [debug] [MainThread]: On master: Close
[0m15:11:23.663791 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m15:11:23.664168 [info ] [MainThread]: 
[0m15:11:23.671691 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m15:11:23.672373 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m15:11:23.672983 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m15:11:23.673576 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m15:11:23.674321 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m15:11:23.675434 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m15:11:23.675017 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m15:11:23.676017 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m15:11:23.676946 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m15:11:23.678091 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m15:11:23.680010 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m15:11:23.681917 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m15:11:23.683010 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m15:11:23.684081 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m15:11:23.684859 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m15:11:23.685526 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m15:11:23.686207 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m15:11:23.686667 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m15:11:23.687208 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m15:11:23.687744 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_increase)
[0m15:11:23.688141 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m15:11:23.688634 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m15:11:23.689084 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m15:11:23.689463 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m15:11:23.699095 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m15:11:23.699844 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m15:11:23.700365 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m15:11:23.703549 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m15:11:23.704224 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m15:11:23.704965 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m15:11:23.707690 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m15:11:23.711266 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m15:11:23.716648 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m15:11:23.717531 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m15:11:23.720352 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m15:11:23.722485 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m15:11:23.722959 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m15:11:23.723686 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m15:11:23.743024 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m15:11:23.760646 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m15:11:23.761401 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m15:11:23.764517 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m15:11:23.765375 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m15:11:23.769597 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m15:11:23.770103 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m15:11:23.772745 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m15:11:23.775889 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m15:11:23.780541 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m15:11:23.782307 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:11:23.782759 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:11:23.786138 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m15:11:23.786580 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:11:23.787684 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:11:23.788072 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:11:23.788474 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m15:11:23.788879 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m15:11:23.789606 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:11:23.789965 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:11:23.790265 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m15:11:23.790665 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m15:11:23.791061 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m15:11:23.791434 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m15:11:23.791792 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m15:11:23.792147 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m15:11:23.792536 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m15:11:23.792913 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m15:11:23.793274 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m15:11:23.793639 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m15:11:23.799905 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m15:11:23.800529 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m15:11:23.801569 [debug] [Thread-2 (]: SQL status: OK in 0.010 seconds
[0m15:11:23.802647 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:11:23.803131 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:11:23.803503 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m15:11:23.804153 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:11:23.804529 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:11:23.805334 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m15:11:23.805657 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:11:23.806000 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:11:23.808068 [debug] [Thread-5 (]: SQL status: OK in 0.015 seconds
[0m15:11:23.808579 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:11:23.808997 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m15:11:23.810141 [debug] [Thread-4 (]: SQL status: OK in 0.016 seconds
[0m15:11:23.810534 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:11:23.810911 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m15:11:23.812424 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m15:11:23.812833 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:11:23.813184 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    DATE_TRUNC('week', transit_timestamp) AS date, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    date
ORDER BY 
    date, total_ridership DESC
    );
  
  
[0m15:11:23.814129 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m15:11:23.814504 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:11:23.814814 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:11:25.792490 [debug] [Thread-2 (]: SQL status: OK in 1.988 seconds
[0m15:11:25.811827 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:11:25.812806 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m15:11:25.815005 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m15:11:25.865904 [debug] [Thread-1 (]: SQL status: OK in 2.061 seconds
[0m15:11:25.873134 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:11:25.876412 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m15:11:25.878170 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:11:25.882705 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m15:11:25.875050 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:11:25.904818 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:11:25.905887 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:11:25.906751 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m15:11:25.907519 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:11:25.935795 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m15:11:25.947078 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:11:25.948179 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m15:11:25.951602 [debug] [Thread-2 (]: SQL status: OK in 0.024 seconds
[0m15:11:25.965879 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:11:25.972843 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:11:25.977882 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m15:11:25.978821 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m15:11:25.981911 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c531c8e80>]}
[0m15:11:25.984833 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m15:11:25.983782 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.30s]
[0m15:11:25.987606 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m15:11:25.988891 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m15:11:25.991869 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c563c7550>]}
[0m15:11:25.993473 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 2.31s]
[0m15:11:25.995462 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m15:11:29.184392 [debug] [Thread-7 (]: SQL status: OK in 5.371 seconds
[0m15:11:29.190893 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:11:29.191997 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "lake"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m15:11:29.193936 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m15:11:29.197992 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m15:11:29.199059 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:11:29.199789 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m15:11:29.251546 [debug] [Thread-7 (]: SQL status: OK in 0.051 seconds
[0m15:11:29.258822 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:11:29.259852 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "lake"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m15:11:29.261017 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m15:11:29.263430 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m15:11:29.266699 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c531213c0>]}
[0m15:11:29.268121 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 5.58s]
[0m15:11:29.269312 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m15:11:29.509663 [debug] [Thread-6 (]: SQL status: OK in 5.694 seconds
[0m15:11:29.525281 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:11:29.526394 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m15:11:29.527893 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m15:11:29.530602 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m15:11:29.531305 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:11:29.532560 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m15:11:29.555136 [debug] [Thread-6 (]: SQL status: OK in 0.022 seconds
[0m15:11:29.561008 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:11:29.562132 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m15:11:29.563473 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m15:11:29.569819 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m15:11:29.575205 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c48389f90>]}
[0m15:11:29.579655 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.89s]
[0m15:11:29.581174 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m15:11:29.590126 [debug] [Thread-4 (]: SQL status: OK in 5.779 seconds
[0m15:11:29.598481 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:11:29.599449 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m15:11:29.600815 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m15:11:29.609879 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m15:11:29.612441 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:11:29.616259 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m15:11:29.630639 [debug] [Thread-4 (]: SQL status: OK in 0.013 seconds
[0m15:11:29.636319 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:11:29.640715 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m15:11:29.642290 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m15:11:29.645533 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m15:11:29.662877 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c53121f60>]}
[0m15:11:29.664143 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 5.98s]
[0m15:11:29.665165 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m15:11:31.668704 [debug] [Thread-3 (]: SQL status: OK in 7.862 seconds
[0m15:11:31.675516 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:11:31.676671 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m15:11:31.678732 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m15:11:31.681879 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m15:11:31.682770 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:11:31.683457 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m15:11:31.690027 [debug] [Thread-3 (]: SQL status: OK in 0.006 seconds
[0m15:11:31.695512 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:11:31.696525 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m15:11:31.697782 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m15:11:31.700340 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m15:11:31.701576 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c531c93f0>]}
[0m15:11:31.702713 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 8.02s]
[0m15:11:31.703764 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m15:11:32.048405 [debug] [Thread-5 (]: SQL status: OK in 8.239 seconds
[0m15:11:32.051325 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:11:32.051719 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m15:11:32.052666 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m15:11:32.053986 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m15:11:32.054307 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:11:32.054665 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m15:11:32.057685 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m15:11:32.060584 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:11:32.060920 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m15:11:32.061461 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m15:11:32.062576 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m15:11:32.137883 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a2ab0461-780c-4ea4-9fbf-3b896f0ccd50', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6b58fef880>]}
[0m15:11:32.138738 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 8.45s]
[0m15:11:32.139384 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m15:11:32.142447 [debug] [MainThread]: Using duckdb connection "master"
[0m15:11:32.142948 [debug] [MainThread]: On master: BEGIN
[0m15:11:32.143445 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:11:32.150096 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m15:11:32.150596 [debug] [MainThread]: On master: COMMIT
[0m15:11:32.150897 [debug] [MainThread]: Using duckdb connection "master"
[0m15:11:32.151149 [debug] [MainThread]: On master: COMMIT
[0m15:11:32.151677 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:11:32.151983 [debug] [MainThread]: On master: Close
[0m15:11:32.154080 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:11:32.154662 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m15:11:32.155069 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m15:11:32.155360 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m15:11:32.155594 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m15:11:32.155810 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m15:11:32.156057 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m15:11:32.156302 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m15:11:32.156766 [info ] [MainThread]: 
[0m15:11:32.157163 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 8.74 seconds (8.74s).
[0m15:11:32.159015 [debug] [MainThread]: Command end result
[0m15:11:32.189517 [info ] [MainThread]: 
[0m15:11:32.190119 [info ] [MainThread]: [32mCompleted successfully[0m
[0m15:11:32.190442 [info ] [MainThread]: 
[0m15:11:32.190740 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m15:11:32.192745 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 9.527684, "process_user_time": 121.62299, "process_kernel_time": 5.490722, "process_mem_max_rss": "493436", "process_in_blocks": "126520", "process_out_blocks": "13088"}
[0m15:11:32.193435 [debug] [MainThread]: Command `dbt run` succeeded at 15:11:32.193298 after 9.53 seconds
[0m15:11:32.193880 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c57dd73d0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c4af74730>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6c53183190>]}
[0m15:11:32.194489 [debug] [MainThread]: Flushing usage events
[0m15:59:34.638052 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effbc1af400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba860be0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba860b50>]}


============================== 15:59:34.641146 | 5af32ded-bbbd-49a5-87ee-56ab2ef8fe46 ==============================
[0m15:59:34.641146 [info ] [MainThread]: Running with dbt=1.8.7
[0m15:59:34.641638 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m15:59:34.836909 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba7a6620>]}
[0m15:59:34.891513 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba78f520>]}
[0m15:59:34.894972 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m15:59:34.905613 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m15:59:34.997178 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m15:59:34.997699 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m15:59:35.204406 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf2e7fa0>]}
[0m15:59:35.272095 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf4e44c0>]}
[0m15:59:35.272766 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m15:59:35.273113 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf4e5540>]}
[0m15:59:35.274421 [info ] [MainThread]: 
[0m15:59:35.275032 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:59:35.279389 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m15:59:35.373276 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m15:59:35.373730 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m15:59:35.374034 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:59:35.391779 [debug] [ThreadPool]: SQL status: OK in 0.018 seconds
[0m15:59:35.393235 [debug] [ThreadPool]: On list_lake: Close
[0m15:59:35.395861 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m15:59:35.396516 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m15:59:35.400846 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:35.401144 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m15:59:35.401382 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:59:35.407103 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m15:59:35.408246 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:35.408584 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m15:59:35.409028 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m15:59:35.409285 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:35.409521 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m15:59:35.410805 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m15:59:35.411552 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:59:35.411826 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:35.412072 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:59:35.413261 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m15:59:35.413552 [debug] [ThreadPool]: On create_lake_main: Close
[0m15:59:35.416869 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m15:59:35.421098 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:59:35.421409 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m15:59:35.421663 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:59:35.427491 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m15:59:35.427879 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:59:35.428177 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m15:59:35.451973 [debug] [ThreadPool]: SQL status: OK in 0.023 seconds
[0m15:59:35.457959 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m15:59:35.458983 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m15:59:35.459281 [debug] [ThreadPool]: On list_lake_main: Close
[0m15:59:35.463237 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf290bb0>]}
[0m15:59:35.463610 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:35.463835 [debug] [MainThread]: On master: BEGIN
[0m15:59:35.464037 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:59:35.469738 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m15:59:35.470051 [debug] [MainThread]: On master: COMMIT
[0m15:59:35.470284 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:35.470511 [debug] [MainThread]: On master: COMMIT
[0m15:59:35.470896 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:59:35.471154 [debug] [MainThread]: On master: Close
[0m15:59:35.472774 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m15:59:35.473129 [info ] [MainThread]: 
[0m15:59:35.481246 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m15:59:35.481791 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m15:59:35.482307 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m15:59:35.482726 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m15:59:35.483265 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m15:59:35.483861 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m15:59:35.484303 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m15:59:35.485179 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m15:59:35.484836 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m15:59:35.485844 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m15:59:35.486338 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m15:59:35.487025 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m15:59:35.487528 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m15:59:35.488077 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m15:59:35.488820 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m15:59:35.489496 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m15:59:35.490539 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m15:59:35.492514 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m15:59:35.494307 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m15:59:35.495484 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_increase)
[0m15:59:35.497232 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m15:59:35.498248 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m15:59:35.498815 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m15:59:35.499293 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m15:59:35.499690 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m15:59:35.506818 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m15:59:35.507387 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m15:59:35.507874 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m15:59:35.508336 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m15:59:35.511077 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m15:59:35.513712 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m15:59:35.516849 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m15:59:35.520765 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m15:59:35.522953 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m15:59:35.525649 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m15:59:35.527272 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m15:59:35.528142 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m15:59:35.529771 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m15:59:35.541991 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m15:59:35.548330 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m15:59:35.554497 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m15:59:35.554982 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m15:59:35.562960 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m15:59:35.565921 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m15:59:35.567470 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m15:59:35.569915 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m15:59:35.572096 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m15:59:35.574954 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m15:59:35.577471 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m15:59:35.579725 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:35.580600 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:35.581243 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:35.581798 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:35.582634 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:59:35.582986 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m15:59:35.583327 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:35.583747 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:35.584139 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m15:59:35.584544 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m15:59:35.584903 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m15:59:35.585252 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m15:59:35.585600 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m15:59:35.585951 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m15:59:35.586293 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m15:59:35.586632 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m15:59:35.586968 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m15:59:35.587339 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m15:59:35.587663 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m15:59:35.594130 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m15:59:35.594830 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m15:59:35.595769 [debug] [Thread-5 (]: SQL status: OK in 0.010 seconds
[0m15:59:35.597225 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:35.597738 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m15:59:35.598992 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m15:59:35.599590 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:35.600015 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:59:35.600882 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m15:59:35.601220 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:35.601526 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:59:35.603297 [debug] [Thread-1 (]: SQL status: OK in 0.016 seconds
[0m15:59:35.603691 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:35.604032 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:59:35.605616 [debug] [Thread-7 (]: SQL status: OK in 0.018 seconds
[0m15:59:35.606041 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:59:35.606402 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "lake"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC;
    );
  
  
[0m15:59:35.619193 [debug] [Thread-7 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "lake"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC;
    );
  
  
[0m15:59:35.620297 [debug] [Thread-7 (]: DuckDB adapter: Rolling back transaction.
[0m15:59:35.621260 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: ROLLBACK
[0m15:59:35.623232 [debug] [Thread-4 (]: SQL status: OK in 0.029 seconds
[0m15:59:35.623633 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:35.624044 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m15:59:35.629520 [debug] [Thread-6 (]: SQL status: OK in 0.034 seconds
[0m15:59:35.630366 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:35.631093 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:59:35.647154 [debug] [Thread-7 (]: Failed to rollback 'model.mta.weekly_riders_per_station'
[0m15:59:35.647689 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m15:59:35.648634 [debug] [Thread-7 (]: Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ";"
[0m15:59:35.652190 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effbb4ea830>]}
[0m15:59:35.652935 [error] [Thread-7 (]: 7 of 7 ERROR creating sql table model main.weekly_riders_per_station ........... [[31mERROR[0m in 0.15s]
[0m15:59:35.653607 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m15:59:35.930432 [debug] [Thread-2 (]: SQL status: OK in 0.328 seconds
[0m15:59:35.955935 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:35.957030 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m15:59:35.958522 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m15:59:35.976154 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:35.977127 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m15:59:35.978406 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m15:59:36.068450 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:59:36.069429 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:36.070246 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:59:36.114416 [debug] [Thread-2 (]: SQL status: OK in 0.039 seconds
[0m15:59:36.137401 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:36.138347 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m15:59:36.239929 [debug] [Thread-2 (]: SQL status: OK in 0.101 seconds
[0m15:59:36.245328 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m15:59:36.246543 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba82c0d0>]}
[0m15:59:36.247692 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.76s]
[0m15:59:36.248917 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m15:59:39.407088 [debug] [Thread-3 (]: SQL status: OK in 3.806 seconds
[0m15:59:39.414307 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:39.415443 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m15:59:39.422279 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m15:59:39.442947 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:39.465473 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m15:59:39.467335 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m15:59:39.471483 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m15:59:39.472466 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:39.473249 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m15:59:39.485801 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m15:59:39.505799 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:39.506894 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m15:59:39.518748 [debug] [Thread-3 (]: SQL status: OK in 0.010 seconds
[0m15:59:39.521613 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m15:59:39.522760 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf356680>]}
[0m15:59:39.523981 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 4.03s]
[0m15:59:39.525368 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m15:59:40.437158 [debug] [Thread-4 (]: SQL status: OK in 4.812 seconds
[0m15:59:40.443080 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:40.464844 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m15:59:40.466577 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m15:59:40.471742 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:40.472586 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m15:59:40.473800 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m15:59:40.478176 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m15:59:40.478909 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:40.479453 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m15:59:40.490176 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m15:59:40.495844 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:40.496650 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m15:59:40.506393 [debug] [Thread-4 (]: SQL status: OK in 0.009 seconds
[0m15:59:40.509198 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m15:59:40.510361 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba82dff0>]}
[0m15:59:40.511489 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 5.02s]
[0m15:59:40.512437 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m15:59:40.518270 [debug] [Thread-6 (]: SQL status: OK in 4.885 seconds
[0m15:59:40.525787 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:40.533151 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m15:59:40.535122 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m15:59:40.548566 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:40.550548 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m15:59:40.554494 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m15:59:40.560131 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m15:59:40.561518 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:40.562790 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m15:59:40.577937 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m15:59:40.583258 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:40.584048 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m15:59:40.599071 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m15:59:40.601628 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m15:59:40.602700 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba82cf10>]}
[0m15:59:40.603881 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.11s]
[0m15:59:40.605061 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m15:59:41.572556 [debug] [Thread-1 (]: SQL status: OK in 5.968 seconds
[0m15:59:41.581277 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:41.582151 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m15:59:41.583534 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:59:41.621417 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:41.622438 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m15:59:41.623886 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m15:59:41.628308 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m15:59:41.629420 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:41.630249 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m15:59:41.650980 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m15:59:41.657335 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:41.658930 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m15:59:41.682543 [debug] [Thread-1 (]: SQL status: OK in 0.022 seconds
[0m15:59:41.685347 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m15:59:41.686467 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba82fa60>]}
[0m15:59:41.687611 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 6.20s]
[0m15:59:41.688802 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m15:59:42.476258 [debug] [Thread-5 (]: SQL status: OK in 6.878 seconds
[0m15:59:42.479077 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:42.479455 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m15:59:42.480147 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m15:59:42.482233 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:42.482550 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m15:59:42.483115 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m15:59:42.484427 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m15:59:42.484793 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:42.485082 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m15:59:42.488888 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m15:59:42.490686 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:42.491003 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m15:59:42.493784 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m15:59:42.494978 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m15:59:42.539078 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '5af32ded-bbbd-49a5-87ee-56ab2ef8fe46', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effba82e230>]}
[0m15:59:42.539875 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 7.04s]
[0m15:59:42.540454 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m15:59:42.543354 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:42.543732 [debug] [MainThread]: On master: BEGIN
[0m15:59:42.544025 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m15:59:42.549736 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m15:59:42.550231 [debug] [MainThread]: On master: COMMIT
[0m15:59:42.550531 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:42.550779 [debug] [MainThread]: On master: COMMIT
[0m15:59:42.551283 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:59:42.551584 [debug] [MainThread]: On master: Close
[0m15:59:42.553539 [debug] [MainThread]: Connection 'master' was properly closed.
[0m15:59:42.553890 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m15:59:42.554143 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m15:59:42.554509 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m15:59:42.555026 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m15:59:42.555550 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m15:59:42.555816 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m15:59:42.556055 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m15:59:42.556529 [info ] [MainThread]: 
[0m15:59:42.556925 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 7.28 seconds (7.28s).
[0m15:59:42.558242 [debug] [MainThread]: Command end result
[0m15:59:42.583750 [info ] [MainThread]: 
[0m15:59:42.584389 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m15:59:42.584812 [info ] [MainThread]: 
[0m15:59:42.585220 [error] [MainThread]:   Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ";"
[0m15:59:42.585654 [info ] [MainThread]: 
[0m15:59:42.586231 [info ] [MainThread]: Done. PASS=6 WARN=0 ERROR=1 SKIP=0 TOTAL=7
[0m15:59:42.588674 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 7.993441, "process_user_time": 103.07716, "process_kernel_time": 4.627789, "process_mem_max_rss": "478596", "process_in_blocks": "4608", "process_out_blocks": "7192", "command_success": false}
[0m15:59:42.589284 [debug] [MainThread]: Command `dbt run` failed at 15:59:42.589173 after 7.99 seconds
[0m15:59:42.589681 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effbc1af400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effaf5a2410>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7effbc17e770>]}
[0m15:59:42.590036 [debug] [MainThread]: Flushing usage events
[0m15:59:57.754628 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58f60b430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58f18d750>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58f18cca0>]}


============================== 15:59:57.756772 | 11849352-194e-4881-a732-2f8fcb83ae32 ==============================
[0m15:59:57.756772 [info ] [MainThread]: Running with dbt=1.8.7
[0m15:59:57.757271 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m15:59:57.916093 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58f6c8a30>]}
[0m15:59:57.966533 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc1b6a0>]}
[0m15:59:57.969044 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m15:59:57.981798 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m15:59:58.060080 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m15:59:58.060863 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m15:59:58.263297 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd5827d5e40>]}
[0m15:59:58.322891 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd5829d2fb0>]}
[0m15:59:58.323423 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m15:59:58.323779 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd5829d3ac0>]}
[0m15:59:58.325356 [info ] [MainThread]: 
[0m15:59:58.325927 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m15:59:58.330522 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_lake'
[0m15:59:58.409243 [debug] [ThreadPool]: Using duckdb connection "list_lake"
[0m15:59:58.409784 [debug] [ThreadPool]: On list_lake: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"lake"'
    
  
  
[0m15:59:58.410070 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m15:59:58.420108 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m15:59:58.421537 [debug] [ThreadPool]: On list_lake: Close
[0m15:59:58.425298 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_lake, now create_lake_main)
[0m15:59:58.426003 [debug] [ThreadPool]: Creating schema "database: "lake"
schema: "main"
"
[0m15:59:58.431808 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:58.432312 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
        select type from duckdb_databases()
        where database_name='lake'
        and type='sqlite'
    
  
[0m15:59:58.432616 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:59:58.439919 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m15:59:58.441648 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:58.442124 [debug] [ThreadPool]: On create_lake_main: BEGIN
[0m15:59:58.442867 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m15:59:58.443189 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:58.443441 [debug] [ThreadPool]: On create_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_lake_main"} */

    
    
        create schema if not exists "lake"."main"
    
[0m15:59:58.444376 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m15:59:58.445597 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:59:58.445942 [debug] [ThreadPool]: Using duckdb connection "create_lake_main"
[0m15:59:58.446199 [debug] [ThreadPool]: On create_lake_main: COMMIT
[0m15:59:58.446980 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m15:59:58.447292 [debug] [ThreadPool]: On create_lake_main: Close
[0m15:59:58.450992 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_lake_main, now list_lake_main)
[0m15:59:58.455447 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:59:58.455924 [debug] [ThreadPool]: On list_lake_main: BEGIN
[0m15:59:58.456218 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m15:59:58.463239 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m15:59:58.463759 [debug] [ThreadPool]: Using duckdb connection "list_lake_main"
[0m15:59:58.464064 [debug] [ThreadPool]: On list_lake_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_lake_main"} */
select
      'lake' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'lake'
  
[0m15:59:58.480518 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m15:59:58.486248 [debug] [ThreadPool]: On list_lake_main: ROLLBACK
[0m15:59:58.486958 [debug] [ThreadPool]: Failed to rollback 'list_lake_main'
[0m15:59:58.487289 [debug] [ThreadPool]: On list_lake_main: Close
[0m15:59:58.491797 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58283f100>]}
[0m15:59:58.492380 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:58.492710 [debug] [MainThread]: On master: BEGIN
[0m15:59:58.492967 [debug] [MainThread]: Opening a new connection, currently in state init
[0m15:59:58.501216 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m15:59:58.501726 [debug] [MainThread]: On master: COMMIT
[0m15:59:58.502032 [debug] [MainThread]: Using duckdb connection "master"
[0m15:59:58.502274 [debug] [MainThread]: On master: COMMIT
[0m15:59:58.502839 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m15:59:58.503151 [debug] [MainThread]: On master: Close
[0m15:59:58.505892 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m15:59:58.506582 [info ] [MainThread]: 
[0m15:59:58.512373 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m15:59:58.513784 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m15:59:58.514584 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m15:59:58.513174 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m15:59:58.515765 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m15:59:58.516988 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m15:59:58.515139 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m15:59:58.516453 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m15:59:58.517986 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m15:59:58.518534 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m15:59:58.518913 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m15:59:58.519523 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m15:59:58.520596 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m15:59:58.521972 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m15:59:58.523300 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m15:59:58.525669 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m15:59:58.528081 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m15:59:58.529002 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m15:59:58.530561 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m15:59:58.532542 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_lake_main, now model.mta.omny_adoption_increase)
[0m15:59:58.534161 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m15:59:58.534943 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m15:59:58.537172 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m15:59:58.545084 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m15:59:58.545928 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m15:59:58.546590 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m15:59:58.547197 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m15:59:58.552303 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m15:59:58.555450 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m15:59:58.556006 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m15:59:58.556660 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m15:59:58.557321 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m15:59:58.561506 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m15:59:58.566399 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m15:59:58.569449 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m15:59:58.570590 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m15:59:58.576498 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m15:59:58.586408 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m15:59:58.604872 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m15:59:58.606065 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m15:59:58.607377 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m15:59:58.610845 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m15:59:58.611434 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m15:59:58.614872 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m15:59:58.615989 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m15:59:58.619380 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m15:59:58.622918 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m15:59:58.623681 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:58.628698 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m15:59:58.632746 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m15:59:58.633707 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:58.634422 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:58.635608 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m15:59:58.636138 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:58.636615 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:58.637189 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:58.637720 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m15:59:58.638163 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:59:58.638528 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m15:59:58.638901 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m15:59:58.639268 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m15:59:58.639623 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m15:59:58.640047 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m15:59:58.640461 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m15:59:58.640846 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m15:59:58.641289 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m15:59:58.648829 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m15:59:58.649538 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m15:59:58.650193 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m15:59:58.651125 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m15:59:58.651531 [debug] [Thread-1 (]: SQL status: OK in 0.013 seconds
[0m15:59:58.653170 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m15:59:58.654160 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m15:59:58.654779 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:58.655241 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "lake"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:59:58.655729 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "lake"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m15:59:58.657509 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m15:59:58.657996 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m15:59:58.658401 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "lake"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:59:58.660871 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m15:59:58.661442 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m15:59:58.661934 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m15:59:58.664210 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m15:59:58.664740 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m15:59:58.665168 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "lake"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m15:59:58.667480 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m15:59:58.668317 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m15:59:58.669010 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "lake"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m15:59:58.670736 [debug] [Thread-7 (]: SQL status: OK in 0.019 seconds
[0m15:59:58.671492 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m15:59:58.671918 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "lake"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "lake"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "lake"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m15:59:59.128263 [debug] [Thread-2 (]: SQL status: OK in 0.472 seconds
[0m15:59:59.155214 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:59.156591 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m15:59:59.158163 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m15:59:59.172485 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:59.173341 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "lake"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m15:59:59.174660 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m15:59:59.215548 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:59:59.232251 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:59.233109 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m15:59:59.247370 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m15:59:59.259860 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m15:59:59.260878 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "lake"."main"."busiest_specific_times__dbt_backup" cascade
[0m15:59:59.273999 [debug] [Thread-2 (]: SQL status: OK in 0.012 seconds
[0m15:59:59.279921 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m15:59:59.296931 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc7c5e0>]}
[0m15:59:59.298118 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.77s]
[0m15:59:59.299080 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m16:00:03.772348 [debug] [Thread-5 (]: SQL status: OK in 5.110 seconds
[0m16:00:03.778653 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:00:03.795066 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m16:00:03.796791 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m16:00:03.802315 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:00:03.803142 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "lake"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m16:00:03.804603 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m16:00:03.807903 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m16:00:03.830516 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:00:03.831855 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m16:00:03.844937 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m16:00:03.851132 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:00:03.852170 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "lake"."main"."omny_adoption_increase__dbt_backup" cascade
[0m16:00:03.859463 [debug] [Thread-5 (]: SQL status: OK in 0.006 seconds
[0m16:00:03.862340 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m16:00:03.863588 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd49d85d5a0>]}
[0m16:00:03.877147 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 5.33s]
[0m16:00:03.878609 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m16:00:04.175346 [debug] [Thread-4 (]: SQL status: OK in 5.510 seconds
[0m16:00:04.181473 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:00:04.184156 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m16:00:04.186085 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m16:00:04.191633 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:00:04.209335 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "lake"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m16:00:04.210689 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m16:00:04.213863 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m16:00:04.214825 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:00:04.215571 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m16:00:04.231146 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m16:00:04.235847 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:00:04.236780 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "lake"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m16:00:04.246848 [debug] [Thread-4 (]: SQL status: OK in 0.009 seconds
[0m16:00:04.249781 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m16:00:04.250825 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc7d360>]}
[0m16:00:04.252055 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 5.72s]
[0m16:00:04.253149 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m16:00:04.294611 [debug] [Thread-7 (]: SQL status: OK in 5.621 seconds
[0m16:00:04.300839 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:00:04.301626 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "lake"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m16:00:04.302835 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m16:00:04.314814 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:00:04.325039 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "lake"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m16:00:04.326900 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m16:00:04.330279 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m16:00:04.331009 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:00:04.331557 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m16:00:04.429921 [debug] [Thread-7 (]: SQL status: OK in 0.098 seconds
[0m16:00:04.436108 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:00:04.437152 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "lake"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m16:00:04.465668 [debug] [Thread-7 (]: SQL status: OK in 0.028 seconds
[0m16:00:04.468592 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m16:00:04.469615 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc7e470>]}
[0m16:00:04.471034 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 5.92s]
[0m16:00:04.472200 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m16:00:05.297725 [debug] [Thread-6 (]: SQL status: OK in 6.628 seconds
[0m16:00:05.303351 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:00:05.304274 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m16:00:05.305682 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m16:00:05.312392 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:00:05.313333 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "lake"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m16:00:05.314745 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m16:00:05.318140 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m16:00:05.319063 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:00:05.319820 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m16:00:05.331398 [debug] [Thread-6 (]: SQL status: OK in 0.011 seconds
[0m16:00:05.336038 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:00:05.358308 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "lake"."main"."total_riders_per_station__dbt_backup" cascade
[0m16:00:05.373708 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m16:00:05.376796 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m16:00:05.377874 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd49d850c10>]}
[0m16:00:05.379201 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 6.84s]
[0m16:00:05.380688 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m16:00:05.771382 [debug] [Thread-1 (]: SQL status: OK in 7.115 seconds
[0m16:00:05.776470 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:00:05.777330 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m16:00:05.778635 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:00:05.782879 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:00:05.783516 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "lake"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m16:00:05.784536 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m16:00:05.787128 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m16:00:05.787754 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:00:05.788415 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m16:00:05.826365 [debug] [Thread-1 (]: SQL status: OK in 0.037 seconds
[0m16:00:05.830729 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:00:05.831470 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "lake"."main"."avg_riders_per_day__dbt_backup" cascade
[0m16:00:05.838311 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m16:00:05.842271 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m16:00:05.843243 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc7efb0>]}
[0m16:00:05.844197 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 7.32s]
[0m16:00:05.845362 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m16:00:06.336032 [debug] [Thread-3 (]: SQL status: OK in 7.677 seconds
[0m16:00:06.338984 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:00:06.339413 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m16:00:06.340365 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m16:00:06.342940 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:00:06.343303 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "lake"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m16:00:06.344017 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m16:00:06.345504 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m16:00:06.345838 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:00:06.346139 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m16:00:06.349661 [debug] [Thread-3 (]: SQL status: OK in 0.003 seconds
[0m16:00:06.351679 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:00:06.352001 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "lake"."main"."fare_class_boro__dbt_backup" cascade
[0m16:00:06.354901 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m16:00:06.356939 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m16:00:06.434269 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '11849352-194e-4881-a732-2f8fcb83ae32', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58dc7c6a0>]}
[0m16:00:06.435220 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 7.91s]
[0m16:00:06.435783 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m16:00:06.439070 [debug] [MainThread]: Using duckdb connection "master"
[0m16:00:06.439464 [debug] [MainThread]: On master: BEGIN
[0m16:00:06.439780 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:00:06.446959 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m16:00:06.447643 [debug] [MainThread]: On master: COMMIT
[0m16:00:06.448045 [debug] [MainThread]: Using duckdb connection "master"
[0m16:00:06.448340 [debug] [MainThread]: On master: COMMIT
[0m16:00:06.449089 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:00:06.449444 [debug] [MainThread]: On master: Close
[0m16:00:06.452705 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:00:06.453651 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m16:00:06.454181 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m16:00:06.455332 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m16:00:06.455725 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m16:00:06.455984 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m16:00:06.456972 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m16:00:06.457527 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m16:00:06.458155 [info ] [MainThread]: 
[0m16:00:06.458620 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 8.13 seconds (8.13s).
[0m16:00:06.459938 [debug] [MainThread]: Command end result
[0m16:00:06.487129 [info ] [MainThread]: 
[0m16:00:06.487711 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:00:06.488051 [info ] [MainThread]: 
[0m16:00:06.488357 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m16:00:06.489100 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 8.776116, "process_user_time": 115.770226, "process_kernel_time": 2.935552, "process_mem_max_rss": "553472", "process_in_blocks": "240", "process_out_blocks": "18816"}
[0m16:00:06.489614 [debug] [MainThread]: Command `dbt run` succeeded at 16:00:06.489514 after 8.78 seconds
[0m16:00:06.489994 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58f60b430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd580606650>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd58e4d3e50>]}
[0m16:00:06.490356 [debug] [MainThread]: Flushing usage events
[0m16:01:59.889783 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb7d2b430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb6589c30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb658b5b0>]}


============================== 16:01:59.891597 | a416cc5e-e39d-471e-9e8c-c4f9f26f677b ==============================
[0m16:01:59.891597 [info ] [MainThread]: Running with dbt=1.8.7
[0m16:01:59.892058 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m16:02:00.059501 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb7df0a30>]}
[0m16:02:00.112624 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb704c6a0>]}
[0m16:02:00.114994 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m16:02:00.123899 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m16:02:00.190081 [info ] [MainThread]: Unable to do partial parsing because profile has changed
[0m16:02:00.190587 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'partial_parser', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb70310c0>]}
[0m16:02:00.988773 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8d4d990>]}
[0m16:02:01.045474 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8cfee60>]}
[0m16:02:01.045972 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m16:02:01.046312 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8cfecb0>]}
[0m16:02:01.047558 [info ] [MainThread]: 
[0m16:02:01.048060 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m16:02:01.051854 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m16:02:01.079110 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m16:02:01.079562 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m16:02:01.079861 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m16:02:01.089664 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m16:02:01.090920 [debug] [ThreadPool]: On list_mtastats: Close
[0m16:02:01.093261 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m16:02:01.093728 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m16:02:01.098459 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m16:02:01.098737 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m16:02:01.099016 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:01.105315 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m16:02:01.106503 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m16:02:01.106822 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m16:02:01.107730 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m16:02:01.108020 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m16:02:01.108273 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m16:02:01.108703 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m16:02:01.109290 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m16:02:01.109536 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m16:02:01.109777 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m16:02:01.110753 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m16:02:01.111065 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m16:02:01.113721 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m16:02:01.117926 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m16:02:01.118254 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m16:02:01.118518 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m16:02:01.123934 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m16:02:01.124241 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m16:02:01.124516 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m16:02:01.140640 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m16:02:01.141896 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m16:02:01.142327 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m16:02:01.142559 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m16:02:01.146133 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8d801c0>]}
[0m16:02:01.146484 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:01.146717 [debug] [MainThread]: On master: BEGIN
[0m16:02:01.146928 [debug] [MainThread]: Opening a new connection, currently in state init
[0m16:02:01.151915 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m16:02:01.152187 [debug] [MainThread]: On master: COMMIT
[0m16:02:01.152427 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:01.152646 [debug] [MainThread]: On master: COMMIT
[0m16:02:01.152994 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:02:01.153228 [debug] [MainThread]: On master: Close
[0m16:02:01.155016 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m16:02:01.155436 [info ] [MainThread]: 
[0m16:02:01.162240 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m16:02:01.163000 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m16:02:01.163666 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m16:02:01.164565 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m16:02:01.165829 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m16:02:01.166461 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m16:02:01.167179 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m16:02:01.168353 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m16:02:01.167958 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m16:02:01.169285 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m16:02:01.170349 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m16:02:01.170911 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m16:02:01.171605 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m16:02:01.172440 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m16:02:01.173250 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m16:02:01.174160 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m16:02:01.175690 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m16:02:01.178541 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m16:02:01.185983 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m16:02:01.189153 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m16:02:01.189884 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_increase)
[0m16:02:01.190565 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m16:02:01.191118 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m16:02:01.191696 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m16:02:01.192101 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m16:02:01.192456 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m16:02:01.193026 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m16:02:01.193579 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m16:02:01.195991 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m16:02:01.196420 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m16:02:01.196781 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m16:02:01.199179 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m16:02:01.202426 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m16:02:01.206668 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m16:02:01.210013 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m16:02:01.213473 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m16:02:01.213871 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m16:02:01.244897 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m16:02:01.245648 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m16:02:01.247278 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m16:02:01.247723 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m16:02:01.248140 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m16:02:01.251481 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m16:02:01.256427 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m16:02:01.257130 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m16:02:01.259861 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m16:02:01.260291 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:02:01.263481 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m16:02:01.313633 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m16:02:01.314635 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m16:02:01.317470 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m16:02:01.318356 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:02:01.318767 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m16:02:01.319231 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:02:01.320148 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m16:02:01.320508 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:02:01.320913 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:02:01.321383 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m16:02:01.321838 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m16:02:01.322167 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:02:01.322568 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m16:02:01.322903 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m16:02:01.323251 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m16:02:01.323599 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m16:02:01.323936 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m16:02:01.330070 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m16:02:01.330631 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m16:02:01.331273 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m16:02:01.331687 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m16:02:01.332561 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m16:02:01.333554 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m16:02:01.334469 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:02:01.334839 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m16:02:01.337787 [debug] [Thread-2 (]: SQL status: OK in 0.015 seconds
[0m16:02:01.338167 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m16:02:01.338724 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m16:02:01.339485 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m16:02:01.339889 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:02:01.340276 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m16:02:01.343543 [debug] [Thread-5 (]: SQL status: OK in 0.013 seconds
[0m16:02:01.344038 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:02:01.344618 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m16:02:01.345630 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m16:02:01.345962 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:02:01.346298 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m16:02:01.348135 [debug] [Thread-6 (]: SQL status: OK in 0.016 seconds
[0m16:02:01.348559 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:02:01.348994 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m16:02:01.352353 [debug] [Thread-7 (]: SQL status: OK in 0.020 seconds
[0m16:02:01.352870 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:02:01.353246 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m16:02:03.233276 [debug] [Thread-1 (]: SQL status: OK in 1.898 seconds
[0m16:02:03.265092 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:02:03.285412 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m16:02:03.286779 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m16:02:03.335733 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m16:02:03.336730 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:02:03.337392 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m16:02:03.376069 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m16:02:03.385528 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m16:02:03.386397 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m16:02:03.401354 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m16:02:03.406160 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m16:02:03.421154 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8170d30>]}
[0m16:02:03.422760 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.25s]
[0m16:02:03.424434 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m16:02:04.972862 [debug] [Thread-2 (]: SQL status: OK in 3.634 seconds
[0m16:02:04.978410 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m16:02:04.979305 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m16:02:04.980564 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m16:02:04.984236 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m16:02:04.985445 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m16:02:04.986191 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m16:02:05.009755 [debug] [Thread-2 (]: SQL status: OK in 0.023 seconds
[0m16:02:05.014356 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m16:02:05.015536 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m16:02:05.017272 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m16:02:05.019751 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m16:02:05.020723 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8171c00>]}
[0m16:02:05.021804 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 3.85s]
[0m16:02:05.023003 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m16:02:07.468691 [debug] [Thread-5 (]: SQL status: OK in 6.123 seconds
[0m16:02:07.475571 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:02:07.476500 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m16:02:07.477738 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m16:02:07.480623 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m16:02:07.481444 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:02:07.482077 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m16:02:07.509402 [debug] [Thread-5 (]: SQL status: OK in 0.026 seconds
[0m16:02:07.513889 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m16:02:07.514856 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m16:02:07.517545 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m16:02:07.520804 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m16:02:07.522111 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca81728f0>]}
[0m16:02:07.530405 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.33s]
[0m16:02:07.531633 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m16:02:07.625380 [debug] [Thread-7 (]: SQL status: OK in 6.271 seconds
[0m16:02:07.631007 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:02:07.635514 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m16:02:07.637178 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m16:02:07.640799 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m16:02:07.643198 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:02:07.644004 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m16:02:07.696505 [debug] [Thread-4 (]: SQL status: OK in 6.350 seconds
[0m16:02:07.717440 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:02:07.718975 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m16:02:07.719762 [debug] [Thread-7 (]: SQL status: OK in 0.045 seconds
[0m16:02:07.739580 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m16:02:07.740924 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m16:02:07.741897 [debug] [Thread-4 (]: SQL status: OK in 0.007 seconds
[0m16:02:07.744731 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m16:02:07.745611 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:02:07.746512 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m16:02:07.747462 [debug] [Thread-7 (]: SQL status: OK in 0.006 seconds
[0m16:02:07.752188 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m16:02:07.753168 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca81a8b50>]}
[0m16:02:07.754181 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 6.56s]
[0m16:02:07.755379 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m16:02:07.764689 [debug] [Thread-4 (]: SQL status: OK in 0.016 seconds
[0m16:02:07.772932 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m16:02:07.773686 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m16:02:07.774882 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m16:02:07.777653 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m16:02:07.779072 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8170520>]}
[0m16:02:07.781583 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 6.59s]
[0m16:02:07.787893 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m16:02:09.016979 [debug] [Thread-3 (]: SQL status: OK in 7.676 seconds
[0m16:02:09.022397 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:02:09.023136 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m16:02:09.024256 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m16:02:09.027097 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m16:02:09.027742 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:02:09.028300 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m16:02:09.049425 [debug] [Thread-3 (]: SQL status: OK in 0.020 seconds
[0m16:02:09.053945 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m16:02:09.054991 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m16:02:09.056309 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m16:02:09.058557 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m16:02:09.059652 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1ca8170310>]}
[0m16:02:09.060755 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 7.88s]
[0m16:02:09.062039 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m16:02:09.119630 [debug] [Thread-6 (]: SQL status: OK in 7.770 seconds
[0m16:02:09.123920 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:02:09.124498 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m16:02:09.125428 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m16:02:09.126928 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m16:02:09.127258 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:02:09.127541 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m16:02:09.130543 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m16:02:09.132599 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m16:02:09.132979 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m16:02:09.133712 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m16:02:09.135018 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m16:02:09.209724 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a416cc5e-e39d-471e-9e8c-c4f9f26f677b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cab1193f0>]}
[0m16:02:09.210499 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 8.02s]
[0m16:02:09.211060 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m16:02:09.213736 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:09.214112 [debug] [MainThread]: On master: BEGIN
[0m16:02:09.214403 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m16:02:09.220326 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m16:02:09.220789 [debug] [MainThread]: On master: COMMIT
[0m16:02:09.221100 [debug] [MainThread]: Using duckdb connection "master"
[0m16:02:09.221356 [debug] [MainThread]: On master: COMMIT
[0m16:02:09.221842 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m16:02:09.222192 [debug] [MainThread]: On master: Close
[0m16:02:09.224461 [debug] [MainThread]: Connection 'master' was properly closed.
[0m16:02:09.224908 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m16:02:09.225187 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m16:02:09.225423 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m16:02:09.225652 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m16:02:09.225930 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m16:02:09.226137 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m16:02:09.226342 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m16:02:09.226703 [info ] [MainThread]: 
[0m16:02:09.227085 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 8.18 seconds (8.18s).
[0m16:02:09.228274 [debug] [MainThread]: Command end result
[0m16:02:09.253304 [info ] [MainThread]: 
[0m16:02:09.253856 [info ] [MainThread]: [32mCompleted successfully[0m
[0m16:02:09.254192 [info ] [MainThread]: 
[0m16:02:09.254545 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m16:02:09.255292 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 9.405769, "process_user_time": 116.8813, "process_kernel_time": 3.092097, "process_mem_max_rss": "531588", "process_out_blocks": "18232", "process_in_blocks": "0"}
[0m16:02:09.255831 [debug] [MainThread]: Command `dbt run` succeeded at 16:02:09.255732 after 9.41 seconds
[0m16:02:09.256181 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb7d2b430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1cb6babe50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1caaf065f0>]}
[0m16:02:09.256501 [debug] [MainThread]: Flushing usage events
[0m16:02:14.334752 [debug] [MainThread]: Error sending anonymous usage statistics. Disabling tracking for this execution. If you wish to permanently disable tracking, see: https://docs.getdbt.com/reference/global-configs#send-anonymous-usage-stats.
[0m20:29:12.047295 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520e22af20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520c983400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520c9833a0>]}


============================== 20:29:12.051153 | 13fa99d7-33c5-4490-be15-6667e4a4fd17 ==============================
[0m20:29:12.051153 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:29:12.051702 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m20:29:12.220664 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52017700a0>]}
[0m20:29:12.274093 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520c83c640>]}
[0m20:29:12.276605 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:29:12.284301 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:29:12.373658 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:29:12.374120 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:29:12.402946 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5201445cf0>]}
[0m20:29:12.488900 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52015d8c70>]}
[0m20:29:12.489621 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m20:29:12.489973 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52015db5e0>]}
[0m20:29:12.491363 [info ] [MainThread]: 
[0m20:29:12.491913 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:29:12.495895 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m20:29:12.581699 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m20:29:12.582140 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m20:29:12.582531 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:29:12.632328 [debug] [ThreadPool]: SQL status: OK in 0.050 seconds
[0m20:29:12.635603 [debug] [ThreadPool]: On list_mtastats: Close
[0m20:29:12.638127 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m20:29:12.639743 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m20:29:12.644633 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:29:12.644909 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m20:29:12.645197 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:12.653576 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m20:29:12.654712 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:29:12.654957 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m20:29:12.655502 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:29:12.655758 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:29:12.656024 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m20:29:12.657524 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:29:12.658246 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:29:12.658480 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:29:12.658706 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:29:12.659174 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:29:12.659414 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m20:29:12.662422 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m20:29:12.666093 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:29:12.666388 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m20:29:12.666680 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:29:12.671388 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:29:12.671702 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:29:12.672034 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m20:29:12.717360 [debug] [ThreadPool]: SQL status: OK in 0.045 seconds
[0m20:29:12.719757 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m20:29:12.720641 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m20:29:12.720932 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m20:29:12.723963 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520e127d30>]}
[0m20:29:12.724377 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:12.724676 [debug] [MainThread]: On master: BEGIN
[0m20:29:12.724935 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:29:12.730067 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m20:29:12.730436 [debug] [MainThread]: On master: COMMIT
[0m20:29:12.730753 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:12.731009 [debug] [MainThread]: On master: COMMIT
[0m20:29:12.731705 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:29:12.732050 [debug] [MainThread]: On master: Close
[0m20:29:12.733889 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m20:29:12.734384 [info ] [MainThread]: 
[0m20:29:12.745294 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m20:29:12.746008 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m20:29:12.746658 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m20:29:12.747698 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m20:29:12.748927 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m20:29:12.750252 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m20:29:12.750849 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m20:29:12.751666 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m20:29:12.752345 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m20:29:12.753162 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m20:29:12.754573 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m20:29:12.753916 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m20:29:12.758261 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m20:29:12.759567 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m20:29:12.767798 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m20:29:12.768532 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m20:29:12.769231 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m20:29:12.769948 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m20:29:12.770752 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m20:29:12.771536 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m20:29:12.772148 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m20:29:12.773092 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_increase)
[0m20:29:12.774962 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m20:29:12.777853 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m20:29:12.778718 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m20:29:12.779500 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m20:29:12.784880 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m20:29:12.785820 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m20:29:12.786510 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m20:29:12.792082 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m20:29:12.794535 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m20:29:12.799702 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m20:29:12.804777 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m20:29:12.809483 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m20:29:12.813998 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m20:29:12.919322 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m20:29:12.930777 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m20:29:12.931520 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m20:29:12.935929 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m20:29:12.937418 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m20:29:12.937947 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m20:29:12.941561 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m20:29:12.942333 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m20:29:12.943729 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m20:29:12.944219 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:29:12.947812 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m20:29:12.948510 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:29:12.949140 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m20:29:12.952490 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m20:29:12.956121 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m20:29:12.956750 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m20:29:12.957547 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:29:12.957931 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m20:29:12.960737 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m20:29:12.961307 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:29:12.961978 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:29:12.962571 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m20:29:12.963138 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m20:29:12.963810 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:29:12.964604 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:29:12.965087 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m20:29:12.965568 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m20:29:12.965900 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:29:12.973249 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m20:29:12.974544 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m20:29:12.975162 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m20:29:12.975682 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m20:29:12.976300 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m20:29:12.977459 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m20:29:12.979692 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m20:29:12.981057 [debug] [Thread-2 (]: SQL status: OK in 0.018 seconds
[0m20:29:12.982253 [debug] [Thread-1 (]: SQL status: OK in 0.018 seconds
[0m20:29:12.983002 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:29:12.983384 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:29:12.983885 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:29:12.984340 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:29:12.986866 [debug] [Thread-5 (]: SQL status: OK in 0.014 seconds
[0m20:29:12.987258 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:29:12.987670 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m20:29:12.990621 [debug] [Thread-3 (]: SQL status: OK in 0.015 seconds
[0m20:29:12.991135 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:29:12.991636 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:29:12.992612 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m20:29:12.993139 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:29:12.993549 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:29:12.994950 [debug] [Thread-7 (]: SQL status: OK in 0.017 seconds
[0m20:29:12.995416 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:29:12.995956 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m20:29:12.997371 [debug] [Thread-4 (]: SQL status: OK in 0.018 seconds
[0m20:29:12.997814 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:29:12.998460 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m20:29:13.040268 [debug] [Thread-2 (]: SQL status: OK in 0.055 seconds
[0m20:29:13.057135 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:29:13.063585 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m20:29:13.067442 [debug] [Thread-2 (]: SQL status: OK in 0.003 seconds
[0m20:29:13.094653 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:29:13.097365 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:29:13.098077 [debug] [Thread-3 (]: SQL status: OK in 0.106 seconds
[0m20:29:13.098685 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:29:13.103690 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:29:13.107566 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m20:29:13.110630 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m20:29:13.113378 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m20:29:13.114154 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:29:13.114824 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m20:29:13.115328 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m20:29:13.122736 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:29:13.125658 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m20:29:13.127076 [debug] [Thread-6 (]: SQL status: OK in 0.133 seconds
[0m20:29:13.130019 [debug] [Thread-3 (]: SQL status: OK in 0.006 seconds
[0m20:29:13.130980 [debug] [Thread-7 (]: SQL status: OK in 0.134 seconds
[0m20:29:13.134954 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:29:13.135466 [debug] [Thread-2 (]: SQL status: OK in 0.007 seconds
[0m20:29:13.135950 [debug] [Thread-1 (]: SQL status: OK in 0.151 seconds
[0m20:29:13.139081 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:29:13.139756 [debug] [Thread-4 (]: SQL status: OK in 0.141 seconds
[0m20:29:13.142403 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:29:13.143379 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m20:29:13.145774 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m20:29:13.148823 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:29:13.149450 [debug] [Thread-5 (]: SQL status: OK in 0.161 seconds
[0m20:29:13.149976 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m20:29:13.153301 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:29:13.153874 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m20:29:13.155663 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520089bf70>]}
[0m20:29:13.156161 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m20:29:13.158668 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:29:13.159055 [debug] [Thread-6 (]: SQL status: OK in 0.005 seconds
[0m20:29:13.159661 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m20:29:13.160400 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m20:29:13.161106 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.40s]
[0m20:29:13.161794 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m20:29:13.162286 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m20:29:13.163836 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:29:13.164399 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:29:13.165624 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m20:29:13.166348 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m20:29:13.167813 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:29:13.168260 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m20:29:13.168900 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:29:13.170493 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:29:13.171211 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52008c87f0>]}
[0m20:29:13.171585 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m20:29:13.172277 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:29:13.173669 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:29:13.174121 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:29:13.174721 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:29:13.175374 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.40s]
[0m20:29:13.176881 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:29:13.177293 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:29:13.177729 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:29:13.178342 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:29:13.179047 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m20:29:13.179542 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:29:13.180477 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:29:13.181741 [debug] [Thread-6 (]: SQL status: OK in 0.004 seconds
[0m20:29:13.182751 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:29:13.186448 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:29:13.188108 [debug] [Thread-7 (]: SQL status: OK in 0.008 seconds
[0m20:29:13.191182 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m20:29:13.192127 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m20:29:13.196297 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:29:13.197117 [debug] [Thread-4 (]: SQL status: OK in 0.013 seconds
[0m20:29:13.199861 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:29:13.200397 [debug] [Thread-5 (]: SQL status: OK in 0.011 seconds
[0m20:29:13.200903 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m20:29:13.204882 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:29:13.206794 [debug] [Thread-6 (]: SQL status: OK in 0.009 seconds
[0m20:29:13.208101 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m20:29:13.211663 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:29:13.212522 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m20:29:13.214089 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m20:29:13.214771 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m20:29:13.215135 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m20:29:13.216049 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52008ca590>]}
[0m20:29:13.216831 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:29:13.218965 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m20:29:13.220348 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m20:29:13.221379 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.44s]
[0m20:29:13.223594 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m20:29:13.224347 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f52008c92d0>]}
[0m20:29:13.224952 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m20:29:13.226312 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m20:29:13.226926 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m20:29:13.227536 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5200758e50>]}
[0m20:29:13.228190 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.45s]
[0m20:29:13.229544 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m20:29:13.230158 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5200898790>]}
[0m20:29:13.231146 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.48s]
[0m20:29:13.231923 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m20:29:13.288320 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13fa99d7-33c5-4490-be15-6667e4a4fd17', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520159b790>]}
[0m20:29:13.289446 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.46s]
[0m20:29:13.290590 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m20:29:13.292901 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.52s]
[0m20:29:13.293845 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m20:29:13.294762 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m20:29:13.298839 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:13.299252 [debug] [MainThread]: On master: BEGIN
[0m20:29:13.299581 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:29:13.305764 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:29:13.306200 [debug] [MainThread]: On master: COMMIT
[0m20:29:13.306496 [debug] [MainThread]: Using duckdb connection "master"
[0m20:29:13.306759 [debug] [MainThread]: On master: COMMIT
[0m20:29:13.307368 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:29:13.307675 [debug] [MainThread]: On master: Close
[0m20:29:13.310599 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:29:13.310975 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m20:29:13.311476 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m20:29:13.311904 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m20:29:13.312205 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m20:29:13.312454 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m20:29:13.312691 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m20:29:13.312932 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m20:29:13.313767 [info ] [MainThread]: 
[0m20:29:13.315064 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m20:29:13.317239 [debug] [MainThread]: Command end result
[0m20:29:13.344048 [info ] [MainThread]: 
[0m20:29:13.344668 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:29:13.345066 [info ] [MainThread]: 
[0m20:29:13.345418 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m20:29:13.346176 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.3438574, "process_user_time": 2.642209, "process_kernel_time": 0.429475, "process_mem_max_rss": "274420", "process_in_blocks": "40", "process_out_blocks": "6200"}
[0m20:29:13.346710 [debug] [MainThread]: Command `dbt run` succeeded at 20:29:13.346614 after 1.34 seconds
[0m20:29:13.347126 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520e22af20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520165c4f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f520c877f70>]}
[0m20:29:13.347535 [debug] [MainThread]: Flushing usage events
[0m20:30:16.323836 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9524e97010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95235e0b80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95235e0be0>]}


============================== 20:30:16.326151 | 7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0 ==============================
[0m20:30:16.326151 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:30:16.326795 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m20:30:16.509500 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9524f59bd0>]}
[0m20:30:16.579414 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95182f4ee0>]}
[0m20:30:16.582274 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:30:16.589845 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:30:16.681586 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:30:16.682176 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:30:16.709694 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9518065de0>]}
[0m20:30:16.777749 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9518065660>]}
[0m20:30:16.778287 [info ] [MainThread]: Found 7 models, 8 sources, 416 macros
[0m20:30:16.778690 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9518065690>]}
[0m20:30:16.780066 [info ] [MainThread]: 
[0m20:30:16.780624 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:30:16.785072 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m20:30:16.815549 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m20:30:16.816271 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m20:30:16.816612 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:30:16.827214 [debug] [ThreadPool]: SQL status: OK in 0.010 seconds
[0m20:30:16.828820 [debug] [ThreadPool]: On list_mtastats: Close
[0m20:30:16.832841 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m20:30:16.833502 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m20:30:16.838844 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:30:16.839206 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m20:30:16.839468 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:30:16.845324 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:30:16.846574 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:30:16.846888 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m20:30:16.847493 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:30:16.847834 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:30:16.848123 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m20:30:16.848677 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:30:16.849499 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:30:16.849995 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:30:16.850318 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:30:16.851944 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:30:16.852314 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m20:30:16.855346 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m20:30:16.859117 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:30:16.859406 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m20:30:16.859713 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:30:16.865331 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:30:16.865639 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:30:16.865927 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m20:30:16.881546 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m20:30:16.885459 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m20:30:16.885922 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m20:30:16.886185 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m20:30:16.889462 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f952517dde0>]}
[0m20:30:16.889835 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:16.890075 [debug] [MainThread]: On master: BEGIN
[0m20:30:16.890284 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:30:16.896253 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:30:16.896570 [debug] [MainThread]: On master: COMMIT
[0m20:30:16.896853 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:16.897081 [debug] [MainThread]: On master: COMMIT
[0m20:30:16.897452 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:30:16.897686 [debug] [MainThread]: On master: Close
[0m20:30:16.899251 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m20:30:16.899607 [info ] [MainThread]: 
[0m20:30:16.907045 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m20:30:16.907679 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m20:30:16.909758 [debug] [Thread-3 (]: Began running node model.mta.fare_class_boro
[0m20:30:16.908396 [info ] [Thread-1 (]: 1 of 7 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m20:30:16.911350 [debug] [Thread-4 (]: Began running node model.mta.omny_adoption_by_station
[0m20:30:16.910672 [info ] [Thread-2 (]: 2 of 7 START sql table model main.busiest_specific_times ....................... [RUN]
[0m20:30:16.912097 [info ] [Thread-3 (]: 3 of 7 START sql table model main.fare_class_boro .............................. [RUN]
[0m20:30:16.913326 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m20:30:16.913816 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_increase
[0m20:30:16.914494 [info ] [Thread-4 (]: 4 of 7 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m20:30:16.915123 [debug] [Thread-6 (]: Began running node model.mta.total_riders_per_station
[0m20:30:16.915752 [debug] [Thread-7 (]: Began running node model.mta.weekly_riders_per_station
[0m20:30:16.916306 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m20:30:16.917205 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m20:30:16.917822 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m20:30:16.918573 [info ] [Thread-5 (]: 5 of 7 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m20:30:16.919341 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m20:30:16.920134 [info ] [Thread-6 (]: 6 of 7 START sql table model main.total_riders_per_station ..................... [RUN]
[0m20:30:16.921332 [info ] [Thread-7 (]: 7 of 7 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m20:30:16.922181 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m20:30:16.923136 [debug] [Thread-3 (]: Began compiling node model.mta.fare_class_boro
[0m20:30:16.932275 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m20:30:16.933063 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_increase)
[0m20:30:16.933745 [debug] [Thread-4 (]: Began compiling node model.mta.omny_adoption_by_station
[0m20:30:16.934454 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m20:30:16.935069 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m20:30:16.939574 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m20:30:16.943561 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m20:30:16.944678 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_increase
[0m20:30:16.945643 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m20:30:16.948841 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m20:30:16.949563 [debug] [Thread-6 (]: Began compiling node model.mta.total_riders_per_station
[0m20:30:16.950153 [debug] [Thread-7 (]: Began compiling node model.mta.weekly_riders_per_station
[0m20:30:16.953012 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m20:30:16.953602 [debug] [Thread-3 (]: Began executing node model.mta.fare_class_boro
[0m20:30:16.966464 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m20:30:16.990941 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m20:30:16.991839 [debug] [Thread-4 (]: Began executing node model.mta.omny_adoption_by_station
[0m20:30:17.060864 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m20:30:17.063604 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m20:30:17.067966 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m20:30:17.072427 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m20:30:17.075902 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m20:30:17.076569 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.077045 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_increase
[0m20:30:17.077591 [debug] [Thread-6 (]: Began executing node model.mta.total_riders_per_station
[0m20:30:17.078442 [debug] [Thread-7 (]: Began executing node model.mta.weekly_riders_per_station
[0m20:30:17.080506 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.080983 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m20:30:17.081578 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.084733 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m20:30:17.085188 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.088369 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m20:30:17.090897 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m20:30:17.091416 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m20:30:17.091906 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:30:17.092384 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m20:30:17.093084 [debug] [Thread-3 (]: On model.mta.fare_class_boro: BEGIN
[0m20:30:17.093963 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.094758 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.095136 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m20:30:17.095602 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.101483 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m20:30:17.102145 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m20:30:17.102717 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: BEGIN
[0m20:30:17.103544 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: BEGIN
[0m20:30:17.104068 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m20:30:17.104941 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m20:30:17.106108 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m20:30:17.106853 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m20:30:17.108086 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.108793 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m20:30:17.109315 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m20:30:17.110250 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:30:17.111120 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.112147 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m20:30:17.115461 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m20:30:17.116153 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.117291 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:30:17.118358 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m20:30:17.119276 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.121144 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:30:17.121860 [debug] [Thread-5 (]: SQL status: OK in 0.016 seconds
[0m20:30:17.123398 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.124521 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m20:30:17.128023 [debug] [Thread-6 (]: SQL status: OK in 0.021 seconds
[0m20:30:17.128786 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.130402 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:30:17.131935 [debug] [Thread-7 (]: SQL status: OK in 0.023 seconds
[0m20:30:17.133754 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.135190 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m20:30:17.144115 [debug] [Thread-2 (]: SQL status: OK in 0.026 seconds
[0m20:30:17.164751 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.166184 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m20:30:17.168964 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m20:30:17.173404 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.182133 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m20:30:17.187835 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m20:30:17.239728 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:30:17.241168 [debug] [Thread-3 (]: SQL status: OK in 0.119 seconds
[0m20:30:17.243113 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.249595 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.251003 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:30:17.252051 [debug] [Thread-4 (]: SQL status: OK in 0.139 seconds
[0m20:30:17.252860 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m20:30:17.255256 [debug] [Thread-6 (]: SQL status: OK in 0.124 seconds
[0m20:30:17.259745 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.260434 [debug] [Thread-1 (]: SQL status: OK in 0.149 seconds
[0m20:30:17.261759 [debug] [Thread-2 (]: SQL status: OK in 0.007 seconds
[0m20:30:17.269707 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.270427 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m20:30:17.271162 [debug] [Thread-3 (]: SQL status: OK in 0.010 seconds
[0m20:30:17.273986 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.274566 [debug] [Thread-5 (]: SQL status: OK in 0.149 seconds
[0m20:30:17.275020 [debug] [Thread-7 (]: SQL status: OK in 0.139 seconds
[0m20:30:17.279619 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:30:17.280129 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m20:30:17.283140 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.283644 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m20:30:17.287338 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.287734 [debug] [Thread-4 (]: SQL status: OK in 0.007 seconds
[0m20:30:17.290160 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.290615 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m20:30:17.291235 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m20:30:17.291957 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m20:30:17.292370 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m20:30:17.292851 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:30:17.295964 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.296453 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m20:30:17.300168 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.300635 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m20:30:17.301084 [debug] [Thread-3 (]: SQL status: OK in 0.004 seconds
[0m20:30:17.304114 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.304632 [debug] [Thread-5 (]: SQL status: OK in 0.007 seconds
[0m20:30:17.305168 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m20:30:17.305842 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m20:30:17.307881 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m20:30:17.308374 [debug] [Thread-7 (]: SQL status: OK in 0.003 seconds
[0m20:30:17.310086 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m20:30:17.310575 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m20:30:17.313506 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.315657 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95174e4c70>]}
[0m20:30:17.316275 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m20:30:17.319003 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.319436 [debug] [Thread-6 (]: SQL status: OK in 0.005 seconds
[0m20:30:17.319875 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.320446 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m20:30:17.321208 [info ] [Thread-2 (]: 2 of 7 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.40s]
[0m20:30:17.323202 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:30:17.323595 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m20:30:17.324044 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m20:30:17.325634 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:30:17.326058 [debug] [Thread-3 (]: On model.mta.fare_class_boro: COMMIT
[0m20:30:17.326938 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m20:30:17.327436 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.327892 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m20:30:17.329557 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:30:17.330367 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.331244 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m20:30:17.332164 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:30:17.334207 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:30:17.334726 [debug] [Thread-3 (]: SQL status: OK in 0.004 seconds
[0m20:30:17.335106 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.335572 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:30:17.337261 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:30:17.338081 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.341495 [debug] [Thread-3 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:30:17.342152 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:30:17.342625 [debug] [Thread-4 (]: SQL status: OK in 0.005 seconds
[0m20:30:17.343475 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.344080 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:30:17.344897 [debug] [Thread-3 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m20:30:17.348797 [debug] [Thread-4 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:30:17.349468 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:30:17.350218 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m20:30:17.352025 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m20:30:17.353711 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m20:30:17.361963 [debug] [Thread-6 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:30:17.363211 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m20:30:17.366717 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:30:17.367668 [debug] [Thread-7 (]: SQL status: OK in 0.015 seconds
[0m20:30:17.368319 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m20:30:17.374878 [debug] [Thread-3 (]: SQL status: OK in 0.023 seconds
[0m20:30:17.375836 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:30:17.376383 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m20:30:17.377001 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m20:30:17.379445 [debug] [Thread-7 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:30:17.381642 [debug] [Thread-3 (]: On model.mta.fare_class_boro: Close
[0m20:30:17.382280 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m20:30:17.383830 [debug] [Thread-4 (]: On model.mta.omny_adoption_by_station: Close
[0m20:30:17.384534 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m20:30:17.385666 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95174e4eb0>]}
[0m20:30:17.386801 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95174e6e00>]}
[0m20:30:17.387717 [debug] [Thread-6 (]: SQL status: OK in 0.008 seconds
[0m20:30:17.389033 [info ] [Thread-3 (]: 3 of 7 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.47s]
[0m20:30:17.390376 [info ] [Thread-4 (]: 4 of 7 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.47s]
[0m20:30:17.392401 [debug] [Thread-6 (]: On model.mta.total_riders_per_station: Close
[0m20:30:17.393286 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:30:17.394044 [debug] [Thread-3 (]: Finished running node model.mta.fare_class_boro
[0m20:30:17.395089 [debug] [Thread-4 (]: Finished running node model.mta.omny_adoption_by_station
[0m20:30:17.396361 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95174e6470>]}
[0m20:30:17.398040 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m20:30:17.398482 [debug] [Thread-7 (]: SQL status: OK in 0.011 seconds
[0m20:30:17.400111 [info ] [Thread-6 (]: 6 of 7 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.46s]
[0m20:30:17.401058 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9517ff4280>]}
[0m20:30:17.402365 [debug] [Thread-7 (]: On model.mta.weekly_riders_per_station: Close
[0m20:30:17.402793 [debug] [Thread-5 (]: SQL status: OK in 0.017 seconds
[0m20:30:17.403552 [debug] [Thread-6 (]: Finished running node model.mta.total_riders_per_station
[0m20:30:17.404283 [info ] [Thread-1 (]: 1 of 7 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.49s]
[0m20:30:17.404962 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95173a0f10>]}
[0m20:30:17.406429 [debug] [Thread-5 (]: On model.mta.omny_adoption_increase: Close
[0m20:30:17.407582 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m20:30:17.408279 [info ] [Thread-7 (]: 7 of 7 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.47s]
[0m20:30:17.478946 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7aa4ee3d-90fe-4d60-bf5e-e95c5ea21fe0', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95173e9540>]}
[0m20:30:17.480014 [debug] [Thread-7 (]: Finished running node model.mta.weekly_riders_per_station
[0m20:30:17.480866 [info ] [Thread-5 (]: 5 of 7 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.55s]
[0m20:30:17.481840 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_increase
[0m20:30:17.485206 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:17.485484 [debug] [MainThread]: On master: BEGIN
[0m20:30:17.485747 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:30:17.494401 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m20:30:17.495006 [debug] [MainThread]: On master: COMMIT
[0m20:30:17.495474 [debug] [MainThread]: Using duckdb connection "master"
[0m20:30:17.495884 [debug] [MainThread]: On master: COMMIT
[0m20:30:17.496624 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:30:17.497030 [debug] [MainThread]: On master: Close
[0m20:30:17.500271 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:30:17.501018 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m20:30:17.501773 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m20:30:17.502196 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m20:30:17.502467 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m20:30:17.502719 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m20:30:17.503086 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m20:30:17.503506 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m20:30:17.504289 [info ] [MainThread]: 
[0m20:30:17.504733 [info ] [MainThread]: Finished running 7 table models in 0 hours 0 minutes and 0.72 seconds (0.72s).
[0m20:30:17.506132 [debug] [MainThread]: Command end result
[0m20:30:17.535507 [info ] [MainThread]: 
[0m20:30:17.536559 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:30:17.536999 [info ] [MainThread]: 
[0m20:30:17.537429 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=0 SKIP=0 TOTAL=7
[0m20:30:17.538392 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.2629735, "process_user_time": 2.362546, "process_kernel_time": 0.457857, "process_mem_max_rss": "274612", "process_out_blocks": "6776", "process_in_blocks": "0"}
[0m20:30:17.539054 [debug] [MainThread]: Command `dbt run` succeeded at 20:30:17.538938 after 1.26 seconds
[0m20:30:17.539535 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9524e97010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95182203a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9524e31ab0>]}
[0m20:30:17.540064 [debug] [MainThread]: Flushing usage events
[0m20:47:31.835473 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052f93efe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052e097340>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052e0972e0>]}


============================== 20:47:31.837525 | c6ffc001-aa37-4f84-a964-b09cc51ea90c ==============================
[0m20:47:31.837525 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:47:31.837981 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:47:32.018712 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'c6ffc001-aa37-4f84-a964-b09cc51ea90c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052acc5e40>]}
[0m20:47:32.072976 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'c6ffc001-aa37-4f84-a964-b09cc51ea90c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052e25f370>]}
[0m20:47:32.075787 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:47:32.085768 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:47:32.189004 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:47:32.189803 [debug] [MainThread]: Partial parsing: updated file: mta://models/daily_ridership.sql
[0m20:47:32.371952 [error] [MainThread]: Encountered an error:
Compilation Error
  Model 'model.mta.daily_ridership' (models/daily_ridership.sql) depends on a source named 'main.mta_daily_ridership' which was not found
[0m20:47:32.372912 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 0.58226216, "process_user_time": 1.294452, "process_kernel_time": 0.083214, "process_mem_max_rss": "134708", "process_out_blocks": "8", "command_success": false, "process_in_blocks": "0"}
[0m20:47:32.373426 [debug] [MainThread]: Command `dbt run` failed at 20:47:32.373339 after 0.58 seconds
[0m20:47:32.373740 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052f93efe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f0522bbbdf0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f052f838e20>]}
[0m20:47:32.374051 [debug] [MainThread]: Flushing usage events
[0m20:48:27.492627 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878ff37010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878e693490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878e693430>]}


============================== 20:48:27.494666 | 72b45312-8664-420c-96b2-99c2c8302f30 ==============================
[0m20:48:27.494666 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:48:27.495219 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'invocation_command': 'dbt run', 'log_format': 'default', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:48:27.674312 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878fff9bd0>]}
[0m20:48:27.739700 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878e5a8ee0>]}
[0m20:48:27.742340 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:48:27.750731 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:48:27.836667 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 2 files changed.
[0m20:48:27.837628 [debug] [MainThread]: Partial parsing: updated file: mta://models/sources.yml
[0m20:48:27.838037 [debug] [MainThread]: Partial parsing: updated file: mta://models/daily_ridership.sql
[0m20:48:28.157262 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8780e35c90>]}
[0m20:48:28.271436 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8780e0fdf0>]}
[0m20:48:28.271971 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m20:48:28.272364 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8780e0f8b0>]}
[0m20:48:28.273931 [info ] [MainThread]: 
[0m20:48:28.274500 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:48:28.278765 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m20:48:28.338864 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m20:48:28.339532 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m20:48:28.340264 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:48:28.369925 [debug] [ThreadPool]: SQL status: OK in 0.030 seconds
[0m20:48:28.371137 [debug] [ThreadPool]: On list_mtastats: Close
[0m20:48:28.374215 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m20:48:28.374855 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m20:48:28.381369 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:48:28.381772 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m20:48:28.382201 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:48:28.388806 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:48:28.389781 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:48:28.390032 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m20:48:28.390488 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:48:28.390756 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:48:28.391014 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m20:48:28.392050 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m20:48:28.392693 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:48:28.392969 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:48:28.393244 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:48:28.393670 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:48:28.393947 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m20:48:28.396519 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m20:48:28.400165 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:48:28.400462 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m20:48:28.400751 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:48:28.406073 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:48:28.406449 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:48:28.406733 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m20:48:28.433042 [debug] [ThreadPool]: SQL status: OK in 0.026 seconds
[0m20:48:28.435126 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m20:48:28.436170 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m20:48:28.436446 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m20:48:28.439795 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f87830bebf0>]}
[0m20:48:28.440169 [debug] [MainThread]: Using duckdb connection "master"
[0m20:48:28.440422 [debug] [MainThread]: On master: BEGIN
[0m20:48:28.440639 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:48:28.446146 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m20:48:28.446441 [debug] [MainThread]: On master: COMMIT
[0m20:48:28.446704 [debug] [MainThread]: Using duckdb connection "master"
[0m20:48:28.446925 [debug] [MainThread]: On master: COMMIT
[0m20:48:28.447301 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:48:28.447542 [debug] [MainThread]: On master: Close
[0m20:48:28.449081 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m20:48:28.449430 [info ] [MainThread]: 
[0m20:48:28.459868 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m20:48:28.460993 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m20:48:28.460528 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m20:48:28.462709 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m20:48:28.463481 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m20:48:28.461611 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m20:48:28.464374 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m20:48:28.464860 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m20:48:28.465551 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m20:48:28.466183 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m20:48:28.466651 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m20:48:28.467147 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m20:48:28.467825 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m20:48:28.468318 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m20:48:28.469477 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m20:48:28.471291 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m20:48:28.474152 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m20:48:28.482989 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m20:48:28.484958 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m20:48:28.486698 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m20:48:28.487315 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m20:48:28.487963 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m20:48:28.488723 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m20:48:28.489345 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m20:48:28.490265 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m20:48:28.491100 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m20:48:28.491870 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m20:48:28.495564 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m20:48:28.496458 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m20:48:28.496828 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m20:48:28.497358 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m20:48:28.502968 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m20:48:28.505794 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m20:48:28.506546 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m20:48:28.507111 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m20:48:28.507825 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m20:48:28.531226 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m20:48:28.532470 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m20:48:28.534896 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m20:48:28.546851 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m20:48:28.547446 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m20:48:28.550847 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m20:48:28.553461 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m20:48:28.558290 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m20:48:28.564379 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m20:48:28.565261 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m20:48:28.567995 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m20:48:28.569850 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m20:48:28.570925 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m20:48:28.571647 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:48:28.572697 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m20:48:28.573169 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m20:48:28.575689 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m20:48:28.576130 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:48:28.576778 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:48:28.579247 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m20:48:28.581908 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m20:48:28.582422 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m20:48:28.584690 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m20:48:28.587388 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m20:48:28.588136 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m20:48:28.588663 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m20:48:28.589030 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:48:28.590027 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:48:28.590601 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:48:28.592193 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:48:28.592688 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m20:48:28.593302 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:48:28.593843 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m20:48:28.594417 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:48:28.594953 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m20:48:28.601424 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m20:48:28.602174 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m20:48:28.603289 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m20:48:28.603742 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m20:48:28.604404 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m20:48:28.605046 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m20:48:28.605534 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m20:48:28.606488 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m20:48:28.607032 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m20:48:28.607526 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m20:48:28.608043 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:48:28.608531 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m20:48:28.609153 [debug] [Thread-3 (]: SQL status: OK in 0.015 seconds
[0m20:48:28.610630 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:48:28.611299 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:48:28.612006 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:48:28.612491 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:48:28.614158 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    date,
    subways_total_ridership AS ridership,
    'subway' AS transport_type,
    subways_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    buses_total_ridership AS ridership,
    'buses' AS transport_type,
    buses_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    lirr_total_ridership AS ridership,
    'lirr' AS transport_type,
    lirr_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    metro_north_total_ridership AS ridership,
    'metro_north' AS transport_type,
    metro_north_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    access_a_ride_total_trips AS ridership,
    'access_a_ride' AS transport_type,
    access_a_ride_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    bridges_tunnels_total_traffic AS ridership,
    'bridges_tunnels' AS transport_type,
    bridges_tunnels_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    staten_island_railway_total_ridership AS ridership,
    'staten_island_railway' AS transport_type,
    staten_island_railway_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership";
    );
  
  
[0m20:48:28.636585 [debug] [Thread-3 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    date,
    subways_total_ridership AS ridership,
    'subway' AS transport_type,
    subways_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    buses_total_ridership AS ridership,
    'buses' AS transport_type,
    buses_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    lirr_total_ridership AS ridership,
    'lirr' AS transport_type,
    lirr_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    metro_north_total_ridership AS ridership,
    'metro_north' AS transport_type,
    metro_north_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    access_a_ride_total_trips AS ridership,
    'access_a_ride' AS transport_type,
    access_a_ride_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    bridges_tunnels_total_traffic AS ridership,
    'bridges_tunnels' AS transport_type,
    bridges_tunnels_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    staten_island_railway_total_ridership AS ridership,
    'staten_island_railway' AS transport_type,
    staten_island_railway_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership";
    );
  
  
[0m20:48:28.637474 [debug] [Thread-4 (]: SQL status: OK in 0.032 seconds
[0m20:48:28.638083 [debug] [Thread-3 (]: DuckDB adapter: Rolling back transaction.
[0m20:48:28.639088 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:48:28.640713 [debug] [Thread-3 (]: On model.mta.daily_ridership: ROLLBACK
[0m20:48:28.642263 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:48:28.642987 [debug] [Thread-5 (]: SQL status: OK in 0.037 seconds
[0m20:48:28.645885 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:48:28.646632 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m20:48:28.649272 [debug] [Thread-8 (]: SQL status: OK in 0.043 seconds
[0m20:48:28.651091 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:48:28.652569 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m20:48:28.655831 [debug] [Thread-6 (]: SQL status: OK in 0.048 seconds
[0m20:48:28.656700 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:48:28.658267 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m20:48:28.661720 [debug] [Thread-7 (]: SQL status: OK in 0.053 seconds
[0m20:48:28.662569 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:48:28.663579 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:48:28.667613 [debug] [Thread-2 (]: SQL status: OK in 0.053 seconds
[0m20:48:28.683933 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:48:28.686454 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m20:48:28.690726 [debug] [Thread-2 (]: SQL status: OK in 0.003 seconds
[0m20:48:28.733737 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:48:28.737374 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:48:28.738493 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:48:28.739365 [debug] [Thread-4 (]: SQL status: OK in 0.094 seconds
[0m20:48:28.740627 [debug] [Thread-3 (]: Failed to rollback 'model.mta.daily_ridership'
[0m20:48:28.746284 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:48:28.751254 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m20:48:28.753488 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m20:48:28.757650 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m20:48:28.760814 [debug] [Thread-3 (]: Runtime Error in model daily_ridership (models/daily_ridership.sql)
  Parser Error: syntax error at or near ";"
[0m20:48:28.771867 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:48:28.775396 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878f26feb0>]}
[0m20:48:28.776823 [debug] [Thread-4 (]: SQL status: OK in 0.009 seconds
[0m20:48:28.777516 [debug] [Thread-1 (]: SQL status: OK in 0.164 seconds
[0m20:48:28.782536 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m20:48:28.784683 [error] [Thread-3 (]: 3 of 8 ERROR creating sql table model main.daily_ridership ..................... [[31mERROR[0m in 0.30s]
[0m20:48:28.788630 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:48:28.796153 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:48:28.797160 [debug] [Thread-7 (]: SQL status: OK in 0.130 seconds
[0m20:48:28.797913 [debug] [Thread-8 (]: SQL status: OK in 0.143 seconds
[0m20:48:28.798541 [debug] [Thread-5 (]: SQL status: OK in 0.150 seconds
[0m20:48:28.799304 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m20:48:28.800058 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:48:28.800704 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m20:48:28.801439 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m20:48:28.805010 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:48:28.816126 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:48:28.820817 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:48:28.821943 [debug] [Thread-6 (]: SQL status: OK in 0.163 seconds
[0m20:48:28.823526 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:48:28.825830 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m20:48:28.826535 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m20:48:28.827077 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m20:48:28.827616 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m20:48:28.827994 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m20:48:28.832017 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:48:28.833386 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f87832361d0>]}
[0m20:48:28.836013 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m20:48:28.841202 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:48:28.842391 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m20:48:28.843025 [debug] [Thread-8 (]: SQL status: OK in 0.006 seconds
[0m20:48:28.843637 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m20:48:28.844856 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.37s]
[0m20:48:28.847619 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:48:28.848699 [debug] [Thread-5 (]: SQL status: OK in 0.011 seconds
[0m20:48:28.849265 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:48:28.853447 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:48:28.856273 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:48:28.857673 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m20:48:28.858298 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:48:28.859912 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:48:28.860369 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m20:48:28.861034 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:48:28.861686 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m20:48:28.862309 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:48:28.863382 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:48:28.864237 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:48:28.868736 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:48:28.870291 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:48:28.872217 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:48:28.873130 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:48:28.876229 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:48:28.880097 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:48:28.883659 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:48:28.884688 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m20:48:28.885201 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m20:48:28.890352 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:48:28.891628 [debug] [Thread-8 (]: SQL status: OK in 0.017 seconds
[0m20:48:28.894759 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m20:48:28.895968 [debug] [Thread-5 (]: SQL status: OK in 0.022 seconds
[0m20:48:28.900545 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:48:28.901453 [debug] [Thread-6 (]: SQL status: OK in 0.023 seconds
[0m20:48:28.902305 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:48:28.908257 [debug] [Thread-7 (]: SQL status: OK in 0.006 seconds
[0m20:48:28.908895 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:48:28.909413 [debug] [Thread-4 (]: SQL status: OK in 0.040 seconds
[0m20:48:28.909956 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m20:48:28.912656 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:48:28.914089 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m20:48:28.915546 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m20:48:28.916152 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m20:48:28.917935 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m20:48:28.918642 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m20:48:28.919386 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8783235870>]}
[0m20:48:28.920085 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f87832341c0>]}
[0m20:48:28.920854 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m20:48:28.921546 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8783234d00>]}
[0m20:48:28.922124 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m20:48:28.922949 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.46s]
[0m20:48:28.923773 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.43s]
[0m20:48:28.925205 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m20:48:28.925594 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m20:48:28.926239 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.43s]
[0m20:48:28.927550 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m20:48:28.928274 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m20:48:28.929033 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m20:48:28.930097 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8783235510>]}
[0m20:48:28.931897 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m20:48:28.932656 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m20:48:28.933339 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8783235930>]}
[0m20:48:28.934652 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.43s]
[0m20:48:29.036079 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '72b45312-8664-420c-96b2-99c2c8302f30', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f8783234a90>]}
[0m20:48:29.037488 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.44s]
[0m20:48:29.038327 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m20:48:29.039047 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.54s]
[0m20:48:29.039712 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m20:48:29.040495 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m20:48:29.043407 [debug] [MainThread]: Using duckdb connection "master"
[0m20:48:29.043781 [debug] [MainThread]: On master: BEGIN
[0m20:48:29.044074 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:48:29.060804 [debug] [MainThread]: DuckDB adapter: Error running SQL: BEGIN
[0m20:48:29.061932 [debug] [MainThread]: DuckDB adapter: Rolling back transaction.
[0m20:48:29.062395 [info ] [MainThread]: Database error while running on-run-end
[0m20:48:29.063067 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:48:29.063420 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m20:48:29.063686 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m20:48:29.063932 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m20:48:29.064175 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m20:48:29.064413 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m20:48:29.064663 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m20:48:29.064885 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m20:48:29.065175 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m20:48:29.065648 [info ] [MainThread]: 
[0m20:48:29.066129 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 0.79 seconds (0.79s).
[0m20:48:29.067953 [debug] [MainThread]: Command end result
[0m20:48:29.100771 [info ] [MainThread]: 
[0m20:48:29.101416 [info ] [MainThread]: [31mCompleted with 2 errors and 0 warnings:[0m
[0m20:48:29.101778 [info ] [MainThread]: 
[0m20:48:29.102176 [error] [MainThread]:   Runtime Error in model daily_ridership (models/daily_ridership.sql)
  Parser Error: syntax error at or near ";"
[0m20:48:29.102565 [info ] [MainThread]: 
[0m20:48:29.102920 [error] [MainThread]:   on-run-end failed, error:
 IO Error: Could not set lock on file "/home/christianocean/mta/mta/mtastats/sources/mta/mtastats.duckdb": Conflicting lock is held in /home/christianocean/.nvm/versions/node/v21.7.3/bin/node (PID 1762776). However, you would be able to open this database in read-only mode, e.g. by using the -readonly parameter in the CLI. See also https://duckdb.org/docs/connect/concurrency
[0m20:48:29.103300 [info ] [MainThread]: 
[0m20:48:29.103648 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=2 SKIP=0 TOTAL=9
[0m20:48:29.104772 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 1.6566494, "process_user_time": 2.693239, "process_kernel_time": 0.610837, "process_mem_max_rss": "284676", "process_in_blocks": "6664", "process_out_blocks": "7104", "command_success": false}
[0m20:48:29.106113 [debug] [MainThread]: Command `dbt run` failed at 20:48:29.105837 after 1.66 seconds
[0m20:48:29.107064 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878ff37010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f87832d2b30>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f878f26d450>]}
[0m20:48:29.107775 [debug] [MainThread]: Flushing usage events
[0m20:49:00.905532 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f48536fb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46c8f430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46c8f3d0>]}


============================== 20:49:00.907580 | 57bae619-3200-420f-8cf3-17ea1d87a33c ==============================
[0m20:49:00.907580 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:49:00.908088 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m20:49:01.091740 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f438bde40>]}
[0m20:49:01.149037 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46e57370>]}
[0m20:49:01.151762 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:49:01.159441 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:49:01.279656 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m20:49:01.280225 [debug] [MainThread]: Partial parsing: updated file: mta://models/daily_ridership.sql
[0m20:49:01.561068 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b6e2800>]}
[0m20:49:01.640280 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b6a8e20>]}
[0m20:49:01.641848 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m20:49:01.642312 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b6a8160>]}
[0m20:49:01.643949 [info ] [MainThread]: 
[0m20:49:01.644525 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:49:01.649255 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m20:49:01.772904 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m20:49:01.773317 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m20:49:01.773619 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:49:01.806187 [debug] [ThreadPool]: SQL status: OK in 0.032 seconds
[0m20:49:01.807382 [debug] [ThreadPool]: On list_mtastats: Close
[0m20:49:01.810448 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m20:49:01.811007 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m20:49:01.815653 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:01.816060 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m20:49:01.816318 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:49:01.823451 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m20:49:01.824418 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:01.824678 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m20:49:01.825140 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:49:01.825382 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:01.825623 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m20:49:01.826110 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:49:01.826846 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:49:01.827091 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:01.827338 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:49:01.827826 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:49:01.828160 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m20:49:01.831163 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m20:49:01.835928 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:49:01.836318 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m20:49:01.836594 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:49:01.842702 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:49:01.843164 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:49:01.843515 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m20:49:01.865175 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m20:49:01.866863 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m20:49:01.867426 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m20:49:01.867732 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m20:49:01.871090 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f4881f0d0>]}
[0m20:49:01.871636 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:01.871919 [debug] [MainThread]: On master: BEGIN
[0m20:49:01.872193 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:49:01.878422 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:49:01.879100 [debug] [MainThread]: On master: COMMIT
[0m20:49:01.879552 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:01.879947 [debug] [MainThread]: On master: COMMIT
[0m20:49:01.880701 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:49:01.881140 [debug] [MainThread]: On master: Close
[0m20:49:01.883907 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m20:49:01.884374 [info ] [MainThread]: 
[0m20:49:01.893004 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m20:49:01.893915 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m20:49:01.894732 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m20:49:01.895436 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m20:49:01.896035 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m20:49:01.896729 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m20:49:01.897280 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m20:49:01.897922 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m20:49:01.898455 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m20:49:01.899125 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m20:49:01.899927 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m20:49:01.901083 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m20:49:01.901996 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m20:49:01.900587 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m20:49:01.903189 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m20:49:01.904451 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m20:49:01.915933 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m20:49:01.916908 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m20:49:01.917751 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m20:49:01.918526 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m20:49:01.919388 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m20:49:01.920192 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m20:49:01.920843 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m20:49:01.921660 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m20:49:01.922684 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m20:49:01.924079 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m20:49:01.925174 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m20:49:01.926378 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m20:49:01.927528 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m20:49:01.928121 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m20:49:01.932388 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m20:49:01.933605 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m20:49:01.938052 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m20:49:01.938835 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m20:49:01.951984 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m20:49:01.969927 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m20:49:01.970743 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m20:49:01.974976 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m20:49:01.978322 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m20:49:01.979321 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m20:49:01.982702 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m20:49:01.983300 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m20:49:01.985517 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m20:49:01.988519 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m20:49:01.989054 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:01.989850 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m20:49:01.992809 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m20:49:01.995719 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m20:49:01.996387 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m20:49:01.997366 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m20:49:01.998064 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m20:49:01.998580 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m20:49:01.999046 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m20:49:02.001788 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m20:49:02.002465 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:02.005167 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m20:49:02.005574 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:02.008651 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m20:49:02.011417 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m20:49:02.011852 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:49:02.014345 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m20:49:02.015017 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:02.015481 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m20:49:02.016064 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:02.016512 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m20:49:02.017108 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:02.025297 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m20:49:02.026052 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:02.026449 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:02.026980 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m20:49:02.027526 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m20:49:02.028181 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m20:49:02.028749 [debug] [Thread-1 (]: SQL status: OK in 0.017 seconds
[0m20:49:02.029195 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m20:49:02.029609 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m20:49:02.030177 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m20:49:02.030591 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m20:49:02.031336 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m20:49:02.032206 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:02.032687 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m20:49:02.033440 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m20:49:02.034327 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m20:49:02.035490 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m20:49:02.036061 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:49:02.037442 [debug] [Thread-3 (]: SQL status: OK in 0.009 seconds
[0m20:49:02.038228 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:02.039345 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:02.039971 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:49:02.040467 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    date,
    subways_total_ridership AS ridership,
    'subway' AS transport_type,
    subways_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    buses_total_ridership AS ridership,
    'buses' AS transport_type,
    buses_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    lirr_total_ridership AS ridership,
    'lirr' AS transport_type,
    lirr_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    metro_north_total_ridership AS ridership,
    'metro_north' AS transport_type,
    metro_north_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    access_a_ride_total_trips AS ridership,
    'access_a_ride' AS transport_type,
    access_a_ride_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    bridges_tunnels_total_traffic AS ridership,
    'bridges_tunnels' AS transport_type,
    bridges_tunnels_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    staten_island_railway_total_ridership AS ridership,
    'staten_island_railway' AS transport_type,
    staten_island_railway_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
    );
  
  
[0m20:49:02.045481 [debug] [Thread-4 (]: SQL status: OK in 0.016 seconds
[0m20:49:02.046333 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:02.047214 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:49:02.051632 [debug] [Thread-5 (]: SQL status: OK in 0.020 seconds
[0m20:49:02.052579 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:02.053204 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m20:49:02.056220 [debug] [Thread-6 (]: SQL status: OK in 0.024 seconds
[0m20:49:02.057031 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:02.058306 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m20:49:02.059839 [debug] [Thread-7 (]: SQL status: OK in 0.026 seconds
[0m20:49:02.060543 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:02.061108 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:49:02.065915 [debug] [Thread-8 (]: SQL status: OK in 0.032 seconds
[0m20:49:02.067002 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:02.068345 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m20:49:02.077375 [debug] [Thread-2 (]: SQL status: OK in 0.036 seconds
[0m20:49:02.130236 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:02.131612 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m20:49:02.134894 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.217086 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:49:02.218031 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:02.219111 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:49:02.228413 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m20:49:02.238351 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:02.239235 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m20:49:02.242397 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.246027 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m20:49:02.249724 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46bb3730>]}
[0m20:49:02.250864 [debug] [Thread-3 (]: SQL status: OK in 0.209 seconds
[0m20:49:02.253755 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.35s]
[0m20:49:02.267879 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:02.269567 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m20:49:02.271835 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m20:49:02.277239 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.284302 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m20:49:02.286061 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:02.287185 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m20:49:02.301881 [debug] [Thread-4 (]: SQL status: OK in 0.254 seconds
[0m20:49:02.314031 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:02.315579 [debug] [Thread-3 (]: SQL status: OK in 0.027 seconds
[0m20:49:02.317595 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m20:49:02.322557 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:02.328329 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m20:49:02.330456 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m20:49:02.333590 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:49:02.334955 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:02.335829 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:49:02.336454 [debug] [Thread-3 (]: SQL status: OK in 0.007 seconds
[0m20:49:02.341159 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m20:49:02.342823 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b72d2d0>]}
[0m20:49:02.344610 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.43s]
[0m20:49:02.346876 [debug] [Thread-4 (]: SQL status: OK in 0.008 seconds
[0m20:49:02.348924 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m20:49:02.357273 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:02.361625 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m20:49:02.366123 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.370499 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m20:49:02.379827 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b72ef80>]}
[0m20:49:02.381693 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.46s]
[0m20:49:02.386615 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m20:49:02.397208 [debug] [Thread-1 (]: SQL status: OK in 0.358 seconds
[0m20:49:02.416180 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:02.419134 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m20:49:02.426747 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:49:02.431101 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:49:02.433608 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:02.441809 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:49:02.462811 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:49:02.473217 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:02.474187 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m20:49:02.476266 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:49:02.479726 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m20:49:02.481614 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46bb2950>]}
[0m20:49:02.486862 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.59s]
[0m20:49:02.490187 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m20:49:02.500769 [debug] [Thread-7 (]: SQL status: OK in 0.438 seconds
[0m20:49:02.503052 [debug] [Thread-5 (]: SQL status: OK in 0.449 seconds
[0m20:49:02.504145 [debug] [Thread-8 (]: SQL status: OK in 0.435 seconds
[0m20:49:02.512038 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:02.519334 [debug] [Thread-6 (]: SQL status: OK in 0.460 seconds
[0m20:49:02.521878 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:02.527123 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:02.529511 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m20:49:02.533869 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:02.535094 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m20:49:02.535597 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m20:49:02.536388 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m20:49:02.537885 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m20:49:02.538373 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.540160 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:49:02.540771 [debug] [Thread-8 (]: SQL status: OK in 0.003 seconds
[0m20:49:02.542964 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:49:02.543732 [debug] [Thread-6 (]: SQL status: OK in 0.006 seconds
[0m20:49:02.544254 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:02.547054 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:49:02.547963 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:02.549883 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:49:02.550480 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:49:02.551040 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:02.551780 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:49:02.552625 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:02.553398 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:49:02.554319 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:49:02.558230 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m20:49:02.562444 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:02.563756 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m20:49:02.564539 [debug] [Thread-7 (]: SQL status: OK in 0.011 seconds
[0m20:49:02.565104 [debug] [Thread-8 (]: SQL status: OK in 0.010 seconds
[0m20:49:02.569003 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:02.570027 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m20:49:02.572947 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:02.573604 [debug] [Thread-5 (]: SQL status: OK in 0.008 seconds
[0m20:49:02.574205 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m20:49:02.576916 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:02.577482 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m20:49:02.579128 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m20:49:02.579941 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m20:49:02.581346 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b72ca00>]}
[0m20:49:02.581939 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.582744 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m20:49:02.583574 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.66s]
[0m20:49:02.585371 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m20:49:02.585875 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m20:49:02.587359 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m20:49:02.588033 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m20:49:02.588756 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b72df60>]}
[0m20:49:02.590618 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m20:49:02.591755 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b72f400>]}
[0m20:49:02.592891 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.66s]
[0m20:49:02.702341 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '57bae619-3200-420f-8cf3-17ea1d87a33c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b74e1a0>]}
[0m20:49:02.700860 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.66s]
[0m20:49:02.703485 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m20:49:02.704540 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.78s]
[0m20:49:02.705608 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m20:49:02.706468 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m20:49:02.710225 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:02.710888 [debug] [MainThread]: On master: BEGIN
[0m20:49:02.711435 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:49:02.717485 [debug] [MainThread]: DuckDB adapter: Error running SQL: BEGIN
[0m20:49:02.718248 [debug] [MainThread]: DuckDB adapter: Rolling back transaction.
[0m20:49:02.718808 [info ] [MainThread]: Database error while running on-run-end
[0m20:49:02.719568 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:49:02.719905 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m20:49:02.720197 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m20:49:02.720507 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m20:49:02.720792 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m20:49:02.721078 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m20:49:02.721739 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m20:49:02.722195 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m20:49:02.722600 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m20:49:02.723573 [info ] [MainThread]: 
[0m20:49:02.724102 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 1.08 seconds (1.08s).
[0m20:49:02.726163 [debug] [MainThread]: Command end result
[0m20:49:02.767006 [info ] [MainThread]: 
[0m20:49:02.767709 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m20:49:02.768266 [info ] [MainThread]: 
[0m20:49:02.768815 [error] [MainThread]:   on-run-end failed, error:
 IO Error: Could not set lock on file "/home/christianocean/mta/mta/mtastats/sources/mta/mtastats.duckdb": Conflicting lock is held in /home/christianocean/.nvm/versions/node/v21.7.3/bin/node (PID 1762776). However, you would be able to open this database in read-only mode, e.g. by using the -readonly parameter in the CLI. See also https://duckdb.org/docs/connect/concurrency
[0m20:49:02.769369 [info ] [MainThread]: 
[0m20:49:02.769937 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=1 SKIP=0 TOTAL=9
[0m20:49:02.771901 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 1.913297, "process_user_time": 2.773549, "process_kernel_time": 1.195334, "process_mem_max_rss": "281416", "process_out_blocks": "8368", "command_success": false, "process_in_blocks": "0"}
[0m20:49:02.775227 [debug] [MainThread]: Command `dbt run` failed at 20:49:02.774842 after 1.92 seconds
[0m20:49:02.776163 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f48536fb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f46e57370>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f5f3b99e830>]}
[0m20:49:02.779026 [debug] [MainThread]: Flushing usage events
[0m20:49:18.363387 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f438a566fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4388cb0cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4388cb0d30>]}


============================== 20:49:18.365472 | 0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b ==============================
[0m20:49:18.365472 [info ] [MainThread]: Running with dbt=1.8.7
[0m20:49:18.366201 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m20:49:18.564777 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f43858f1e40>]}
[0m20:49:18.620757 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4388e8b370>]}
[0m20:49:18.623900 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m20:49:18.631932 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m20:49:18.725994 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m20:49:18.726488 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m20:49:18.753796 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437d75e260>]}
[0m20:49:18.820781 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437d75b7f0>]}
[0m20:49:18.821417 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m20:49:18.821747 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437d75b5b0>]}
[0m20:49:18.823543 [info ] [MainThread]: 
[0m20:49:18.824162 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m20:49:18.828286 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m20:49:18.865472 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m20:49:18.865980 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m20:49:18.866339 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m20:49:18.893203 [debug] [ThreadPool]: SQL status: OK in 0.027 seconds
[0m20:49:18.894458 [debug] [ThreadPool]: On list_mtastats: Close
[0m20:49:18.897219 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m20:49:18.897682 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m20:49:18.902722 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:18.903037 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m20:49:18.903339 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:49:18.908843 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m20:49:18.909922 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:18.910393 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m20:49:18.910902 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:49:18.911144 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:18.911740 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m20:49:18.915509 [debug] [ThreadPool]: SQL status: OK in 0.003 seconds
[0m20:49:18.916212 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:49:18.916458 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m20:49:18.916705 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m20:49:18.917174 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m20:49:18.917546 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m20:49:18.923823 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m20:49:18.927632 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:49:18.927948 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m20:49:18.928227 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m20:49:18.933855 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m20:49:18.934147 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m20:49:18.934413 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m20:49:18.956486 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m20:49:18.961360 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m20:49:18.962031 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m20:49:18.962276 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m20:49:18.965834 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4385929840>]}
[0m20:49:18.966342 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:18.966584 [debug] [MainThread]: On master: BEGIN
[0m20:49:18.966817 [debug] [MainThread]: Opening a new connection, currently in state init
[0m20:49:18.977160 [debug] [MainThread]: SQL status: OK in 0.010 seconds
[0m20:49:18.977545 [debug] [MainThread]: On master: COMMIT
[0m20:49:18.977829 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:18.978064 [debug] [MainThread]: On master: COMMIT
[0m20:49:18.978479 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:49:18.978733 [debug] [MainThread]: On master: Close
[0m20:49:18.980495 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m20:49:18.980896 [info ] [MainThread]: 
[0m20:49:18.990142 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m20:49:18.990949 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m20:49:18.991545 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m20:49:18.992135 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m20:49:18.992628 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m20:49:18.993319 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m20:49:18.993854 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m20:49:18.994381 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m20:49:18.994986 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m20:49:18.995729 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m20:49:18.996219 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m20:49:18.997523 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m20:49:18.997026 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m20:49:18.998738 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m20:49:18.999576 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m20:49:19.000384 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m20:49:19.002491 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m20:49:19.004619 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m20:49:19.005818 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m20:49:19.007697 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m20:49:19.006814 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m20:49:19.008583 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m20:49:19.009819 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m20:49:19.010494 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m20:49:19.011000 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m20:49:19.023822 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m20:49:19.022546 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m20:49:19.024711 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m20:49:19.025311 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m20:49:19.027873 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m20:49:19.028424 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m20:49:19.028862 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m20:49:19.033102 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m20:49:19.034057 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m20:49:19.041053 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m20:49:19.043638 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m20:49:19.044247 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m20:49:19.046975 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m20:49:19.049249 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m20:49:19.049826 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m20:49:19.121183 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m20:49:19.121930 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m20:49:19.147264 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m20:49:19.149813 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m20:49:19.150966 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m20:49:19.151569 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m20:49:19.152107 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m20:49:19.154712 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m20:49:19.155330 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m20:49:19.157835 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m20:49:19.158512 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m20:49:19.161527 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m20:49:19.161984 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.165319 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m20:49:19.167941 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m20:49:19.168563 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.171192 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m20:49:19.173954 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m20:49:19.174564 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.175243 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m20:49:19.175640 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.176708 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m20:49:19.177375 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.178139 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.178598 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.179182 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.179622 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m20:49:19.180059 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m20:49:19.180543 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m20:49:19.181023 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m20:49:19.181609 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m20:49:19.182102 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m20:49:19.182543 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m20:49:19.182982 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m20:49:19.183528 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m20:49:19.196351 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m20:49:19.197548 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m20:49:19.198252 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m20:49:19.199408 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m20:49:19.199762 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m20:49:19.200440 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m20:49:19.201752 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.202623 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:49:19.204843 [debug] [Thread-2 (]: SQL status: OK in 0.024 seconds
[0m20:49:19.205196 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.205542 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m20:49:19.225457 [debug] [Thread-3 (]: SQL status: OK in 0.042 seconds
[0m20:49:19.226070 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.226508 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    date,
    subways_total_ridership AS ridership,
    'subway' AS transport_type,
    subways_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    buses_total_ridership AS ridership,
    'buses' AS transport_type,
    buses_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    lirr_total_ridership AS ridership,
    'lirr' AS transport_type,
    lirr_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    metro_north_total_ridership AS ridership,
    'metro_north' AS transport_type,
    metro_north_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    access_a_ride_total_trips AS ridership,
    'access_a_ride' AS transport_type,
    access_a_ride_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    bridges_tunnels_total_traffic AS ridership,
    'bridges_tunnels' AS transport_type,
    bridges_tunnels_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"

UNION ALL

SELECT 
    date,
    staten_island_railway_total_ridership AS ridership,
    'staten_island_railway' AS transport_type,
    staten_island_railway_pct_pre_pandemic AS pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
    );
  
  
[0m20:49:19.237262 [debug] [Thread-4 (]: SQL status: OK in 0.041 seconds
[0m20:49:19.237889 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.238488 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:49:19.250565 [debug] [Thread-6 (]: SQL status: OK in 0.053 seconds
[0m20:49:19.251775 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.252783 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m20:49:19.258730 [debug] [Thread-5 (]: SQL status: OK in 0.060 seconds
[0m20:49:19.259779 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.261056 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m20:49:19.263456 [debug] [Thread-7 (]: SQL status: OK in 0.064 seconds
[0m20:49:19.264288 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.265323 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m20:49:19.270203 [debug] [Thread-8 (]: SQL status: OK in 0.070 seconds
[0m20:49:19.271136 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.272097 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m20:49:19.274106 [debug] [Thread-2 (]: SQL status: OK in 0.068 seconds
[0m20:49:19.306626 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.307643 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m20:49:19.313386 [debug] [Thread-2 (]: SQL status: OK in 0.005 seconds
[0m20:49:19.320212 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.321794 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m20:49:19.325704 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m20:49:19.385531 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:49:19.386289 [debug] [Thread-3 (]: SQL status: OK in 0.159 seconds
[0m20:49:19.388322 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.398434 [debug] [Thread-4 (]: SQL status: OK in 0.159 seconds
[0m20:49:19.401175 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.401970 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m20:49:19.406297 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.407352 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m20:49:19.416200 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m20:49:19.419866 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m20:49:19.428259 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.429350 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m20:49:19.429916 [debug] [Thread-4 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.430375 [debug] [Thread-2 (]: SQL status: OK in 0.021 seconds
[0m20:49:19.433228 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m20:49:19.438845 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.446664 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m20:49:19.447906 [debug] [Thread-7 (]: SQL status: OK in 0.182 seconds
[0m20:49:19.450341 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m20:49:19.451517 [debug] [Thread-1 (]: SQL status: OK in 0.248 seconds
[0m20:49:19.452557 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m20:49:19.453473 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m20:49:19.457912 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.459386 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.462891 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.464311 [debug] [Thread-6 (]: SQL status: OK in 0.210 seconds
[0m20:49:19.466228 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m20:49:19.467267 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m20:49:19.468123 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m20:49:19.468847 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m20:49:19.474128 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.474736 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.475255 [debug] [Thread-5 (]: SQL status: OK in 0.213 seconds
[0m20:49:19.477062 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:49:19.477630 [debug] [Thread-8 (]: SQL status: OK in 0.204 seconds
[0m20:49:19.478710 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m20:49:19.479223 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m20:49:19.483519 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m20:49:19.484310 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m20:49:19.484851 [debug] [Thread-3 (]: SQL status: OK in 0.007 seconds
[0m20:49:19.488643 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.489170 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.491788 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.494457 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.496256 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbd4250>]}
[0m20:49:19.499062 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.499509 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m20:49:19.501720 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m20:49:19.502187 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m20:49:19.502645 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m20:49:19.503085 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m20:49:19.503487 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m20:49:19.504156 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.50s]
[0m20:49:19.504667 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m20:49:19.507259 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.507701 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m20:49:19.509228 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m20:49:19.509859 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m20:49:19.510509 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m20:49:19.511008 [debug] [Thread-8 (]: SQL status: OK in 0.003 seconds
[0m20:49:19.511637 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m20:49:19.512045 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m20:49:19.512748 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m20:49:19.515850 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.518207 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:49:19.523019 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.524220 [debug] [Thread-3 (]: SQL status: OK in 0.011 seconds
[0m20:49:19.529402 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m20:49:19.532021 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:49:19.532774 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m20:49:19.533287 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.533774 [debug] [Thread-6 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.534344 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m20:49:19.536988 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m20:49:19.538226 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m20:49:19.538836 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.539683 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m20:49:19.541697 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:49:19.543190 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbd7580>]}
[0m20:49:19.544289 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m20:49:19.544705 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m20:49:19.545373 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m20:49:19.546194 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.547162 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.54s]
[0m20:49:19.549381 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:49:19.549981 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m20:49:19.551880 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:49:19.552415 [debug] [Thread-7 (]: SQL status: OK in 0.006 seconds
[0m20:49:19.553089 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m20:49:19.553918 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m20:49:19.555036 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.557873 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m20:49:19.558891 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.562340 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m20:49:19.562916 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:49:19.564167 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m20:49:19.565097 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbd7250>]}
[0m20:49:19.565807 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m20:49:19.566573 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m20:49:19.569479 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m20:49:19.570270 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m20:49:19.571486 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.56s]
[0m20:49:19.573235 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m20:49:19.576287 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m20:49:19.577439 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m20:49:19.578823 [debug] [Thread-8 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.579798 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m20:49:19.580625 [debug] [Thread-5 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.586664 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m20:49:19.588217 [debug] [Thread-7 (]: SQL status: OK in 0.015 seconds
[0m20:49:19.588983 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m20:49:19.591575 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m20:49:19.592189 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m20:49:19.593905 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m20:49:19.595793 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m20:49:19.596551 [debug] [Thread-6 (]: SQL status: OK in 0.009 seconds
[0m20:49:19.597202 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m20:49:19.598694 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbd73a0>]}
[0m20:49:19.600898 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbd44f0>]}
[0m20:49:19.603827 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m20:49:19.605472 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.57s]
[0m20:49:19.606380 [debug] [Thread-8 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.607361 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.60s]
[0m20:49:19.608373 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f42d98a6230>]}
[0m20:49:19.609411 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m20:49:19.611399 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m20:49:19.612394 [debug] [Thread-5 (]: SQL status: OK in 0.008 seconds
[0m20:49:19.613520 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m20:49:19.614706 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.60s]
[0m20:49:19.616320 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbb7e80>]}
[0m20:49:19.618164 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m20:49:19.619426 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m20:49:19.620207 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.59s]
[0m20:49:19.684142 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0ab6f7c2-aa67-4bdb-9812-68e449b0ed3b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f437cbee800>]}
[0m20:49:19.685580 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m20:49:19.686926 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.67s]
[0m20:49:19.687889 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m20:49:19.691666 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:19.691971 [debug] [MainThread]: On master: BEGIN
[0m20:49:19.692229 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m20:49:19.698619 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m20:49:19.699143 [debug] [MainThread]: On master: COMMIT
[0m20:49:19.699528 [debug] [MainThread]: Using duckdb connection "master"
[0m20:49:19.699829 [debug] [MainThread]: On master: COMMIT
[0m20:49:19.700361 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m20:49:19.700661 [debug] [MainThread]: On master: Close
[0m20:49:19.704028 [debug] [MainThread]: Connection 'master' was properly closed.
[0m20:49:19.704670 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m20:49:19.705171 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m20:49:19.705516 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m20:49:19.705814 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m20:49:19.706103 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m20:49:19.706457 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m20:49:19.706796 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m20:49:19.707085 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m20:49:19.707714 [info ] [MainThread]: 
[0m20:49:19.708342 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 0.88 seconds (0.88s).
[0m20:49:19.710385 [debug] [MainThread]: Command end result
[0m20:49:19.739072 [info ] [MainThread]: 
[0m20:49:19.739827 [info ] [MainThread]: [32mCompleted successfully[0m
[0m20:49:19.740415 [info ] [MainThread]: 
[0m20:49:19.740773 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m20:49:19.741822 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.4290305, "process_user_time": 2.350694, "process_kernel_time": 0.699611, "process_mem_max_rss": "276816", "process_out_blocks": "8096", "process_in_blocks": "0"}
[0m20:49:19.742392 [debug] [MainThread]: Command `dbt run` succeeded at 20:49:19.742267 after 1.43 seconds
[0m20:49:19.743188 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f438a566fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f4388e8b370>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f438989fb20>]}
[0m20:49:19.744001 [debug] [MainThread]: Flushing usage events
[0m21:07:23.255995 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc1c22fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc036cb20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc036cb80>]}


============================== 21:07:23.258365 | 4f9b5994-b94a-4d67-8086-f85ba519b11c ==============================
[0m21:07:23.258365 [info ] [MainThread]: Running with dbt=1.8.7
[0m21:07:23.258915 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt run', 'static_parser': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m21:07:23.516335 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb5191c90>]}
[0m21:07:23.578822 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc0221b10>]}
[0m21:07:23.581966 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m21:07:23.592944 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m21:07:23.705593 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m21:07:23.706520 [debug] [MainThread]: Partial parsing: updated file: mta://models/daily_ridership.sql
[0m21:07:23.936148 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb4dea800>]}
[0m21:07:24.005892 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb4dca110>]}
[0m21:07:24.006470 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m21:07:24.006870 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb4dc8dc0>]}
[0m21:07:24.008331 [info ] [MainThread]: 
[0m21:07:24.008882 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m21:07:24.013526 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m21:07:24.104506 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m21:07:24.104940 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m21:07:24.105256 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m21:07:24.117375 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m21:07:24.119006 [debug] [ThreadPool]: On list_mtastats: Close
[0m21:07:24.124745 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m21:07:24.126021 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m21:07:24.131459 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:24.131931 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m21:07:24.132204 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m21:07:24.139043 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m21:07:24.140208 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:24.140497 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m21:07:24.140928 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m21:07:24.141187 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:24.141526 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m21:07:24.142193 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m21:07:24.142907 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m21:07:24.143195 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:24.143456 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m21:07:24.143969 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m21:07:24.144461 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m21:07:24.147478 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m21:07:24.152368 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m21:07:24.153051 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m21:07:24.153451 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m21:07:24.160664 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m21:07:24.161177 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m21:07:24.161570 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m21:07:24.195164 [debug] [ThreadPool]: SQL status: OK in 0.033 seconds
[0m21:07:24.196830 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m21:07:24.197536 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m21:07:24.197833 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m21:07:24.201891 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb5021ff0>]}
[0m21:07:24.202311 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:24.202612 [debug] [MainThread]: On master: BEGIN
[0m21:07:24.202876 [debug] [MainThread]: Opening a new connection, currently in state init
[0m21:07:24.209914 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m21:07:24.210283 [debug] [MainThread]: On master: COMMIT
[0m21:07:24.210586 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:24.210838 [debug] [MainThread]: On master: COMMIT
[0m21:07:24.211319 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m21:07:24.211627 [debug] [MainThread]: On master: Close
[0m21:07:24.213684 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m21:07:24.214074 [info ] [MainThread]: 
[0m21:07:24.223120 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m21:07:24.223919 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m21:07:24.224637 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m21:07:24.225397 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m21:07:24.225949 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m21:07:24.226852 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m21:07:24.227501 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m21:07:24.228115 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m21:07:24.228740 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m21:07:24.229287 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m21:07:24.229866 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m21:07:24.230474 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m21:07:24.231153 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m21:07:24.231662 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m21:07:24.232434 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m21:07:24.233213 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m21:07:24.233926 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m21:07:24.234768 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m21:07:24.235687 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m21:07:24.236645 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m21:07:24.237977 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m21:07:24.248605 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m21:07:24.249532 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m21:07:24.252756 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m21:07:24.253753 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m21:07:24.254462 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m21:07:24.255059 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m21:07:24.255945 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m21:07:24.257290 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m21:07:24.258800 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m21:07:24.259952 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m21:07:24.260660 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m21:07:24.261175 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m21:07:24.261741 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m21:07:24.265954 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m21:07:24.266561 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m21:07:24.267094 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m21:07:24.270328 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m21:07:24.280606 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m21:07:24.311937 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m21:07:24.315003 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m21:07:24.318454 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m21:07:24.320901 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m21:07:24.323705 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m21:07:24.324194 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m21:07:24.325329 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m21:07:24.326394 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m21:07:24.327324 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:24.327846 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m21:07:24.328356 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:24.332462 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m21:07:24.332923 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m21:07:24.336471 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m21:07:24.339789 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m21:07:24.340250 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m21:07:24.340811 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m21:07:24.343287 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m21:07:24.343800 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m21:07:24.346390 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m21:07:24.346961 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:24.349708 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m21:07:24.350557 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:24.351005 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m21:07:24.351455 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:24.352086 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:24.352560 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m21:07:24.353171 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m21:07:24.353591 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:24.354262 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:24.354684 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m21:07:24.360656 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m21:07:24.361560 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m21:07:24.362468 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m21:07:24.362978 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m21:07:24.363622 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m21:07:24.364096 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m21:07:24.364649 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m21:07:24.365036 [debug] [Thread-2 (]: SQL status: OK in 0.012 seconds
[0m21:07:24.365471 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m21:07:24.365938 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m21:07:24.366378 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:24.367047 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m21:07:24.367716 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m21:07:24.368471 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:24.369223 [debug] [Thread-3 (]: SQL status: OK in 0.006 seconds
[0m21:07:24.370035 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m21:07:24.370977 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m21:07:24.371924 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:24.373517 [debug] [Thread-5 (]: SQL status: OK in 0.009 seconds
[0m21:07:24.374167 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type;
    );
  
  
[0m21:07:24.374948 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:24.378875 [debug] [Thread-3 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type;
    );
  
  
[0m21:07:24.380074 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m21:07:24.380560 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m21:07:24.381508 [debug] [Thread-3 (]: DuckDB adapter: Rolling back transaction.
[0m21:07:24.383078 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:24.384604 [debug] [Thread-3 (]: On model.mta.daily_ridership: ROLLBACK
[0m21:07:24.385537 [debug] [Thread-6 (]: SQL status: OK in 0.020 seconds
[0m21:07:24.386101 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m21:07:24.389091 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:24.391487 [debug] [Thread-8 (]: SQL status: OK in 0.024 seconds
[0m21:07:24.393892 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m21:07:24.396304 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:24.398277 [debug] [Thread-7 (]: SQL status: OK in 0.030 seconds
[0m21:07:24.399913 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m21:07:24.403059 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:24.407748 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m21:07:24.412247 [debug] [Thread-2 (]: SQL status: OK in 0.039 seconds
[0m21:07:24.424958 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:24.425829 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m21:07:24.428591 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m21:07:24.460490 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m21:07:24.462159 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:24.463271 [debug] [Thread-3 (]: Failed to rollback 'model.mta.daily_ridership'
[0m21:07:24.464233 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m21:07:24.466818 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m21:07:24.474447 [debug] [Thread-3 (]: Runtime Error in model daily_ridership (models/daily_ridership.sql)
  Parser Error: syntax error at or near ";"
[0m21:07:24.477164 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc0f59390>]}
[0m21:07:24.481387 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m21:07:24.482478 [error] [Thread-3 (]: 3 of 8 ERROR creating sql table model main.daily_ridership ..................... [[31mERROR[0m in 0.24s]
[0m21:07:24.491945 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m21:07:24.501868 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:24.502985 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m21:07:24.514514 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m21:07:24.522380 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m21:07:24.525184 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc1caf130>]}
[0m21:07:24.527354 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.30s]
[0m21:07:24.529391 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m21:07:24.554960 [debug] [Thread-4 (]: SQL status: OK in 0.165 seconds
[0m21:07:24.570838 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:24.572285 [debug] [Thread-6 (]: SQL status: OK in 0.174 seconds
[0m21:07:24.573023 [debug] [Thread-7 (]: SQL status: OK in 0.164 seconds
[0m21:07:24.574098 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m21:07:24.580696 [debug] [Thread-5 (]: SQL status: OK in 0.198 seconds
[0m21:07:24.580030 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:24.584745 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:24.586046 [debug] [Thread-1 (]: SQL status: OK in 0.213 seconds
[0m21:07:24.586754 [debug] [Thread-8 (]: SQL status: OK in 0.182 seconds
[0m21:07:24.595266 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:24.596068 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m21:07:24.596775 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m21:07:24.597361 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m21:07:24.602780 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:24.606629 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:24.607133 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m21:07:24.609625 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m21:07:24.610380 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m21:07:24.610912 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m21:07:24.611384 [debug] [Thread-7 (]: SQL status: OK in 0.003 seconds
[0m21:07:24.611876 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m21:07:24.612625 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:24.614844 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m21:07:24.615488 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m21:07:24.617291 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m21:07:24.617726 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m21:07:24.618421 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m21:07:24.618977 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:24.621011 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m21:07:24.621630 [debug] [Thread-8 (]: SQL status: OK in 0.003 seconds
[0m21:07:24.622068 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:24.623599 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m21:07:24.624307 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m21:07:24.624865 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:24.627480 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m21:07:24.628348 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m21:07:24.628946 [debug] [Thread-4 (]: SQL status: OK in 0.005 seconds
[0m21:07:24.629553 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:24.630371 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m21:07:24.630881 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:24.636399 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:24.637534 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m21:07:24.638158 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m21:07:24.638735 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m21:07:24.639343 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m21:07:24.639977 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m21:07:24.645713 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:24.646899 [debug] [Thread-5 (]: SQL status: OK in 0.008 seconds
[0m21:07:24.649708 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:24.651429 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m21:07:24.654719 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:24.655509 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m21:07:24.656038 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m21:07:24.656625 [debug] [Thread-8 (]: SQL status: OK in 0.006 seconds
[0m21:07:24.657210 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m21:07:24.657697 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m21:07:24.658503 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m21:07:24.661195 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:24.661819 [debug] [Thread-7 (]: SQL status: OK in 0.004 seconds
[0m21:07:24.664298 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:24.665983 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m21:07:24.667634 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m21:07:24.668123 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m21:07:24.669560 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m21:07:24.669975 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m21:07:24.670534 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m21:07:24.671328 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb4d67cd0>]}
[0m21:07:24.671959 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb50fe500>]}
[0m21:07:24.672744 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb50fc220>]}
[0m21:07:24.674200 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m21:07:24.674751 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m21:07:24.675731 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.42s]
[0m21:07:24.677419 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m21:07:24.676824 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.42s]
[0m21:07:24.678366 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.42s]
[0m21:07:24.679273 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb50fcd90>]}
[0m21:07:24.680841 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m21:07:24.681510 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m21:07:24.682903 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m21:07:24.683730 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m21:07:24.684568 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m21:07:24.685547 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.43s]
[0m21:07:24.686617 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb4e51ea0>]}
[0m21:07:24.807698 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '4f9b5994-b94a-4d67-8086-f85ba519b11c', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbb50fe830>]}
[0m21:07:24.809220 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m21:07:24.810004 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.46s]
[0m21:07:24.810760 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.55s]
[0m21:07:24.811840 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m21:07:24.812406 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m21:07:24.816370 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:24.816926 [debug] [MainThread]: On master: BEGIN
[0m21:07:24.817340 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m21:07:24.824885 [debug] [MainThread]: DuckDB adapter: Error running SQL: BEGIN
[0m21:07:24.825464 [debug] [MainThread]: DuckDB adapter: Rolling back transaction.
[0m21:07:24.825863 [info ] [MainThread]: Database error while running on-run-end
[0m21:07:24.826443 [debug] [MainThread]: Connection 'master' was properly closed.
[0m21:07:24.826785 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m21:07:24.827124 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m21:07:24.827378 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m21:07:24.827598 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m21:07:24.827814 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m21:07:24.828027 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m21:07:24.828238 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m21:07:24.828445 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m21:07:24.828851 [info ] [MainThread]: 
[0m21:07:24.829202 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 0.82 seconds (0.82s).
[0m21:07:24.830487 [debug] [MainThread]: Command end result
[0m21:07:24.860363 [info ] [MainThread]: 
[0m21:07:24.861184 [info ] [MainThread]: [31mCompleted with 2 errors and 0 warnings:[0m
[0m21:07:24.861720 [info ] [MainThread]: 
[0m21:07:24.862176 [error] [MainThread]:   Runtime Error in model daily_ridership (models/daily_ridership.sql)
  Parser Error: syntax error at or near ";"
[0m21:07:24.862516 [info ] [MainThread]: 
[0m21:07:24.862829 [error] [MainThread]:   on-run-end failed, error:
 IO Error: Could not set lock on file "/home/christianocean/mta/mta/mtastats/sources/mta/mtastats.duckdb": Conflicting lock is held in /home/christianocean/.nvm/versions/node/v21.7.3/bin/node (PID 1800427). However, you would be able to open this database in read-only mode, e.g. by using the -readonly parameter in the CLI. See also https://duckdb.org/docs/connect/concurrency
[0m21:07:24.863146 [info ] [MainThread]: 
[0m21:07:24.863688 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=2 SKIP=0 TOTAL=9
[0m21:07:24.866115 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 1.654745, "process_user_time": 3.047274, "process_kernel_time": 0.646099, "process_mem_max_rss": "288136", "process_out_blocks": "7128", "command_success": false, "process_in_blocks": "0"}
[0m21:07:24.866902 [debug] [MainThread]: Command `dbt run` failed at 21:07:24.866769 after 1.66 seconds
[0m21:07:24.867365 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc1c22fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc0f594e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcbc1a25750>]}
[0m21:07:24.867797 [debug] [MainThread]: Flushing usage events
[0m21:07:48.716807 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9fc1efb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e36f430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e36f3d0>]}


============================== 21:07:48.719398 | 016184e9-c4ed-4935-ba33-16e0014af528 ==============================
[0m21:07:48.719398 [info ] [MainThread]: Running with dbt=1.8.7
[0m21:07:48.720040 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'invocation_command': 'dbt run', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m21:07:48.923611 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9316de40>]}
[0m21:07:48.977745 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e53f370>]}
[0m21:07:48.980225 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m21:07:48.987457 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m21:07:49.077356 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m21:07:49.078022 [debug] [MainThread]: Partial parsing: updated file: mta://models/daily_ridership.sql
[0m21:07:49.303415 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc92de6800>]}
[0m21:07:49.366560 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc92da4e20>]}
[0m21:07:49.367169 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m21:07:49.367636 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc92da4160>]}
[0m21:07:49.369210 [info ] [MainThread]: 
[0m21:07:49.369755 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m21:07:49.373826 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m21:07:49.450045 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m21:07:49.450636 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m21:07:49.450994 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m21:07:49.487610 [debug] [ThreadPool]: SQL status: OK in 0.037 seconds
[0m21:07:49.489150 [debug] [ThreadPool]: On list_mtastats: Close
[0m21:07:49.492122 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m21:07:49.492786 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m21:07:49.498311 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:49.498835 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m21:07:49.499286 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m21:07:49.511152 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m21:07:49.513006 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:49.513484 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m21:07:49.521414 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m21:07:49.521967 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:49.522310 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m21:07:49.523061 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m21:07:49.523967 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m21:07:49.524303 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m21:07:49.524575 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m21:07:49.525086 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m21:07:49.525371 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m21:07:49.531447 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m21:07:49.535911 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m21:07:49.536302 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m21:07:49.536621 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m21:07:49.549518 [debug] [ThreadPool]: SQL status: OK in 0.013 seconds
[0m21:07:49.549893 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m21:07:49.550170 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m21:07:49.571087 [debug] [ThreadPool]: SQL status: OK in 0.021 seconds
[0m21:07:49.572818 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m21:07:49.573376 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m21:07:49.573725 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m21:07:49.576851 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9ff030d0>]}
[0m21:07:49.577270 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:49.577498 [debug] [MainThread]: On master: BEGIN
[0m21:07:49.577712 [debug] [MainThread]: Opening a new connection, currently in state init
[0m21:07:49.583127 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m21:07:49.583420 [debug] [MainThread]: On master: COMMIT
[0m21:07:49.583694 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:49.583948 [debug] [MainThread]: On master: COMMIT
[0m21:07:49.584386 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m21:07:49.584625 [debug] [MainThread]: On master: Close
[0m21:07:49.586184 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m21:07:49.586518 [info ] [MainThread]: 
[0m21:07:49.594835 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m21:07:49.595527 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m21:07:49.596224 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m21:07:49.597100 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m21:07:49.597756 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m21:07:49.598459 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m21:07:49.598914 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m21:07:49.599501 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m21:07:49.600102 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m21:07:49.600674 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m21:07:49.601127 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m21:07:49.601907 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m21:07:49.602665 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m21:07:49.603242 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m21:07:49.604281 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m21:07:49.605339 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m21:07:49.606108 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m21:07:49.607020 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m21:07:49.607994 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m21:07:49.609543 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m21:07:49.610283 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m21:07:49.619993 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m21:07:49.620807 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m21:07:49.621580 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m21:07:49.625104 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m21:07:49.626075 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m21:07:49.626993 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m21:07:49.627750 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m21:07:49.628987 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m21:07:49.630431 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m21:07:49.631168 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m21:07:49.631912 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m21:07:49.632702 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m21:07:49.633356 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m21:07:49.633927 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m21:07:49.638275 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m21:07:49.638864 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m21:07:49.642447 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m21:07:49.657635 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m21:07:49.670297 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m21:07:49.682550 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m21:07:49.683463 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m21:07:49.686126 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m21:07:49.689069 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m21:07:49.689917 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m21:07:49.691494 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m21:07:49.692171 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m21:07:49.693025 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m21:07:49.694319 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m21:07:49.694844 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:49.695668 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:49.698475 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m21:07:49.699192 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m21:07:49.701664 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m21:07:49.704130 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m21:07:49.707442 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m21:07:49.709789 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m21:07:49.710470 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m21:07:49.711042 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m21:07:49.713883 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m21:07:49.714466 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:49.716173 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:49.716872 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:49.717257 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:49.717836 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m21:07:49.718269 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:49.718848 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m21:07:49.719579 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:49.719971 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m21:07:49.720366 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m21:07:49.720797 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m21:07:49.721365 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m21:07:49.730399 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m21:07:49.731342 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m21:07:49.732187 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m21:07:49.732761 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m21:07:49.733916 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m21:07:49.734545 [debug] [Thread-1 (]: SQL status: OK in 0.017 seconds
[0m21:07:49.735227 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m21:07:49.735798 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m21:07:49.736391 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m21:07:49.737373 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:49.738283 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m21:07:49.746946 [debug] [Thread-2 (]: SQL status: OK in 0.028 seconds
[0m21:07:49.747954 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:49.749136 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m21:07:49.749789 [debug] [Thread-3 (]: SQL status: OK in 0.018 seconds
[0m21:07:49.750907 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:49.751461 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m21:07:49.758630 [debug] [Thread-7 (]: SQL status: OK in 0.026 seconds
[0m21:07:49.759307 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:49.759958 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m21:07:49.761666 [debug] [Thread-4 (]: SQL status: OK in 0.028 seconds
[0m21:07:49.762265 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:49.763452 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m21:07:49.765503 [debug] [Thread-5 (]: SQL status: OK in 0.030 seconds
[0m21:07:49.766337 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:49.768373 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m21:07:49.769233 [debug] [Thread-6 (]: SQL status: OK in 0.033 seconds
[0m21:07:49.770562 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:49.771506 [debug] [Thread-8 (]: SQL status: OK in 0.035 seconds
[0m21:07:49.772154 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m21:07:49.772942 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:49.775542 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH ridership_data AS (
    SELECT 
        station_complex_id, 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_date, 
        SUM(ridership) AS total_ridership,
        latitude,
        longitude
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, 
        station_complex, 
        week_date, 
        latitude, 
        longitude
),
weather_data AS (
    SELECT
        DATE_TRUNC('week', date) AS week_date, 
        SUM(precipitation_sum) AS total_precipitation -- Using the precipitation_sum column for total rain
    FROM 
           "mtastats"."main"."daily_weather_asset"
    GROUP BY 
        week_date
)
SELECT 
    r.station_complex_id,
    r.station_complex,
    r.latitude,
    r.longitude,
    r.week_date,
    r.total_ridership,
    w.total_precipitation
FROM 
    ridership_data r
LEFT JOIN 
    weather_data w
ON 
    r.week_date = w.week_date
ORDER BY 
    r.week_date, r.total_ridership DESC
    );
  
  
[0m21:07:49.778154 [debug] [Thread-2 (]: SQL status: OK in 0.028 seconds
[0m21:07:49.811345 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:49.812691 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m21:07:49.815178 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m21:07:49.860390 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m21:07:49.862215 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:49.863860 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m21:07:49.870949 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m21:07:49.879589 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m21:07:49.881069 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m21:07:49.881964 [debug] [Thread-3 (]: SQL status: OK in 0.130 seconds
[0m21:07:49.884453 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m21:07:49.889287 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:49.894961 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m21:07:49.896032 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m21:07:49.899243 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e28d4b0>]}
[0m21:07:49.901993 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m21:07:49.903519 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.30s]
[0m21:07:49.908035 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m21:07:49.910469 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m21:07:49.911822 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:49.914844 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m21:07:49.924281 [debug] [Thread-3 (]: SQL status: OK in 0.008 seconds
[0m21:07:49.939913 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m21:07:49.942735 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m21:07:49.945523 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m21:07:49.951720 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m21:07:49.953244 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e28ead0>]}
[0m21:07:49.955818 [debug] [Thread-7 (]: SQL status: OK in 0.194 seconds
[0m21:07:49.958677 [debug] [Thread-1 (]: SQL status: OK in 0.220 seconds
[0m21:07:49.960351 [debug] [Thread-4 (]: SQL status: OK in 0.195 seconds
[0m21:07:49.959707 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.34s]
[0m21:07:49.966006 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:49.971662 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:49.979711 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:49.982102 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m21:07:49.983911 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m21:07:49.984768 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m21:07:49.985878 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m21:07:49.989586 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m21:07:49.990437 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m21:07:49.994586 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m21:07:49.995493 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m21:07:49.998382 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m21:07:50.000284 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:50.005178 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m21:07:50.006171 [debug] [Thread-5 (]: SQL status: OK in 0.236 seconds
[0m21:07:50.006864 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:50.007591 [debug] [Thread-8 (]: SQL status: OK in 0.231 seconds
[0m21:07:50.008356 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m21:07:50.009003 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:50.009463 [debug] [Thread-6 (]: SQL status: OK in 0.235 seconds
[0m21:07:50.014407 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:50.015165 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m21:07:50.018241 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:50.018939 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m21:07:50.021750 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:50.022212 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m21:07:50.022730 [debug] [Thread-7 (]: SQL status: OK in 0.004 seconds
[0m21:07:50.023267 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m21:07:50.024295 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m21:07:50.029650 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m21:07:50.030814 [debug] [Thread-1 (]: SQL status: OK in 0.008 seconds
[0m21:07:50.031591 [debug] [Thread-4 (]: SQL status: OK in 0.008 seconds
[0m21:07:50.032265 [debug] [Thread-5 (]: SQL status: OK in 0.007 seconds
[0m21:07:50.033004 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m21:07:50.033396 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m21:07:50.035698 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m21:07:50.036078 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m21:07:50.038136 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m21:07:50.039599 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m21:07:50.041475 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m21:07:50.041963 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m21:07:50.042323 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m21:07:50.044053 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m21:07:50.044502 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m21:07:50.044925 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:50.045311 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:50.046488 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m21:07:50.047106 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:50.047765 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m21:07:50.048225 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m21:07:50.048602 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m21:07:50.048933 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m21:07:50.049553 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9316d1e0>]}
[0m21:07:50.049983 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m21:07:50.051599 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m21:07:50.052773 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m21:07:50.053804 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 0.42s]
[0m21:07:50.054993 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m21:07:50.055589 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9e28c940>]}
[0m21:07:50.056294 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc92e2f490>]}
[0m21:07:50.057252 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m21:07:50.057857 [debug] [Thread-8 (]: SQL status: OK in 0.005 seconds
[0m21:07:50.060737 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m21:07:50.061424 [debug] [Thread-6 (]: SQL status: OK in 0.007 seconds
[0m21:07:50.062366 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 0.46s]
[0m21:07:50.063248 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 0.44s]
[0m21:07:50.065990 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m21:07:50.066499 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m21:07:50.068861 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m21:07:50.069535 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m21:07:50.070290 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m21:07:50.070887 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m21:07:50.072257 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m21:07:50.074200 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m21:07:50.079052 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m21:07:50.079794 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m21:07:50.080619 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc901b3ee0>]}
[0m21:07:50.082362 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m21:07:50.082870 [debug] [Thread-8 (]: SQL status: OK in 0.007 seconds
[0m21:07:50.083491 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 0.46s]
[0m21:07:50.084228 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9316d0f0>]}
[0m21:07:50.085709 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m21:07:50.086556 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m21:07:50.087265 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 0.46s]
[0m21:07:50.150560 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '016184e9-c4ed-4935-ba33-16e0014af528', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9316c580>]}
[0m21:07:50.151878 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m21:07:50.152847 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 0.52s]
[0m21:07:50.154032 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m21:07:50.160321 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:50.161201 [debug] [MainThread]: On master: BEGIN
[0m21:07:50.161791 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m21:07:50.169336 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m21:07:50.169842 [debug] [MainThread]: On master: COMMIT
[0m21:07:50.170185 [debug] [MainThread]: Using duckdb connection "master"
[0m21:07:50.170466 [debug] [MainThread]: On master: COMMIT
[0m21:07:50.171018 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m21:07:50.171479 [debug] [MainThread]: On master: Close
[0m21:07:50.174147 [debug] [MainThread]: Connection 'master' was properly closed.
[0m21:07:50.174530 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m21:07:50.174851 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m21:07:50.175169 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m21:07:50.175467 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m21:07:50.175880 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m21:07:50.176146 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m21:07:50.176384 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m21:07:50.176640 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m21:07:50.177083 [info ] [MainThread]: 
[0m21:07:50.177496 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 0.81 seconds (0.81s).
[0m21:07:50.179291 [debug] [MainThread]: Command end result
[0m21:07:50.210863 [info ] [MainThread]: 
[0m21:07:50.211690 [info ] [MainThread]: [32mCompleted successfully[0m
[0m21:07:50.212113 [info ] [MainThread]: 
[0m21:07:50.212542 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m21:07:50.213629 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 1.5420966, "process_user_time": 2.706256, "process_kernel_time": 0.560242, "process_mem_max_rss": "292748", "process_out_blocks": "7752", "process_in_blocks": "0"}
[0m21:07:50.214201 [debug] [MainThread]: Command `dbt run` succeeded at 21:07:50.214104 after 1.54 seconds
[0m21:07:50.214689 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9fc1efb0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc92e4a710>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7efc9309a8c0>]}
[0m21:07:50.215062 [debug] [MainThread]: Flushing usage events
[0m22:01:34.201926 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7e4fb010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cc57490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cc57430>]}


============================== 22:01:34.207137 | 0aa64b90-51a0-4bba-83e1-7ba262e9a4c9 ==============================
[0m22:01:34.207137 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:01:34.207778 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m22:01:34.392361 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7e5b9bd0>]}
[0m22:01:34.446058 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cb70ee0>]}
[0m22:01:34.450001 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:01:34.461646 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:01:34.607311 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:01:34.607948 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m22:01:34.816432 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b716de860>]}
[0m22:01:34.891731 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b716a8bb0>]}
[0m22:01:34.892312 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:01:34.892692 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b716abfa0>]}
[0m22:01:34.894145 [info ] [MainThread]: 
[0m22:01:34.894715 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:01:34.899387 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:01:35.013333 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:01:35.013757 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:01:35.014080 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:01:35.026310 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m22:01:35.027425 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:01:35.030892 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:01:35.031805 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:01:35.037638 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:01:35.038068 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:01:35.038464 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:01:35.046014 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m22:01:35.047169 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:01:35.047498 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:01:35.048043 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:01:35.048491 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:01:35.048872 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:01:35.049575 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:01:35.050332 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:01:35.050627 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:01:35.050935 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:01:35.052245 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m22:01:35.052575 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:01:35.056110 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:01:35.060110 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:01:35.060653 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:01:35.060923 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:01:35.066563 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:01:35.066930 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:01:35.067239 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:01:35.086568 [debug] [ThreadPool]: SQL status: OK in 0.019 seconds
[0m22:01:35.089116 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:01:35.091366 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:01:35.091727 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:01:35.094906 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b71900b20>]}
[0m22:01:35.095318 [debug] [MainThread]: Using duckdb connection "master"
[0m22:01:35.095617 [debug] [MainThread]: On master: BEGIN
[0m22:01:35.095875 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:01:35.101836 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m22:01:35.102245 [debug] [MainThread]: On master: COMMIT
[0m22:01:35.102530 [debug] [MainThread]: Using duckdb connection "master"
[0m22:01:35.102784 [debug] [MainThread]: On master: COMMIT
[0m22:01:35.103225 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:01:35.103501 [debug] [MainThread]: On master: Close
[0m22:01:35.105596 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:01:35.105965 [info ] [MainThread]: 
[0m22:01:35.115306 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:01:35.115931 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:01:35.116564 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:01:35.117301 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:01:35.117784 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:01:35.118597 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:01:35.119216 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:01:35.119837 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:01:35.120369 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:01:35.121050 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:01:35.121690 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:01:35.122196 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:01:35.122705 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:01:35.123344 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:01:35.124085 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:01:35.124704 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:01:35.125505 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:01:35.126674 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:01:35.141003 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:01:35.141957 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:01:35.142989 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:01:35.144276 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:01:35.147080 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:01:35.153751 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:01:35.154590 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:01:35.155178 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:01:35.156169 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:01:35.157019 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:01:35.157657 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:01:35.158294 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:01:35.158892 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:01:35.159557 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:01:35.167069 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:01:35.168066 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:01:35.168690 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:01:35.169279 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:01:35.173536 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:01:35.192054 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:01:35.207311 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:01:35.209808 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:01:35.213275 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:01:35.215567 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:01:35.216067 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:01:35.220613 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:01:35.224176 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:01:35.225750 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:01:35.226784 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:01:35.227269 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:01:35.230266 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:01:35.231266 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:01:35.234723 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:01:35.235311 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:01:35.235951 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:01:35.236322 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:01:35.238649 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:01:35.239117 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:01:35.239778 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:01:35.242894 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:01:35.246187 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:01:35.246708 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:01:35.247320 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:01:35.250144 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:01:35.250918 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:01:35.251445 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:01:35.252324 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:01:35.253226 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:01:35.253565 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:01:35.254001 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:01:35.259791 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:01:35.260406 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:01:35.261053 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:01:35.261747 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:01:35.262467 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:01:35.262903 [debug] [Thread-1 (]: SQL status: OK in 0.016 seconds
[0m22:01:35.263322 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:01:35.263763 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:01:35.264502 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:01:35.265127 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:01:35.265883 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:01:35.266514 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:01:35.267486 [debug] [Thread-2 (]: SQL status: OK in 0.008 seconds
[0m22:01:35.268129 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:01:35.268694 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:01:35.270975 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:01:35.271833 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:01:35.272661 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:01:35.273976 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:01:35.274652 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:01:35.275657 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:01:35.277943 [debug] [Thread-5 (]: SQL status: OK in 0.015 seconds
[0m22:01:35.278394 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:01:35.278830 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m22:01:35.280620 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m22:01:35.281241 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:01:35.282001 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:01:35.283399 [debug] [Thread-8 (]: SQL status: OK in 0.017 seconds
[0m22:01:35.283895 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:01:35.284389 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH mta_hourly_subway_socrata AS (
    "mtastats"."main"."mta_hourly_subway_socrata"
),
weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        mta_hourly_subway_socrata
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:01:35.295567 [debug] [Thread-8 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH mta_hourly_subway_socrata AS (
    "mtastats"."main"."mta_hourly_subway_socrata"
),
weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        mta_hourly_subway_socrata
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:01:35.296363 [debug] [Thread-8 (]: DuckDB adapter: Rolling back transaction.
[0m22:01:35.297046 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: ROLLBACK
[0m22:01:35.299029 [debug] [Thread-6 (]: SQL status: OK in 0.030 seconds
[0m22:01:35.304247 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:01:35.306344 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:01:35.308657 [debug] [Thread-7 (]: SQL status: OK in 0.040 seconds
[0m22:01:35.310031 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:01:35.313225 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:01:35.339868 [debug] [Thread-8 (]: Failed to rollback 'model.mta.weekly_riders_per_station'
[0m22:01:35.342164 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:01:35.343842 [debug] [Thread-8 (]: Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ""mtastats""
[0m22:01:35.348415 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b6aaa8070>]}
[0m22:01:35.349330 [error] [Thread-8 (]: 8 of 8 ERROR creating sql table model main.weekly_riders_per_station ........... [[31mERROR[0m in 0.19s]
[0m22:01:35.350146 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:01:35.374943 [debug] [Thread-3 (]: SQL status: OK in 0.098 seconds
[0m22:01:35.384866 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:01:35.386408 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:01:35.389007 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m22:01:35.455153 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:01:35.456272 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:01:35.456838 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:01:35.473788 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m22:01:35.483836 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:01:35.484516 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:01:35.490585 [debug] [Thread-3 (]: SQL status: OK in 0.005 seconds
[0m22:01:35.494735 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:01:35.495586 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cb73e80>]}
[0m22:01:35.500675 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.37s]
[0m22:01:35.501589 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:01:35.873240 [debug] [Thread-2 (]: SQL status: OK in 0.598 seconds
[0m22:01:35.880991 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:01:35.882085 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:01:35.885763 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:01:35.887581 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:01:35.888285 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:01:35.888723 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:01:35.895483 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m22:01:35.901552 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:01:35.902575 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:01:35.907120 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m22:01:35.909919 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:01:35.910974 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b6a9c2890>]}
[0m22:01:35.912078 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.79s]
[0m22:01:35.913281 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:01:40.573646 [debug] [Thread-4 (]: SQL status: OK in 5.291 seconds
[0m22:01:40.604069 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:01:40.604893 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:01:40.606871 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:01:40.610785 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:01:40.621824 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:01:40.623242 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:01:40.634609 [debug] [Thread-4 (]: SQL status: OK in 0.009 seconds
[0m22:01:40.640958 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:01:40.642118 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:01:40.654676 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m22:01:40.657534 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:01:40.658701 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cb72c20>]}
[0m22:01:40.662622 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 5.51s]
[0m22:01:40.664076 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:01:41.646426 [debug] [Thread-6 (]: SQL status: OK in 6.338 seconds
[0m22:01:41.652086 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:01:41.652999 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:01:41.654310 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:01:41.657344 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:01:41.671737 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:01:41.672738 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:01:41.680508 [debug] [Thread-6 (]: SQL status: OK in 0.006 seconds
[0m22:01:41.690837 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:01:41.692539 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:01:41.694499 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:01:41.698428 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:01:41.700047 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7173e050>]}
[0m22:01:41.722842 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.54s]
[0m22:01:41.748235 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:01:42.223104 [debug] [Thread-5 (]: SQL status: OK in 6.944 seconds
[0m22:01:42.229875 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:01:42.230999 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:01:42.232511 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:01:42.235983 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:01:42.251544 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:01:42.252542 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:01:42.288153 [debug] [Thread-5 (]: SQL status: OK in 0.035 seconds
[0m22:01:42.292849 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:01:42.293821 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:01:42.296009 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:01:42.298959 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:01:42.300307 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b798bedd0>]}
[0m22:01:42.322167 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 7.15s]
[0m22:01:42.323703 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:01:42.815573 [debug] [Thread-1 (]: SQL status: OK in 7.542 seconds
[0m22:01:42.820328 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:01:42.820866 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:01:42.821398 [debug] [Thread-7 (]: SQL status: OK in 7.508 seconds
[0m22:01:42.824061 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:01:42.824456 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:01:42.824992 [debug] [Thread-1 (]: SQL status: OK in 0.003 seconds
[0m22:01:42.826355 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:01:42.826722 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:01:42.827075 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:01:42.827438 [debug] [Thread-7 (]: SQL status: OK in 0.003 seconds
[0m22:01:42.828862 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:01:42.829207 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:01:42.829554 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:01:42.836958 [debug] [Thread-1 (]: SQL status: OK in 0.009 seconds
[0m22:01:42.839071 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:01:42.839500 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:01:42.840153 [debug] [Thread-7 (]: SQL status: OK in 0.010 seconds
[0m22:01:42.840748 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:01:42.842778 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:01:42.843987 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:01:42.844428 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:01:42.844994 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cb725c0>]}
[0m22:01:42.846027 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 7.73s]
[0m22:01:42.846622 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:01:42.847174 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m22:01:42.848248 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:01:42.937251 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0aa64b90-51a0-4bba-83e1-7ba262e9a4c9', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7173d150>]}
[0m22:01:42.938140 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 7.78s]
[0m22:01:42.938755 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:01:42.942490 [debug] [MainThread]: Using duckdb connection "master"
[0m22:01:42.942866 [debug] [MainThread]: On master: BEGIN
[0m22:01:42.943129 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:01:42.949833 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m22:01:42.950320 [debug] [MainThread]: On master: COMMIT
[0m22:01:42.950654 [debug] [MainThread]: Using duckdb connection "master"
[0m22:01:42.950950 [debug] [MainThread]: On master: COMMIT
[0m22:01:42.951662 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:01:42.951981 [debug] [MainThread]: On master: Close
[0m22:01:42.954296 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:01:42.954600 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:01:42.954847 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:01:42.955136 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:01:42.955404 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:01:42.955625 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:01:42.955902 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:01:42.956157 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:01:42.956412 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:01:42.956864 [info ] [MainThread]: 
[0m22:01:42.957290 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 8.06 seconds (8.06s).
[0m22:01:42.958791 [debug] [MainThread]: Command end result
[0m22:01:42.986857 [info ] [MainThread]: 
[0m22:01:42.987483 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m22:01:42.987821 [info ] [MainThread]: 
[0m22:01:42.988234 [error] [MainThread]:   Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ""mtastats""
[0m22:01:42.988538 [info ] [MainThread]: 
[0m22:01:42.988868 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=1 SKIP=0 TOTAL=8
[0m22:01:42.990021 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 8.832335, "process_user_time": 105.644485, "process_kernel_time": 3.880515, "process_mem_max_rss": "522880", "process_in_blocks": "661768", "process_out_blocks": "7816", "command_success": false}
[0m22:01:42.990701 [debug] [MainThread]: Command `dbt run` failed at 22:01:42.990603 after 8.83 seconds
[0m22:01:42.991171 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7e4fb010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b7cc09b40>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1b6a9b2ad0>]}
[0m22:01:42.991586 [debug] [MainThread]: Flushing usage events
[0m22:03:22.155889 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca7bb2fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca62fcb20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca62fcb80>]}


============================== 22:03:22.159262 | 04fa6003-8f3e-4f61-bb16-a2bf0bbdc132 ==============================
[0m22:03:22.159262 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:03:22.159846 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m22:03:22.357134 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2f3dc90>]}
[0m22:03:22.410881 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca61b1b10>]}
[0m22:03:22.413688 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:03:22.423851 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:03:22.510817 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:03:22.511439 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m22:03:22.715908 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c98d26890>]}
[0m22:03:22.777387 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c9acc9030>]}
[0m22:03:22.777933 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:03:22.778319 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c9acc8d00>]}
[0m22:03:22.779692 [info ] [MainThread]: 
[0m22:03:22.780239 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:03:22.784471 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:03:22.867084 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:03:22.867484 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:03:22.867772 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:03:22.876757 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m22:03:22.877673 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:03:22.880389 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:03:22.880978 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:03:22.885909 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:03:22.886207 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:03:22.886464 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:03:22.892430 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:03:22.893467 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:03:22.893730 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:03:22.894172 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:03:22.894428 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:03:22.894653 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:03:22.895193 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:03:22.895776 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:03:22.896101 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:03:22.896361 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:03:22.896788 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:03:22.897059 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:03:22.899864 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:03:22.903709 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:03:22.904021 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:03:22.904312 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:03:22.909987 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:03:22.910289 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:03:22.910547 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:03:22.926765 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m22:03:22.931844 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:03:22.932389 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:03:22.932693 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:03:22.936603 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c9af04d00>]}
[0m22:03:22.937043 [debug] [MainThread]: Using duckdb connection "master"
[0m22:03:22.937324 [debug] [MainThread]: On master: BEGIN
[0m22:03:22.937574 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:03:22.943057 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m22:03:22.943384 [debug] [MainThread]: On master: COMMIT
[0m22:03:22.943676 [debug] [MainThread]: Using duckdb connection "master"
[0m22:03:22.943935 [debug] [MainThread]: On master: COMMIT
[0m22:03:22.944403 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:03:22.944688 [debug] [MainThread]: On master: Close
[0m22:03:22.946825 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:03:22.947243 [info ] [MainThread]: 
[0m22:03:22.955490 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:03:22.956119 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:03:22.956813 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:03:22.957515 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:03:22.958204 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:03:22.958840 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:03:22.959494 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:03:22.960199 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:03:22.960802 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:03:22.961418 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:03:22.962056 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:03:22.962707 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:03:22.963193 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:03:22.965531 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:03:22.967844 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:03:22.971151 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:03:22.972192 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:03:22.973163 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:03:22.974245 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:03:22.974986 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:03:22.975711 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:03:22.976418 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:03:22.977252 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:03:22.983889 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:03:22.984708 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:03:22.988785 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:03:22.989932 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:03:22.993244 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:03:22.993945 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:03:23.000105 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:03:23.002822 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:03:23.003613 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:03:23.004215 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:03:23.004900 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:03:23.005822 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:03:23.006476 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:03:23.011431 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:03:23.013274 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:03:23.018355 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:03:23.020939 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:03:23.021473 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:03:23.023858 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:03:23.029844 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:03:23.057544 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:03:23.058114 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:03:23.061448 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:03:23.062266 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:03:23.063015 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:03:23.065534 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:03:23.066687 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:03:23.067667 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:23.070223 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:03:23.070779 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:03:23.074148 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:03:23.074633 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:23.077116 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:03:23.081391 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:03:23.082231 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.082869 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:03:23.090524 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:03:23.092018 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:23.092642 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:23.093112 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:03:23.094050 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:03:23.094527 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:23.095018 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:03:23.095617 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:23.096435 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:03:23.096900 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:03:23.097486 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:03:23.097888 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:03:23.098288 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:03:23.098706 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:03:23.105008 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:03:23.105912 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:03:23.106306 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m22:03:23.106715 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:03:23.107151 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:03:23.108013 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:03:23.108498 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:03:23.109229 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:23.109941 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:03:23.111580 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m22:03:23.112285 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:03:23.114165 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:23.114628 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m22:03:23.115466 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:03:23.116097 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.116870 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:03:23.118521 [debug] [Thread-4 (]: SQL status: OK in 0.013 seconds
[0m22:03:23.119035 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:23.119624 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:03:23.122032 [debug] [Thread-5 (]: SQL status: OK in 0.015 seconds
[0m22:03:23.122473 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:23.122889 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m22:03:23.124180 [debug] [Thread-7 (]: SQL status: OK in 0.016 seconds
[0m22:03:23.124786 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:23.125104 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:03:23.129013 [debug] [Thread-6 (]: SQL status: OK in 0.020 seconds
[0m22:03:23.129600 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:23.130157 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:03:23.133506 [debug] [Thread-8 (]: SQL status: OK in 0.023 seconds
[0m22:03:23.134057 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:03:23.134599 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH mta_hourly_subway_socrata AS (
    "mtastats"."main"."mta_hourly_subway_socrata"
),
weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        mta_hourly_subway_socrata
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start;
    );
  
  
[0m22:03:23.136744 [debug] [Thread-8 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      WITH mta_hourly_subway_socrata AS (
    "mtastats"."main"."mta_hourly_subway_socrata"
),
weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        mta_hourly_subway_socrata
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start;
    );
  
  
[0m22:03:23.137388 [debug] [Thread-8 (]: DuckDB adapter: Rolling back transaction.
[0m22:03:23.138060 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: ROLLBACK
[0m22:03:23.154084 [debug] [Thread-8 (]: Failed to rollback 'model.mta.weekly_riders_per_station'
[0m22:03:23.155406 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:03:23.156569 [debug] [Thread-8 (]: Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ""mtastats""
[0m22:03:23.161948 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c9ad06920>]}
[0m22:03:23.162903 [error] [Thread-8 (]: 8 of 8 ERROR creating sql table model main.weekly_riders_per_station ........... [[31mERROR[0m in 0.16s]
[0m22:03:23.163760 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:03:23.233334 [debug] [Thread-3 (]: SQL status: OK in 0.116 seconds
[0m22:03:23.253811 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.254749 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m22:03:23.256056 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:03:23.262842 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.263496 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:03:23.264743 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m22:03:23.326337 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:03:23.327070 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.327546 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:03:23.344122 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m22:03:23.355917 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:03:23.356543 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:03:23.368959 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:03:23.372488 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:03:23.375277 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2ea2680>]}
[0m22:03:23.376178 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.41s]
[0m22:03:23.377805 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:03:24.983894 [debug] [Thread-1 (]: SQL status: OK in 1.868 seconds
[0m22:03:24.990346 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:25.021911 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m22:03:25.023377 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:03:25.028639 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:25.029570 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:03:25.030854 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:03:25.037703 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:03:25.038541 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:25.039236 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:03:25.079705 [debug] [Thread-1 (]: SQL status: OK in 0.040 seconds
[0m22:03:25.084304 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:03:25.085210 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:03:25.101708 [debug] [Thread-1 (]: SQL status: OK in 0.016 seconds
[0m22:03:25.104427 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:03:25.105467 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2ea2e00>]}
[0m22:03:25.106532 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.15s]
[0m22:03:25.107447 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:03:25.666783 [debug] [Thread-2 (]: SQL status: OK in 2.550 seconds
[0m22:03:25.672407 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:25.689094 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m22:03:25.690673 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:03:25.696282 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:25.697081 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:03:25.698315 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:03:25.701613 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:03:25.704107 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:25.704765 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:03:25.733545 [debug] [Thread-2 (]: SQL status: OK in 0.028 seconds
[0m22:03:25.738079 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:03:25.738802 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:03:25.749875 [debug] [Thread-2 (]: SQL status: OK in 0.010 seconds
[0m22:03:25.752732 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:03:25.753799 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2ea1de0>]}
[0m22:03:25.755069 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 2.79s]
[0m22:03:25.756245 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:03:28.225996 [debug] [Thread-4 (]: SQL status: OK in 5.105 seconds
[0m22:03:28.237198 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:28.245958 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m22:03:28.249741 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m22:03:28.261886 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:28.263127 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:03:28.264675 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:03:28.284254 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:03:28.285504 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:28.286321 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:03:28.297495 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m22:03:28.303386 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:03:28.304787 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:03:28.315593 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m22:03:28.318262 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:03:28.319294 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c9ad4b430>]}
[0m22:03:28.320326 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 5.34s]
[0m22:03:28.321789 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:03:28.912193 [debug] [Thread-6 (]: SQL status: OK in 5.781 seconds
[0m22:03:28.919317 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:28.913475 [debug] [Thread-7 (]: SQL status: OK in 5.788 seconds
[0m22:03:28.925658 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:28.920347 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m22:03:28.926652 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m22:03:28.929167 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:03:28.941574 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m22:03:28.956864 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:28.963254 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:03:28.962570 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:28.964819 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:03:28.966054 [debug] [Thread-6 (]: SQL status: OK in 0.002 seconds
[0m22:03:28.969759 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:03:28.970615 [debug] [Thread-7 (]: SQL status: OK in 0.005 seconds
[0m22:03:28.971492 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:28.975050 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:03:28.976127 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:03:28.977110 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:28.978222 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:03:28.991132 [debug] [Thread-6 (]: SQL status: OK in 0.013 seconds
[0m22:03:28.996707 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:03:28.997592 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:03:29.005151 [debug] [Thread-7 (]: SQL status: OK in 0.026 seconds
[0m22:03:29.009961 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:03:29.010915 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:03:29.029318 [debug] [Thread-6 (]: SQL status: OK in 0.031 seconds
[0m22:03:29.032373 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:03:29.033553 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2ea0970>]}
[0m22:03:29.034692 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.05s]
[0m22:03:29.035818 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:03:29.044250 [debug] [Thread-7 (]: SQL status: OK in 0.032 seconds
[0m22:03:29.048085 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:03:29.051929 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ba8c0e830>]}
[0m22:03:29.053256 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 6.06s]
[0m22:03:29.054874 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:03:30.261233 [debug] [Thread-5 (]: SQL status: OK in 7.138 seconds
[0m22:03:30.265245 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:30.265638 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m22:03:30.266468 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:03:30.268704 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:30.269050 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:03:30.269724 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:03:30.271082 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:03:30.271449 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:30.271750 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:03:30.276611 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m22:03:30.278516 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:03:30.278851 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:03:30.283587 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m22:03:30.284707 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:03:30.334357 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '04fa6003-8f3e-4f61-bb16-a2bf0bbdc132', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca2ea2620>]}
[0m22:03:30.335158 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 7.35s]
[0m22:03:30.335771 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:03:30.339150 [debug] [MainThread]: Using duckdb connection "master"
[0m22:03:30.339633 [debug] [MainThread]: On master: BEGIN
[0m22:03:30.340215 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:03:30.346640 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m22:03:30.347189 [debug] [MainThread]: On master: COMMIT
[0m22:03:30.347508 [debug] [MainThread]: Using duckdb connection "master"
[0m22:03:30.347778 [debug] [MainThread]: On master: COMMIT
[0m22:03:30.348411 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:03:30.348736 [debug] [MainThread]: On master: Close
[0m22:03:30.351105 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:03:30.351598 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:03:30.351869 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:03:30.352110 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:03:30.352345 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:03:30.352579 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:03:30.352809 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:03:30.353030 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:03:30.353248 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:03:30.353685 [info ] [MainThread]: 
[0m22:03:30.354151 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 7.57 seconds (7.57s).
[0m22:03:30.355291 [debug] [MainThread]: Command end result
[0m22:03:30.381633 [info ] [MainThread]: 
[0m22:03:30.382263 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m22:03:30.382647 [info ] [MainThread]: 
[0m22:03:30.383068 [error] [MainThread]:   Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near ""mtastats""
[0m22:03:30.383389 [info ] [MainThread]: 
[0m22:03:30.383738 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=1 SKIP=0 TOTAL=8
[0m22:03:30.384595 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 8.273282, "process_user_time": 100.99873, "process_kernel_time": 2.109537, "process_mem_max_rss": "500896", "process_out_blocks": "7880", "command_success": false, "process_in_blocks": "0"}
[0m22:03:30.385182 [debug] [MainThread]: Command `dbt run` failed at 22:03:30.385072 after 8.27 seconds
[0m22:03:30.385570 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca7bb2fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7c98d53a00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f7ca61b1b10>]}
[0m22:03:30.385995 [debug] [MainThread]: Flushing usage events
[0m22:05:51.586865 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb079c0f040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb078358af0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb078358b50>]}


============================== 22:05:51.589277 | 66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa ==============================
[0m22:05:51.589277 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:05:51.589908 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m22:05:51.770108 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06d170c70>]}
[0m22:05:51.832337 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb078340d00>]}
[0m22:05:51.834996 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:05:51.846344 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:05:51.945824 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:05:51.946575 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m22:05:52.157805 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cde6890>]}
[0m22:05:52.218834 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cdae230>]}
[0m22:05:52.219362 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:05:52.219732 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cdacf10>]}
[0m22:05:52.221080 [info ] [MainThread]: 
[0m22:05:52.221659 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:05:52.225573 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:05:52.308999 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:05:52.309489 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:05:52.309834 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:05:52.322501 [debug] [ThreadPool]: SQL status: OK in 0.013 seconds
[0m22:05:52.324208 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:05:52.327219 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:05:52.327718 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:05:52.333235 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:05:52.333574 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:05:52.333871 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:05:52.340271 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:05:52.341557 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:05:52.341879 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:05:52.343288 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m22:05:52.343593 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:05:52.343873 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:05:52.344400 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:05:52.345119 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:05:52.345384 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:05:52.345646 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:05:52.346624 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m22:05:52.346899 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:05:52.350292 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:05:52.356007 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:05:52.356693 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:05:52.356998 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:05:52.364139 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m22:05:52.364735 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:05:52.365196 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:05:52.380433 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m22:05:52.384146 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:05:52.384639 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:05:52.384921 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:05:52.388575 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06d1de1d0>]}
[0m22:05:52.388975 [debug] [MainThread]: Using duckdb connection "master"
[0m22:05:52.389282 [debug] [MainThread]: On master: BEGIN
[0m22:05:52.389540 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:05:52.395570 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m22:05:52.395973 [debug] [MainThread]: On master: COMMIT
[0m22:05:52.396403 [debug] [MainThread]: Using duckdb connection "master"
[0m22:05:52.396743 [debug] [MainThread]: On master: COMMIT
[0m22:05:52.397287 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:05:52.397603 [debug] [MainThread]: On master: Close
[0m22:05:52.399604 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:05:52.399970 [info ] [MainThread]: 
[0m22:05:52.409087 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:05:52.411469 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:05:52.411980 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:05:52.409949 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:05:52.412584 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:05:52.413060 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:05:52.413701 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:05:52.414190 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:05:52.414693 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:05:52.415256 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:05:52.415797 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:05:52.416399 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:05:52.417034 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:05:52.417551 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:05:52.418183 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:05:52.419934 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:05:52.420560 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:05:52.421191 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:05:52.421967 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:05:52.422585 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:05:52.423331 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:05:52.423918 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:05:52.424681 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:05:52.425118 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:05:52.425591 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:05:52.436471 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:05:52.437709 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:05:52.438589 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:05:52.439844 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:05:52.442880 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:05:52.443492 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:05:52.447448 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:05:52.448038 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:05:52.456635 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:05:52.458062 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:05:52.458574 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:05:52.459159 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:05:52.463000 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:05:52.467402 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:05:52.471353 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:05:52.472729 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:05:52.494105 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:05:52.496588 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:05:52.513936 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:05:52.516477 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:05:52.517765 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:05:52.518346 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:05:52.521792 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:05:52.524436 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:05:52.525672 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:05:52.526226 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:05:52.528670 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:05:52.529300 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:52.532540 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:05:52.534936 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:05:52.535744 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.538532 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:05:52.538986 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:52.541598 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:05:52.542327 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:05:52.543071 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:52.544024 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:52.544385 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:52.544890 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:05:52.545528 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:05:52.546047 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:05:52.546617 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:05:52.547143 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:52.547581 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:05:52.548017 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:05:52.548481 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:05:52.548891 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:05:52.549297 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:05:52.549725 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:05:52.555818 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:05:52.556571 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:05:52.556993 [debug] [Thread-1 (]: SQL status: OK in 0.010 seconds
[0m22:05:52.557401 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:05:52.557859 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:05:52.558620 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:05:52.559344 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:05:52.560895 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:52.561447 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:05:52.563049 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:05:52.563509 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m22:05:52.564191 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.564873 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:52.565480 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:05:52.566176 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:05:52.567860 [debug] [Thread-4 (]: SQL status: OK in 0.011 seconds
[0m22:05:52.568232 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:52.568752 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:05:52.570469 [debug] [Thread-5 (]: SQL status: OK in 0.013 seconds
[0m22:05:52.571109 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:52.571870 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m22:05:52.572968 [debug] [Thread-6 (]: SQL status: OK in 0.015 seconds
[0m22:05:52.573483 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:52.574108 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:05:52.577837 [debug] [Thread-8 (]: SQL status: OK in 0.019 seconds
[0m22:05:52.578416 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:05:52.578970 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:05:52.579975 [debug] [Thread-8 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:05:52.580608 [debug] [Thread-8 (]: DuckDB adapter: Rolling back transaction.
[0m22:05:52.581500 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: ROLLBACK
[0m22:05:52.596027 [debug] [Thread-7 (]: SQL status: OK in 0.037 seconds
[0m22:05:52.597354 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:52.598831 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:05:52.603076 [debug] [Thread-8 (]: Failed to rollback 'model.mta.weekly_riders_per_station'
[0m22:05:52.606672 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:05:52.608201 [debug] [Thread-8 (]: Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near "weekly_ridership"
[0m22:05:52.617745 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb078f46ec0>]}
[0m22:05:52.618736 [error] [Thread-8 (]: 8 of 8 ERROR creating sql table model main.weekly_riders_per_station ........... [[31mERROR[0m in 0.17s]
[0m22:05:52.619586 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:05:52.796965 [debug] [Thread-3 (]: SQL status: OK in 0.230 seconds
[0m22:05:52.819349 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.820107 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m22:05:52.821201 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:05:52.836331 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.837066 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:05:52.838429 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:05:52.931097 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:05:52.931847 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.932340 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:05:52.944861 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:05:52.958279 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:05:52.958977 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:05:52.997461 [debug] [Thread-3 (]: SQL status: OK in 0.038 seconds
[0m22:05:53.004559 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:05:53.005567 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb079c9b190>]}
[0m22:05:53.006514 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.59s]
[0m22:05:53.007586 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:05:54.368131 [debug] [Thread-1 (]: SQL status: OK in 1.803 seconds
[0m22:05:54.392923 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:54.393844 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m22:05:54.395177 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:05:54.400443 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:54.401201 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:05:54.402497 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:05:54.405486 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:05:54.406218 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:54.406809 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:05:54.438897 [debug] [Thread-1 (]: SQL status: OK in 0.031 seconds
[0m22:05:54.443436 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:05:54.450127 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:05:54.462623 [debug] [Thread-1 (]: SQL status: OK in 0.011 seconds
[0m22:05:54.465650 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:05:54.466716 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb078286260>]}
[0m22:05:54.467762 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.05s]
[0m22:05:54.468737 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:05:56.832016 [debug] [Thread-2 (]: SQL status: OK in 4.264 seconds
[0m22:05:56.837238 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:56.838085 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m22:05:56.839355 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:05:56.847250 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:56.848104 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:05:56.849615 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:05:56.852874 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:05:56.853724 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:56.854419 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:05:56.881241 [debug] [Thread-2 (]: SQL status: OK in 0.026 seconds
[0m22:05:56.886770 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:05:56.887628 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:05:56.901932 [debug] [Thread-2 (]: SQL status: OK in 0.013 seconds
[0m22:05:56.905172 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:05:56.906272 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb07828ddb0>]}
[0m22:05:56.907543 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 4.49s]
[0m22:05:56.908734 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:05:57.864766 [debug] [Thread-4 (]: SQL status: OK in 5.295 seconds
[0m22:05:57.871176 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:57.872834 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m22:05:57.880279 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m22:05:57.914089 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:57.915151 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:05:57.917103 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:05:57.921555 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:05:57.922760 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:57.923558 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:05:57.942618 [debug] [Thread-4 (]: SQL status: OK in 0.018 seconds
[0m22:05:57.948604 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:05:57.951277 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:05:57.968448 [debug] [Thread-4 (]: SQL status: OK in 0.016 seconds
[0m22:05:57.971720 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:05:57.973283 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cfddd80>]}
[0m22:05:57.974641 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 5.55s]
[0m22:05:57.975882 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:05:58.255662 [debug] [Thread-7 (]: SQL status: OK in 5.651 seconds
[0m22:05:58.262298 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:58.263394 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m22:05:58.265113 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:05:58.270692 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:58.291803 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:05:58.293646 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:05:58.296934 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:05:58.297896 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:58.298703 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:05:58.312010 [debug] [Thread-7 (]: SQL status: OK in 0.012 seconds
[0m22:05:58.316898 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:05:58.317809 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:05:58.333803 [debug] [Thread-7 (]: SQL status: OK in 0.015 seconds
[0m22:05:58.336611 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:05:58.337699 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cfddd50>]}
[0m22:05:58.338910 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.90s]
[0m22:05:58.340023 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:05:58.832394 [debug] [Thread-6 (]: SQL status: OK in 6.257 seconds
[0m22:05:58.838595 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:58.839642 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m22:05:58.842165 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:05:58.847660 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:58.848588 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:05:58.850949 [debug] [Thread-6 (]: SQL status: OK in 0.002 seconds
[0m22:05:58.854346 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:05:58.855433 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:58.856162 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:05:58.873064 [debug] [Thread-6 (]: SQL status: OK in 0.016 seconds
[0m22:05:58.878931 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:05:58.880084 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:05:58.919705 [debug] [Thread-6 (]: SQL status: OK in 0.039 seconds
[0m22:05:58.925868 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:05:58.927134 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06d0552a0>]}
[0m22:05:58.928313 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 6.50s]
[0m22:05:58.929633 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:05:59.901979 [debug] [Thread-5 (]: SQL status: OK in 7.329 seconds
[0m22:05:59.906053 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:59.906482 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m22:05:59.907216 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:05:59.910222 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:59.910747 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:05:59.911997 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:05:59.913836 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:05:59.914186 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:59.914486 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:05:59.918078 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m22:05:59.920220 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:05:59.920578 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:05:59.923614 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m22:05:59.924781 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:05:59.966781 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '66c8a9e9-8a19-49b0-9671-c2c43d9bb2fa', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06cfdcdc0>]}
[0m22:05:59.967620 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 7.54s]
[0m22:05:59.968211 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:05:59.971554 [debug] [MainThread]: Using duckdb connection "master"
[0m22:05:59.971900 [debug] [MainThread]: On master: BEGIN
[0m22:05:59.972188 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:05:59.978942 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m22:05:59.979417 [debug] [MainThread]: On master: COMMIT
[0m22:05:59.979752 [debug] [MainThread]: Using duckdb connection "master"
[0m22:05:59.980027 [debug] [MainThread]: On master: COMMIT
[0m22:05:59.980680 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:05:59.981151 [debug] [MainThread]: On master: Close
[0m22:05:59.984219 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:05:59.984734 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:05:59.985053 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:05:59.985305 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:05:59.985538 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:05:59.985782 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:05:59.986042 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:05:59.986334 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:05:59.986602 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:05:59.987005 [info ] [MainThread]: 
[0m22:05:59.987416 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 7.77 seconds (7.77s).
[0m22:05:59.988898 [debug] [MainThread]: Command end result
[0m22:06:00.018078 [info ] [MainThread]: 
[0m22:06:00.018752 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m22:06:00.019163 [info ] [MainThread]: 
[0m22:06:00.019582 [error] [MainThread]:   Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)
  Parser Error: syntax error at or near "weekly_ridership"
[0m22:06:00.019928 [info ] [MainThread]: 
[0m22:06:00.020250 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=1 SKIP=0 TOTAL=8
[0m22:06:00.021104 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 8.477749, "process_user_time": 103.77239, "process_kernel_time": 2.263755, "process_mem_max_rss": "495708", "process_out_blocks": "7880", "command_success": false, "process_in_blocks": "0"}
[0m22:06:00.022245 [debug] [MainThread]: Command `dbt run` failed at 22:06:00.022045 after 8.48 seconds
[0m22:06:00.023018 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb079c0f040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb06ce8d1e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb0661ae290>]}
[0m22:06:00.023428 [debug] [MainThread]: Flushing usage events
[0m22:06:52.563726 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1e04ad6fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1e031e34f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1e031e3490>]}


============================== 22:06:52.566153 | 152dc405-bbe5-4884-9331-4e4e9a89c5fd ==============================
[0m22:06:52.566153 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:06:52.566642 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m22:06:52.740891 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7f2dc90>]}
[0m22:06:52.793696 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1dffef9b10>]}
[0m22:06:52.796064 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:06:52.803832 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:06:52.885529 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:06:52.886186 [debug] [MainThread]: Partial parsing: updated file: mta://models/weekly_riders_per_station.sql
[0m22:06:53.092596 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7bc6890>]}
[0m22:06:53.151488 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7b69030>]}
[0m22:06:53.152019 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:06:53.152386 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7b68d00>]}
[0m22:06:53.153878 [info ] [MainThread]: 
[0m22:06:53.154438 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:06:53.158592 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:06:53.234928 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:06:53.235335 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:06:53.235670 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:06:53.247370 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m22:06:53.248845 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:06:53.251503 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:06:53.252027 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:06:53.257935 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:06:53.258305 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:06:53.258579 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:06:53.265604 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m22:06:53.266885 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:06:53.267265 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:06:53.267745 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:06:53.268089 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:06:53.268378 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:06:53.269067 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:06:53.270353 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:06:53.270760 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:06:53.271062 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:06:53.271808 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:06:53.272149 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:06:53.275643 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:06:53.280370 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:06:53.280722 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:06:53.281017 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:06:53.289056 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m22:06:53.289449 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:06:53.289776 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:06:53.306033 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m22:06:53.311166 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:06:53.311882 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:06:53.312173 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:06:53.316053 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7f9cd00>]}
[0m22:06:53.316463 [debug] [MainThread]: Using duckdb connection "master"
[0m22:06:53.316771 [debug] [MainThread]: On master: BEGIN
[0m22:06:53.317035 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:06:53.322891 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m22:06:53.323222 [debug] [MainThread]: On master: COMMIT
[0m22:06:53.323528 [debug] [MainThread]: Using duckdb connection "master"
[0m22:06:53.323812 [debug] [MainThread]: On master: COMMIT
[0m22:06:53.324266 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:06:53.324738 [debug] [MainThread]: On master: Close
[0m22:06:53.326940 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:06:53.327329 [info ] [MainThread]: 
[0m22:06:53.335907 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:06:53.336675 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:06:53.337270 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:06:53.338008 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:06:53.338742 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:06:53.339336 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:06:53.339801 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:06:53.340328 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:06:53.340878 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:06:53.341405 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:06:53.342103 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:06:53.349418 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:06:53.352480 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:06:53.357786 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:06:53.359492 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:06:53.360190 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:06:53.358945 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:06:53.361117 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:06:53.361783 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:06:53.362593 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:06:53.363291 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:06:53.364386 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:06:53.370829 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:06:53.372574 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:06:53.373289 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:06:53.374048 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:06:53.374934 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:06:53.375778 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:06:53.376534 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:06:53.377135 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:06:53.390923 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:06:53.392508 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:06:53.412660 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:06:53.413496 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:06:53.414306 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:06:53.418095 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:06:53.418762 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:06:53.419726 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:06:53.424955 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:06:53.427596 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:06:53.430943 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:06:53.431650 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:06:53.433758 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:06:53.436932 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:06:53.442845 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:06:53.443574 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:06:53.444637 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:53.445347 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:06:53.445849 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:06:53.446378 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:06:53.447038 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:06:53.448288 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:06:53.450981 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:06:53.451410 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:06:53.451908 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:06:53.454902 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:06:53.455578 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:06:53.458052 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:06:53.461336 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:06:53.463965 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:06:53.466691 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:06:53.467133 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.467651 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:06:53.477604 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:53.479327 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:53.480697 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:06:53.481572 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:06:53.483135 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:06:53.483741 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:06:53.484423 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:06:53.484952 [debug] [Thread-1 (]: SQL status: OK in 0.029 seconds
[0m22:06:53.485659 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:53.486289 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:06:53.486902 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:06:53.487434 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:06:53.488365 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:06:53.488866 [debug] [Thread-2 (]: SQL status: OK in 0.021 seconds
[0m22:06:53.489625 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:06:53.490679 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:06:53.491173 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:06:53.492511 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:06:53.493625 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:06:53.494375 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:53.495081 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:06:53.495544 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:06:53.496777 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:06:53.499050 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:06:53.499412 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.499888 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:06:53.501511 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m22:06:53.502038 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:53.502542 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:06:53.504381 [debug] [Thread-6 (]: SQL status: OK in 0.015 seconds
[0m22:06:53.504808 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:53.505501 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:06:53.507222 [debug] [Thread-5 (]: SQL status: OK in 0.015 seconds
[0m22:06:53.507762 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:06:53.508367 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m22:06:53.509697 [debug] [Thread-8 (]: SQL status: OK in 0.016 seconds
[0m22:06:53.510722 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:06:53.511390 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:06:53.514094 [debug] [Thread-7 (]: SQL status: OK in 0.018 seconds
[0m22:06:53.514633 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:53.515139 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:06:53.586244 [debug] [Thread-3 (]: SQL status: OK in 0.086 seconds
[0m22:06:53.598699 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.599637 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m22:06:53.600691 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m22:06:53.604843 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.605415 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:06:53.606310 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m22:06:53.652804 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:06:53.653777 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.654914 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:06:53.682725 [debug] [Thread-3 (]: SQL status: OK in 0.023 seconds
[0m22:06:53.705067 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:06:53.705934 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:06:53.727386 [debug] [Thread-3 (]: SQL status: OK in 0.021 seconds
[0m22:06:53.736057 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:06:53.738211 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1e04b63130>]}
[0m22:06:53.740415 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.37s]
[0m22:06:53.741342 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:06:54.128133 [debug] [Thread-2 (]: SQL status: OK in 0.629 seconds
[0m22:06:54.131857 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:54.132783 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m22:06:54.134437 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:06:54.137797 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:54.138286 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:06:54.139123 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m22:06:54.140940 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:06:54.141389 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:54.141744 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:06:54.146627 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m22:06:54.151163 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:06:54.152171 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:06:54.156848 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m22:06:54.163120 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:06:54.164081 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1dfff73c40>]}
[0m22:06:54.165261 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.82s]
[0m22:06:54.166599 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:06:58.124122 [debug] [Thread-4 (]: SQL status: OK in 4.621 seconds
[0m22:06:58.131532 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:58.132441 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m22:06:58.137682 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:06:58.162035 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:58.181692 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:06:58.183327 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:06:58.186977 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:06:58.187827 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:58.188514 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:06:58.203630 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m22:06:58.209767 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:06:58.211083 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:06:58.218218 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m22:06:58.220970 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:06:58.222108 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1dfff71810>]}
[0m22:06:58.223291 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 4.85s]
[0m22:06:58.224980 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:06:58.920029 [debug] [Thread-6 (]: SQL status: OK in 5.413 seconds
[0m22:06:58.926391 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:58.941770 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m22:06:58.943750 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:06:58.972926 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:58.973803 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:06:58.975119 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:06:58.978341 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:06:58.979175 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:58.979844 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:06:59.011537 [debug] [Thread-6 (]: SQL status: OK in 0.031 seconds
[0m22:06:59.016377 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:06:59.017213 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:06:59.029177 [debug] [Thread-6 (]: SQL status: OK in 0.011 seconds
[0m22:06:59.031718 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:06:59.032804 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7de0a60>]}
[0m22:06:59.033898 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 5.66s]
[0m22:06:59.034982 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:06:59.092745 [debug] [Thread-7 (]: SQL status: OK in 5.577 seconds
[0m22:06:59.099852 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:59.101668 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m22:06:59.103303 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:06:59.110154 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:59.111239 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:06:59.113143 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:06:59.119219 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:06:59.121771 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:59.122667 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:06:59.151839 [debug] [Thread-7 (]: SQL status: OK in 0.028 seconds
[0m22:06:59.156752 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:06:59.157562 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:06:59.165214 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m22:06:59.168695 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:06:59.169868 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1dfff71e40>]}
[0m22:06:59.171077 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.79s]
[0m22:06:59.173343 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:06:59.660249 [debug] [Thread-8 (]: SQL status: OK in 6.148 seconds
[0m22:06:59.666008 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:06:59.674105 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m22:06:59.675950 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m22:06:59.679787 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:06:59.680841 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:06:59.681717 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:06:59.733519 [debug] [Thread-8 (]: SQL status: OK in 0.051 seconds
[0m22:06:59.738337 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:06:59.739216 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m22:06:59.740430 [debug] [Thread-8 (]: SQL status: OK in 0.000 seconds
[0m22:06:59.742846 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:06:59.743953 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7de6500>]}
[0m22:06:59.745188 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 6.37s]
[0m22:06:59.746341 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:07:00.236123 [debug] [Thread-1 (]: SQL status: OK in 6.738 seconds
[0m22:07:00.241978 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:07:00.243042 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m22:07:00.244797 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:07:00.252002 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:07:00.252982 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:07:00.254553 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:07:00.257837 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:07:00.258670 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:07:00.259421 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:07:00.287336 [debug] [Thread-1 (]: SQL status: OK in 0.027 seconds
[0m22:07:00.292112 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:07:00.292879 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:07:00.307595 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m22:07:00.310126 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:07:00.311133 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7bc75b0>]}
[0m22:07:00.312238 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 6.97s]
[0m22:07:00.313357 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:07:01.208774 [debug] [Thread-5 (]: SQL status: OK in 7.700 seconds
[0m22:07:01.211816 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:07:01.212270 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m22:07:01.213285 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:07:01.215939 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:07:01.216353 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:07:01.217142 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:07:01.218802 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:07:01.219171 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:07:01.219482 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:07:01.223277 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m22:07:01.225536 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:07:01.226034 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:07:01.228635 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m22:07:01.229842 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:07:01.287137 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '152dc405-bbe5-4884-9331-4e4e9a89c5fd', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1dfff71120>]}
[0m22:07:01.288249 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 7.91s]
[0m22:07:01.288938 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:07:01.292811 [debug] [MainThread]: Using duckdb connection "master"
[0m22:07:01.293225 [debug] [MainThread]: On master: BEGIN
[0m22:07:01.293544 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:07:01.300188 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m22:07:01.300682 [debug] [MainThread]: On master: COMMIT
[0m22:07:01.301008 [debug] [MainThread]: Using duckdb connection "master"
[0m22:07:01.301302 [debug] [MainThread]: On master: COMMIT
[0m22:07:01.301883 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:07:01.302193 [debug] [MainThread]: On master: Close
[0m22:07:01.304659 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:07:01.305090 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:07:01.305425 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:07:01.305684 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:07:01.305921 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:07:01.306171 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:07:01.306396 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:07:01.306632 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:07:01.306873 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:07:01.307289 [info ] [MainThread]: 
[0m22:07:01.307718 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 8.15 seconds (8.15s).
[0m22:07:01.309100 [debug] [MainThread]: Command end result
[0m22:07:01.336277 [info ] [MainThread]: 
[0m22:07:01.336883 [info ] [MainThread]: [32mCompleted successfully[0m
[0m22:07:01.337234 [info ] [MainThread]: 
[0m22:07:01.337584 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m22:07:01.338353 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 8.824705, "process_user_time": 110.03492, "process_kernel_time": 2.068985, "process_mem_max_rss": "537348", "process_out_blocks": "13912", "process_in_blocks": "0"}
[0m22:07:01.338892 [debug] [MainThread]: Command `dbt run` succeeded at 22:07:01.338799 after 8.83 seconds
[0m22:07:01.339257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1e04ad6fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1df7f9cd00>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1d45a185b0>]}
[0m22:07:01.339624 [debug] [MainThread]: Flushing usage events
[0m22:41:22.701893 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd82b7070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd69b0b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd69b0b80>]}


============================== 22:41:22.707115 | 52b4fb99-b463-4714-b6b4-bf71b3ee0444 ==============================
[0m22:41:22.707115 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:41:22.707640 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m22:41:22.924038 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd36f0670>]}
[0m22:41:22.983407 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd6a3e650>]}
[0m22:41:22.986859 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:41:22.995130 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:41:23.099254 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m22:41:23.099628 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m22:41:23.130703 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9ccb3fa320>]}
[0m22:41:23.214332 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9ccb3f77c0>]}
[0m22:41:23.214886 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:41:23.215257 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9ccb3f7550>]}
[0m22:41:23.216868 [info ] [MainThread]: 
[0m22:41:23.217439 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:41:23.221694 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:41:23.282287 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:41:23.282783 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:41:23.283116 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:41:23.300287 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m22:41:23.301659 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:41:23.303855 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:41:23.304400 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:41:23.309228 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:41:23.309575 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:41:23.309872 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:41:23.317386 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m22:41:23.318395 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:41:23.318663 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:41:23.319895 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m22:41:23.320195 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:41:23.320471 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:41:23.322252 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m22:41:23.323080 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:41:23.323399 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:41:23.323641 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:41:23.324334 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:41:23.324659 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:41:23.327878 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:41:23.331889 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:41:23.332192 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:41:23.332497 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:41:23.337597 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m22:41:23.337885 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:41:23.338189 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:41:23.361088 [debug] [ThreadPool]: SQL status: OK in 0.022 seconds
[0m22:41:23.362896 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:41:23.364039 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:41:23.364439 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:41:23.368714 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9ccb72e350>]}
[0m22:41:23.369189 [debug] [MainThread]: Using duckdb connection "master"
[0m22:41:23.369476 [debug] [MainThread]: On master: BEGIN
[0m22:41:23.369723 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:41:23.376795 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m22:41:23.377316 [debug] [MainThread]: On master: COMMIT
[0m22:41:23.377623 [debug] [MainThread]: Using duckdb connection "master"
[0m22:41:23.377871 [debug] [MainThread]: On master: COMMIT
[0m22:41:23.378441 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:41:23.378800 [debug] [MainThread]: On master: Close
[0m22:41:23.381059 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:41:23.381595 [info ] [MainThread]: 
[0m22:41:23.390056 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:41:23.391284 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:41:23.391895 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:41:23.392922 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:41:23.390801 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:41:23.392432 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:41:23.394426 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:41:23.395004 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:41:23.395504 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:41:23.393995 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:41:23.396393 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:41:23.397000 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:41:23.397700 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:41:23.398254 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:41:23.399145 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:41:23.399992 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:41:23.401321 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:41:23.400645 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:41:23.402335 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:41:23.403453 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:41:23.404404 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:41:23.405149 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:41:23.406597 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:41:23.408747 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:41:23.410050 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:41:23.411835 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:41:23.412832 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:41:23.413701 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:41:23.423417 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:41:23.426684 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:41:23.427472 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:41:23.428188 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:41:23.432592 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:41:23.433428 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:41:23.434479 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:41:23.440525 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:41:23.444904 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:41:23.445480 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:41:23.448550 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:41:23.448995 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:41:23.454927 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:41:23.516715 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:41:23.517446 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:41:23.524110 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:41:23.546832 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:41:23.546284 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:41:23.550094 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:41:23.550614 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:41:23.553731 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:41:23.554515 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:41:23.554873 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:41:23.557636 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:41:23.560264 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:41:23.563745 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:41:23.564155 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:41:23.564607 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:41:23.565516 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:41:23.567808 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:41:23.571217 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:41:23.572292 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:41:23.573155 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:41:23.573784 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:41:23.574252 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:41:23.574750 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:41:23.575372 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:41:23.576268 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:41:23.576814 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:41:23.577150 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:41:23.577663 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:41:23.578083 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:41:23.578523 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:41:23.578981 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:41:23.579353 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:41:23.579809 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:41:23.592392 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:41:23.593111 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:41:23.594241 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:41:23.594819 [debug] [Thread-2 (]: SQL status: OK in 0.018 seconds
[0m22:41:23.595513 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:41:23.596170 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:41:23.596784 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:41:23.597861 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:41:23.598720 [debug] [Thread-1 (]: SQL status: OK in 0.021 seconds
[0m22:41:23.599496 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:41:23.600023 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:41:23.601131 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:41:23.602741 [debug] [Thread-3 (]: SQL status: OK in 0.024 seconds
[0m22:41:23.603133 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:41:23.603495 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:41:23.605148 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m22:41:23.605954 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:41:23.606387 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:41:23.608566 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m22:41:23.609422 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:41:23.610469 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:41:23.612374 [debug] [Thread-5 (]: SQL status: OK in 0.017 seconds
[0m22:41:23.612881 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:41:23.613348 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH total_ridership_by_station AS (
    -- Calculate total ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_ridership_by_station AS (
    -- Calculate OMNY ridership by station, year, latitude, and longitude
    SELECT 
        station_complex_id, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(ridership) AS omny_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        payment_method = 'omny'
    GROUP BY 
        station_complex_id, latitude, longitude, year
)
SELECT 
    t.station_complex_id AS station_id,
    t.station_complex AS station_name,
    t.latitude,
    t.longitude,
    t.year, 
    (o.omny_ridership / t.total_ridership) AS omny_percentage
FROM 
    total_ridership_by_station t
LEFT JOIN 
    omny_ridership_by_station o
    ON t.station_complex_id = o.station_complex_id 
    AND t.latitude = o.latitude
    AND t.longitude = o.longitude
    AND t.year = o.year
ORDER BY 
    t.year, omny_percentage DESC
    );
  
  
[0m22:41:23.617108 [debug] [Thread-7 (]: SQL status: OK in 0.021 seconds
[0m22:41:23.618812 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:41:23.619369 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:41:23.628416 [debug] [Thread-8 (]: SQL status: OK in 0.032 seconds
[0m22:41:23.629001 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:41:23.629610 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:41:23.831503 [debug] [Thread-3 (]: SQL status: OK in 0.227 seconds
[0m22:41:23.851296 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:41:23.852116 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:41:23.854671 [debug] [Thread-3 (]: SQL status: OK in 0.002 seconds
[0m22:41:23.890217 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:41:23.891004 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:41:23.891351 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:41:23.901791 [debug] [Thread-3 (]: SQL status: OK in 0.010 seconds
[0m22:41:23.908107 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:41:23.909245 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:41:23.911213 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:41:23.914292 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:41:23.916704 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9ba1a0>]}
[0m22:41:23.917562 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.51s]
[0m22:41:23.918263 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:41:25.924518 [debug] [Thread-1 (]: SQL status: OK in 2.323 seconds
[0m22:41:25.952662 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:41:25.953762 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:41:25.955288 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:41:25.958458 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:41:25.959376 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:41:25.960164 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:41:25.975405 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m22:41:25.980250 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:41:25.986399 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:41:25.987868 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:41:25.990583 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:41:25.992047 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9b93f0>]}
[0m22:41:25.993396 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.59s]
[0m22:41:25.994700 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:41:26.142528 [debug] [Thread-2 (]: SQL status: OK in 2.541 seconds
[0m22:41:26.150191 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:41:26.171731 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:41:26.177320 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:41:26.180475 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:41:26.181331 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:41:26.182000 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:41:26.192862 [debug] [Thread-2 (]: SQL status: OK in 0.010 seconds
[0m22:41:26.200615 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:41:26.222065 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:41:26.223747 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:41:26.228563 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:41:26.229854 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9ba710>]}
[0m22:41:26.231161 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 2.83s]
[0m22:41:26.232605 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:41:29.930980 [debug] [Thread-8 (]: SQL status: OK in 6.301 seconds
[0m22:41:29.983876 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:41:29.984876 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m22:41:29.987802 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m22:41:29.992721 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:41:29.994320 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:41:29.995108 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:41:30.042756 [debug] [Thread-8 (]: SQL status: OK in 0.047 seconds
[0m22:41:30.048259 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:41:30.049181 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m22:41:30.050469 [debug] [Thread-8 (]: SQL status: OK in 0.000 seconds
[0m22:41:30.053202 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:41:30.063868 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9b8a30>]}
[0m22:41:30.065506 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 6.65s]
[0m22:41:30.066790 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:41:30.333694 [debug] [Thread-6 (]: SQL status: OK in 6.722 seconds
[0m22:41:30.340015 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:41:30.361936 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:41:30.363534 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:41:30.369489 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:41:30.370686 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:41:30.375692 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:41:30.393724 [debug] [Thread-6 (]: SQL status: OK in 0.017 seconds
[0m22:41:30.400180 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:41:30.401026 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:41:30.402238 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m22:41:30.404499 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:41:30.405454 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9c24cb5db0>]}
[0m22:41:30.406525 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 7.00s]
[0m22:41:30.407459 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:41:30.836045 [debug] [Thread-5 (]: SQL status: OK in 7.222 seconds
[0m22:41:30.842710 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:41:30.843490 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:41:30.844670 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:41:30.847243 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:41:30.847849 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:41:30.848397 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:41:30.876383 [debug] [Thread-5 (]: SQL status: OK in 0.027 seconds
[0m22:41:30.880987 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:41:30.881754 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:41:30.882779 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:41:30.884961 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:41:30.885917 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9baa10>]}
[0m22:41:30.886992 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 7.48s]
[0m22:41:30.888474 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:41:31.683560 [debug] [Thread-7 (]: SQL status: OK in 8.063 seconds
[0m22:41:31.689401 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:41:31.690251 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:41:31.691576 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:41:31.694286 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:41:31.695054 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:41:31.695785 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:41:31.705535 [debug] [Thread-7 (]: SQL status: OK in 0.009 seconds
[0m22:41:31.710634 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:41:31.711529 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:41:31.712731 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m22:41:31.716480 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:41:31.717578 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9b8220>]}
[0m22:41:31.718885 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 8.31s]
[0m22:41:31.720353 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:41:32.396294 [debug] [Thread-4 (]: SQL status: OK in 8.789 seconds
[0m22:41:32.399919 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:41:32.400391 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:41:32.401329 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m22:41:32.403052 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:41:32.403464 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:41:32.403831 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:41:32.407598 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m22:41:32.409689 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:41:32.410047 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:41:32.410640 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m22:41:32.411828 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:41:32.472695 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '52b4fb99-b463-4714-b6b4-bf71b3ee0444', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cca9bb850>]}
[0m22:41:32.473528 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 9.07s]
[0m22:41:32.474088 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:41:32.478934 [debug] [MainThread]: Using duckdb connection "master"
[0m22:41:32.479552 [debug] [MainThread]: On master: BEGIN
[0m22:41:32.479956 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:41:32.486762 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m22:41:32.487198 [debug] [MainThread]: On master: COMMIT
[0m22:41:32.487480 [debug] [MainThread]: Using duckdb connection "master"
[0m22:41:32.487715 [debug] [MainThread]: On master: COMMIT
[0m22:41:32.488204 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:41:32.488474 [debug] [MainThread]: On master: Close
[0m22:41:32.490286 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:41:32.490583 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:41:32.490823 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:41:32.491036 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:41:32.491243 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:41:32.491514 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:41:32.491723 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:41:32.491933 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:41:32.492161 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:41:32.492565 [info ] [MainThread]: 
[0m22:41:32.492954 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 9.28 seconds (9.28s).
[0m22:41:32.494181 [debug] [MainThread]: Command end result
[0m22:41:32.522150 [info ] [MainThread]: 
[0m22:41:32.522762 [info ] [MainThread]: [32mCompleted successfully[0m
[0m22:41:32.523127 [info ] [MainThread]: 
[0m22:41:32.523459 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m22:41:32.524560 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 9.876725, "process_user_time": 121.22635, "process_kernel_time": 4.112657, "process_mem_max_rss": "540948", "process_out_blocks": "12488", "process_in_blocks": "0"}
[0m22:41:32.525269 [debug] [MainThread]: Command `dbt run` succeeded at 22:41:32.525166 after 9.88 seconds
[0m22:41:32.525648 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd82b7070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd69b8d90>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9cd75bb370>]}
[0m22:41:32.526029 [debug] [MainThread]: Flushing usage events
[0m22:48:17.712641 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125710f040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1255858b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1255858b80>]}


============================== 22:48:17.715836 | ed362b84-862e-476c-99e5-e4fd7cc73d51 ==============================
[0m22:48:17.715836 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:48:17.716365 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'send_anonymous_usage_stats': 'True'}
[0m22:48:17.894720 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1255784d60>]}
[0m22:48:17.947746 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125570ec80>]}
[0m22:48:17.951412 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:48:17.959730 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:48:18.053332 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:48:18.053864 [debug] [MainThread]: Partial parsing: updated file: mta://models/omny_adoption_by_station.sql
[0m22:48:18.291176 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f124a2e28f0>]}
[0m22:48:18.371632 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f124a2ad5a0>]}
[0m22:48:18.372534 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:48:18.373121 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f124a2ade10>]}
[0m22:48:18.375236 [info ] [MainThread]: 
[0m22:48:18.375977 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:48:18.383370 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:48:18.475321 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:48:18.475757 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:48:18.476077 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:48:18.485520 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m22:48:18.486494 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:48:18.489123 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:48:18.489575 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:48:18.494296 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:18.494612 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:48:18.494887 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:48:18.500926 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:48:18.502072 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:18.502376 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:48:18.502848 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:18.503117 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:18.503364 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:48:18.503944 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:18.504621 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:48:18.504846 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:18.505070 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:48:18.505481 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:18.505711 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:48:18.508485 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:48:18.512394 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:48:18.512698 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:48:18.512993 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:48:18.519289 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m22:48:18.519865 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:48:18.520204 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:48:18.536714 [debug] [ThreadPool]: SQL status: OK in 0.016 seconds
[0m22:48:18.538084 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:48:18.538723 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:48:18.539006 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:48:18.542321 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125250b070>]}
[0m22:48:18.542715 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:18.542993 [debug] [MainThread]: On master: BEGIN
[0m22:48:18.543323 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:48:18.548826 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m22:48:18.549120 [debug] [MainThread]: On master: COMMIT
[0m22:48:18.549380 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:18.549586 [debug] [MainThread]: On master: COMMIT
[0m22:48:18.549980 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:48:18.550215 [debug] [MainThread]: On master: Close
[0m22:48:18.551958 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:48:18.552329 [info ] [MainThread]: 
[0m22:48:18.561982 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:48:18.562696 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:48:18.563358 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:48:18.564052 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:48:18.564629 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:48:18.565305 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:48:18.566207 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:48:18.566789 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:48:18.567316 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:48:18.567930 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:48:18.568523 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:48:18.569114 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:48:18.569617 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:48:18.570335 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:48:18.571020 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:48:18.571750 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:48:18.572624 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:48:18.573257 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:48:18.574017 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:48:18.574866 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:48:18.575578 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:48:18.576751 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:48:18.587207 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:48:18.587992 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:48:18.588567 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:48:18.589316 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:48:18.589956 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:48:18.594442 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:48:18.595925 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:48:18.596675 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:48:18.597800 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:48:18.602165 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:48:18.602856 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:48:18.603306 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:48:18.603848 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:48:18.604585 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:48:18.608142 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:48:18.608936 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:48:18.611979 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:48:18.615023 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:48:18.633018 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:48:18.648262 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:48:18.654660 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:48:18.656837 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:48:18.659662 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:48:18.661385 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:48:18.661865 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:48:18.665226 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:48:18.665992 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:48:18.667291 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:48:18.668304 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:18.669356 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:48:18.672707 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:48:18.673250 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:18.676235 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:48:18.680599 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:48:18.684897 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:48:18.685517 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:48:18.687879 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:48:18.688650 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:18.689219 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:48:18.691455 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:18.692273 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:18.692753 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:48:18.693158 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:18.694263 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:48:18.694884 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:18.695269 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:48:18.695563 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:18.696023 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:48:18.696553 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:48:18.702836 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:48:18.703648 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:48:18.704548 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:48:18.705831 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:48:18.706656 [debug] [Thread-1 (]: SQL status: OK in 0.014 seconds
[0m22:48:18.707339 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:48:18.707813 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:48:18.708427 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:48:18.709687 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:48:18.710715 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:48:18.711453 [debug] [Thread-2 (]: SQL status: OK in 0.016 seconds
[0m22:48:18.712017 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:18.713583 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:18.714167 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:48:18.714972 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:48:18.717524 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m22:48:18.718080 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:18.718646 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:48:18.721060 [debug] [Thread-5 (]: SQL status: OK in 0.014 seconds
[0m22:48:18.721608 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:18.722350 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) * 100.0 / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) * 100.0 / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex;
    );
  
  
[0m22:48:18.734895 [debug] [Thread-5 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) * 100.0 / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) * 100.0 / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex;
    );
  
  
[0m22:48:18.736127 [debug] [Thread-5 (]: DuckDB adapter: Rolling back transaction.
[0m22:48:18.736893 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: ROLLBACK
[0m22:48:18.738587 [debug] [Thread-7 (]: SQL status: OK in 0.031 seconds
[0m22:48:18.739935 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:18.742125 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:48:18.744898 [debug] [Thread-4 (]: SQL status: OK in 0.036 seconds
[0m22:48:18.746465 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:18.747457 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:48:18.753076 [debug] [Thread-6 (]: SQL status: OK in 0.043 seconds
[0m22:48:18.753936 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:18.757213 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:48:18.760984 [debug] [Thread-8 (]: SQL status: OK in 0.050 seconds
[0m22:48:18.761935 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:18.764038 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:48:18.789539 [debug] [Thread-5 (]: Failed to rollback 'model.mta.omny_adoption_by_station'
[0m22:48:18.790340 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:48:18.791700 [debug] [Thread-5 (]: Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Parser Error: syntax error at or near ";"
[0m22:48:18.795750 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1256442ec0>]}
[0m22:48:18.796761 [error] [Thread-5 (]: 5 of 8 ERROR creating sql table model main.omny_adoption_by_station ............ [[31mERROR[0m in 0.20s]
[0m22:48:18.797662 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:48:19.147321 [debug] [Thread-3 (]: SQL status: OK in 0.428 seconds
[0m22:48:19.177677 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:19.178550 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:48:19.184978 [debug] [Thread-3 (]: SQL status: OK in 0.006 seconds
[0m22:48:19.240920 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:48:19.241871 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:19.242522 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:48:19.272043 [debug] [Thread-3 (]: SQL status: OK in 0.029 seconds
[0m22:48:19.307882 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:19.308858 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:48:19.310507 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:48:19.316035 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:48:19.317387 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125578d810>]}
[0m22:48:19.319932 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.74s]
[0m22:48:19.322046 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:48:19.435165 [debug] [Thread-2 (]: SQL status: OK in 0.719 seconds
[0m22:48:19.442563 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:19.443715 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:48:19.445329 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:48:19.458315 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:48:19.459411 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:19.460154 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:48:19.467016 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m22:48:19.473463 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:19.474376 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:48:19.481783 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m22:48:19.484415 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:48:19.485273 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125246d960>]}
[0m22:48:19.486034 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.92s]
[0m22:48:19.486713 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:48:22.572979 [debug] [Thread-1 (]: SQL status: OK in 3.857 seconds
[0m22:48:22.579256 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:22.602022 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:48:22.606008 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:48:22.612265 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:48:22.618473 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:22.619550 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:48:22.645457 [debug] [Thread-1 (]: SQL status: OK in 0.025 seconds
[0m22:48:22.655128 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:22.656329 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:48:22.657720 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m22:48:22.660936 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:48:22.662492 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125578c100>]}
[0m22:48:22.664290 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 4.10s]
[0m22:48:22.674434 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:48:24.862238 [debug] [Thread-4 (]: SQL status: OK in 6.113 seconds
[0m22:48:24.911765 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:24.913452 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:48:24.915010 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m22:48:24.918721 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:48:24.919619 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:24.920392 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:48:24.929615 [debug] [Thread-4 (]: SQL status: OK in 0.008 seconds
[0m22:48:24.934243 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:24.935096 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:48:24.936406 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m22:48:24.940222 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:48:24.947299 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125578fd90>]}
[0m22:48:24.948705 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 6.37s]
[0m22:48:24.949932 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:48:25.029754 [debug] [Thread-8 (]: SQL status: OK in 6.265 seconds
[0m22:48:25.074304 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:25.075280 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m22:48:25.076791 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m22:48:25.080082 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:48:25.081123 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:25.084162 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:48:25.156308 [debug] [Thread-8 (]: SQL status: OK in 0.066 seconds
[0m22:48:25.162458 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:25.163514 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m22:48:25.164857 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m22:48:25.168948 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:48:25.170496 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125578efb0>]}
[0m22:48:25.191820 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 6.57s]
[0m22:48:25.193253 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:48:25.642796 [debug] [Thread-6 (]: SQL status: OK in 6.884 seconds
[0m22:48:25.655864 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:25.661473 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:48:25.663924 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:48:25.672477 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:48:25.673843 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:25.674884 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:48:25.697612 [debug] [Thread-6 (]: SQL status: OK in 0.022 seconds
[0m22:48:25.709711 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:25.710645 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:48:25.717416 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:48:25.720495 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:48:25.721900 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125581d870>]}
[0m22:48:25.723377 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 7.13s]
[0m22:48:25.732968 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:48:26.102952 [debug] [Thread-7 (]: SQL status: OK in 7.359 seconds
[0m22:48:26.106348 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:26.106875 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:48:26.107937 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:48:26.109519 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:48:26.109907 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:26.110219 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:48:26.113901 [debug] [Thread-7 (]: SQL status: OK in 0.003 seconds
[0m22:48:26.116225 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:26.116642 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:48:26.117447 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m22:48:26.118765 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:48:26.181867 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'ed362b84-862e-476c-99e5-e4fd7cc73d51', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125578cb20>]}
[0m22:48:26.183051 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 7.59s]
[0m22:48:26.183847 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:48:26.188155 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:26.188974 [debug] [MainThread]: On master: BEGIN
[0m22:48:26.189471 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:48:26.202959 [debug] [MainThread]: SQL status: OK in 0.013 seconds
[0m22:48:26.204199 [debug] [MainThread]: On master: COMMIT
[0m22:48:26.205026 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:26.205639 [debug] [MainThread]: On master: COMMIT
[0m22:48:26.207134 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m22:48:26.208258 [debug] [MainThread]: On master: Close
[0m22:48:26.215216 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:48:26.216127 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:48:26.216773 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:48:26.217561 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:48:26.217994 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:48:26.218455 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:48:26.218858 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:48:26.219140 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:48:26.219461 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:48:26.220094 [info ] [MainThread]: 
[0m22:48:26.220671 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 7.84 seconds (7.84s).
[0m22:48:26.223434 [debug] [MainThread]: Command end result
[0m22:48:26.267217 [info ] [MainThread]: 
[0m22:48:26.267977 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m22:48:26.268374 [info ] [MainThread]: 
[0m22:48:26.268783 [error] [MainThread]:   Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)
  Parser Error: syntax error at or near ";"
[0m22:48:26.269116 [info ] [MainThread]: 
[0m22:48:26.269445 [info ] [MainThread]: Done. PASS=7 WARN=0 ERROR=1 SKIP=0 TOTAL=8
[0m22:48:26.270538 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 8.603283, "process_user_time": 100.088776, "process_kernel_time": 5.690542, "process_mem_max_rss": "535296", "process_out_blocks": "12664", "command_success": false, "process_in_blocks": "0"}
[0m22:48:26.271154 [debug] [MainThread]: Command `dbt run` failed at 22:48:26.271044 after 8.60 seconds
[0m22:48:26.271645 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125710f040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f125570ec80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f12480e7a90>]}
[0m22:48:26.272020 [debug] [MainThread]: Flushing usage events
[0m22:48:31.823024 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd1e92fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd05ef4f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd05ef490>]}


============================== 22:48:31.825120 | 315c7f1f-b87c-405c-bf3a-8bad446f0cbb ==============================
[0m22:48:31.825120 [info ] [MainThread]: Running with dbt=1.8.7
[0m22:48:31.825633 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'version_check': 'True', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'invocation_command': 'dbt run', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m22:48:32.011747 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc5371c90>]}
[0m22:48:32.068382 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd048ce80>]}
[0m22:48:32.070956 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m22:48:32.082875 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m22:48:32.176167 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m22:48:32.176940 [debug] [MainThread]: Partial parsing: updated file: mta://models/omny_adoption_by_station.sql
[0m22:48:32.402130 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc4fe6890>]}
[0m22:48:32.466646 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc4fad030>]}
[0m22:48:32.467153 [info ] [MainThread]: Found 8 models, 8 sources, 416 macros
[0m22:48:32.467472 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc4facd00>]}
[0m22:48:32.468831 [info ] [MainThread]: 
[0m22:48:32.469349 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m22:48:32.473207 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m22:48:32.554131 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m22:48:32.554575 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m22:48:32.554907 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m22:48:32.564320 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m22:48:32.565439 [debug] [ThreadPool]: On list_mtastats: Close
[0m22:48:32.568466 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m22:48:32.568882 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m22:48:32.573905 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:32.574196 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m22:48:32.574459 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:48:32.579982 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m22:48:32.580986 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:32.581447 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m22:48:32.581945 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:32.582184 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:32.582434 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m22:48:32.582997 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:32.583648 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:48:32.583965 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m22:48:32.584225 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m22:48:32.584650 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m22:48:32.584917 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m22:48:32.587690 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m22:48:32.592043 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:48:32.592344 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m22:48:32.592628 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m22:48:32.599808 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m22:48:32.600140 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m22:48:32.600423 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m22:48:32.617383 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m22:48:32.621020 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m22:48:32.621812 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m22:48:32.622098 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m22:48:32.626394 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd217e830>]}
[0m22:48:32.626783 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:32.627036 [debug] [MainThread]: On master: BEGIN
[0m22:48:32.627254 [debug] [MainThread]: Opening a new connection, currently in state init
[0m22:48:32.633238 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m22:48:32.633581 [debug] [MainThread]: On master: COMMIT
[0m22:48:32.633849 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:32.634072 [debug] [MainThread]: On master: COMMIT
[0m22:48:32.634514 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:48:32.634793 [debug] [MainThread]: On master: Close
[0m22:48:32.636924 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m22:48:32.637313 [info ] [MainThread]: 
[0m22:48:32.647045 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m22:48:32.647786 [info ] [Thread-1 (]: 1 of 8 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m22:48:32.648578 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m22:48:32.648923 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m22:48:32.655550 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m22:48:32.658577 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m22:48:32.659458 [info ] [Thread-2 (]: 2 of 8 START sql table model main.busiest_specific_times ....................... [RUN]
[0m22:48:32.660201 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m22:48:32.660808 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m22:48:32.661598 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m22:48:32.662122 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m22:48:32.662811 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m22:48:32.663360 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m22:48:32.663969 [debug] [Thread-7 (]: Began running node model.mta.total_riders_per_station
[0m22:48:32.664828 [info ] [Thread-3 (]: 3 of 8 START sql table model main.daily_ridership .............................. [RUN]
[0m22:48:32.666263 [debug] [Thread-8 (]: Began running node model.mta.weekly_riders_per_station
[0m22:48:32.667953 [info ] [Thread-4 (]: 4 of 8 START sql table model main.fare_class_boro .............................. [RUN]
[0m22:48:32.674951 [info ] [Thread-5 (]: 5 of 8 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m22:48:32.682020 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m22:48:32.689045 [info ] [Thread-6 (]: 6 of 8 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m22:48:32.710171 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m22:48:32.711063 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m22:48:32.707264 [info ] [Thread-7 (]: 7 of 8 START sql table model main.total_riders_per_station ..................... [RUN]
[0m22:48:32.712044 [info ] [Thread-8 (]: 8 of 8 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m22:48:32.712930 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m22:48:32.713724 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m22:48:32.719868 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m22:48:32.720950 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m22:48:32.721772 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m22:48:32.722911 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m22:48:32.723555 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:32.724294 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m22:48:32.724823 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m22:48:32.725329 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m22:48:32.725943 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m22:48:32.726476 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m22:48:32.730231 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m22:48:32.730804 [debug] [Thread-7 (]: Began compiling node model.mta.total_riders_per_station
[0m22:48:32.731371 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m22:48:32.731971 [debug] [Thread-8 (]: Began compiling node model.mta.weekly_riders_per_station
[0m22:48:32.737268 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m22:48:32.740924 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m22:48:32.745203 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m22:48:32.747714 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m22:48:32.751232 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m22:48:32.752098 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m22:48:32.752872 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m22:48:32.757891 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m22:48:32.760295 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m22:48:32.761471 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m22:48:32.766277 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m22:48:32.766749 [debug] [Thread-7 (]: Began executing node model.mta.total_riders_per_station
[0m22:48:32.767317 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m22:48:32.767825 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:32.781619 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m22:48:32.789230 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m22:48:32.796109 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m22:48:32.796856 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:32.797617 [debug] [Thread-8 (]: Began executing node model.mta.weekly_riders_per_station
[0m22:48:32.801097 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m22:48:32.801624 [debug] [Thread-1 (]: SQL status: OK in 0.049 seconds
[0m22:48:32.802219 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m22:48:32.804212 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:32.804810 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:32.805408 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m22:48:32.805934 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:32.809731 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m22:48:32.810824 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:32.811433 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:32.811977 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m22:48:32.812468 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m22:48:32.812965 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m22:48:32.813434 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m22:48:32.813906 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: BEGIN
[0m22:48:32.814572 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:48:32.815186 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m22:48:32.815575 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:32.816484 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m22:48:32.817007 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m22:48:32.817882 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m22:48:32.818896 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m22:48:32.819604 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m22:48:32.822029 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m22:48:32.822887 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m22:48:32.823366 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:32.823848 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m22:48:32.825531 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m22:48:32.826127 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:32.826650 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m22:48:32.828714 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m22:48:32.829415 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:32.830006 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:48:32.833115 [debug] [Thread-5 (]: SQL status: OK in 0.016 seconds
[0m22:48:32.833803 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:32.834395 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) * 100.0 / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) * 100.0 / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m22:48:32.840240 [debug] [Thread-7 (]: SQL status: OK in 0.022 seconds
[0m22:48:32.841043 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:32.841636 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m22:48:32.843353 [debug] [Thread-6 (]: SQL status: OK in 0.024 seconds
[0m22:48:32.843911 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:32.844494 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m22:48:32.846745 [debug] [Thread-8 (]: SQL status: OK in 0.025 seconds
[0m22:48:32.847311 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:32.848017 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m22:48:33.063595 [debug] [Thread-3 (]: SQL status: OK in 0.236 seconds
[0m22:48:33.099119 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:33.099949 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m22:48:33.101192 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:48:33.113197 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:33.114039 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m22:48:33.116010 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m22:48:33.195450 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:48:33.196440 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:33.197089 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m22:48:33.269544 [debug] [Thread-3 (]: SQL status: OK in 0.072 seconds
[0m22:48:33.286043 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m22:48:33.301602 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m22:48:33.348689 [debug] [Thread-3 (]: SQL status: OK in 0.046 seconds
[0m22:48:33.362787 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m22:48:33.370074 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc4f49a50>]}
[0m22:48:33.371330 [info ] [Thread-3 (]: 3 of 8 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.66s]
[0m22:48:33.372704 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m22:48:34.735627 [debug] [Thread-1 (]: SQL status: OK in 1.917 seconds
[0m22:48:34.741807 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:34.762068 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m22:48:34.766503 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:48:34.772252 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:34.773295 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m22:48:34.782610 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m22:48:34.786484 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:48:34.787293 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:34.788078 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m22:48:34.833660 [debug] [Thread-1 (]: SQL status: OK in 0.045 seconds
[0m22:48:34.838449 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m22:48:34.839470 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m22:48:34.866914 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m22:48:34.869860 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m22:48:34.882224 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd05086d0>]}
[0m22:48:34.892511 [info ] [Thread-1 (]: 1 of 8 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 2.23s]
[0m22:48:34.893771 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m22:48:37.694257 [debug] [Thread-8 (]: SQL status: OK in 4.845 seconds
[0m22:48:37.700807 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:37.712740 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m22:48:37.714277 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m22:48:37.720027 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:37.720975 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m22:48:37.742437 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m22:48:37.746635 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:48:37.747519 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:37.748137 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m22:48:37.787800 [debug] [Thread-8 (]: SQL status: OK in 0.039 seconds
[0m22:48:37.792701 [debug] [Thread-8 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m22:48:37.793537 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m22:48:37.806127 [debug] [Thread-8 (]: SQL status: OK in 0.012 seconds
[0m22:48:37.808815 [debug] [Thread-8 (]: On model.mta.weekly_riders_per_station: Close
[0m22:48:37.822472 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd0d74cd0>]}
[0m22:48:37.824077 [info ] [Thread-8 (]: 8 of 8 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 5.10s]
[0m22:48:37.825231 [debug] [Thread-8 (]: Finished running node model.mta.weekly_riders_per_station
[0m22:48:37.967308 [debug] [Thread-2 (]: SQL status: OK in 5.142 seconds
[0m22:48:37.975249 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:37.976689 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m22:48:37.978456 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:48:37.986763 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:37.987846 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m22:48:37.989343 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m22:48:37.992721 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:48:38.011785 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:38.012896 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m22:48:38.028171 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m22:48:38.033008 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m22:48:38.033874 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m22:48:38.045513 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m22:48:38.048240 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m22:48:38.049387 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6db6d55060>]}
[0m22:48:38.050625 [info ] [Thread-2 (]: 2 of 8 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 5.39s]
[0m22:48:38.051808 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m22:48:38.341808 [debug] [Thread-6 (]: SQL status: OK in 5.496 seconds
[0m22:48:38.349378 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:38.350425 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m22:48:38.372408 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:48:38.378913 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:38.380026 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m22:48:38.381539 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m22:48:38.385054 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:48:38.386049 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:38.386914 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m22:48:38.406452 [debug] [Thread-6 (]: SQL status: OK in 0.019 seconds
[0m22:48:38.411376 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m22:48:38.412299 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m22:48:38.422676 [debug] [Thread-6 (]: SQL status: OK in 0.009 seconds
[0m22:48:38.425465 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m22:48:38.426627 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd07db0a0>]}
[0m22:48:38.427786 [info ] [Thread-6 (]: 6 of 8 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 5.71s]
[0m22:48:38.428948 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m22:48:38.614334 [debug] [Thread-7 (]: SQL status: OK in 5.772 seconds
[0m22:48:38.619647 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:38.620559 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m22:48:38.622070 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:48:38.627061 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:38.627912 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m22:48:38.629287 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m22:48:38.632469 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:48:38.633290 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:38.634098 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: COMMIT
[0m22:48:38.647736 [debug] [Thread-7 (]: SQL status: OK in 0.013 seconds
[0m22:48:38.652604 [debug] [Thread-7 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m22:48:38.653540 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m22:48:38.661664 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m22:48:38.664251 [debug] [Thread-7 (]: On model.mta.total_riders_per_station: Close
[0m22:48:38.665248 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc4f4a4a0>]}
[0m22:48:38.666326 [info ] [Thread-7 (]: 7 of 8 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.94s]
[0m22:48:38.667515 [debug] [Thread-7 (]: Finished running node model.mta.total_riders_per_station
[0m22:48:39.069956 [debug] [Thread-5 (]: SQL status: OK in 6.235 seconds
[0m22:48:39.077826 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:39.078745 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m22:48:39.080377 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m22:48:39.086479 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:48:39.101863 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:39.102659 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m22:48:39.113777 [debug] [Thread-5 (]: SQL status: OK in 0.010 seconds
[0m22:48:39.118219 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m22:48:39.118892 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m22:48:39.119925 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m22:48:39.122061 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m22:48:39.122929 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc502c730>]}
[0m22:48:39.123914 [info ] [Thread-5 (]: 5 of 8 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 6.41s]
[0m22:48:39.124838 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m22:48:39.866433 [debug] [Thread-4 (]: SQL status: OK in 7.036 seconds
[0m22:48:39.869845 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:39.870316 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m22:48:39.871110 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m22:48:39.873786 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:39.874175 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m22:48:39.874916 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m22:48:39.876570 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:48:39.876944 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:39.877262 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m22:48:39.881539 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m22:48:39.884117 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m22:48:39.884535 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m22:48:39.887576 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m22:48:39.889056 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m22:48:39.947472 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '315c7f1f-b87c-405c-bf3a-8bad446f0cbb', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6db61e3d60>]}
[0m22:48:39.948490 [info ] [Thread-4 (]: 4 of 8 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 7.23s]
[0m22:48:39.949142 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m22:48:39.953997 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:39.954610 [debug] [MainThread]: On master: BEGIN
[0m22:48:39.955029 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m22:48:39.963394 [debug] [MainThread]: SQL status: OK in 0.008 seconds
[0m22:48:39.963926 [debug] [MainThread]: On master: COMMIT
[0m22:48:39.964279 [debug] [MainThread]: Using duckdb connection "master"
[0m22:48:39.964552 [debug] [MainThread]: On master: COMMIT
[0m22:48:39.965079 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m22:48:39.965398 [debug] [MainThread]: On master: Close
[0m22:48:39.968204 [debug] [MainThread]: Connection 'master' was properly closed.
[0m22:48:39.968600 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m22:48:39.968891 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m22:48:39.969116 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m22:48:39.969344 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m22:48:39.969560 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m22:48:39.969772 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m22:48:39.969996 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m22:48:39.970212 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m22:48:39.970650 [info ] [MainThread]: 
[0m22:48:39.971046 [info ] [MainThread]: Finished running 8 table models in 0 hours 0 minutes and 7.50 seconds (7.50s).
[0m22:48:39.972612 [debug] [MainThread]: Command end result
[0m22:48:40.002928 [info ] [MainThread]: 
[0m22:48:40.003531 [info ] [MainThread]: [32mCompleted successfully[0m
[0m22:48:40.003920 [info ] [MainThread]: 
[0m22:48:40.004283 [info ] [MainThread]: Done. PASS=8 WARN=0 ERROR=0 SKIP=0 TOTAL=8
[0m22:48:40.005149 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 8.230097, "process_user_time": 100.19788, "process_kernel_time": 2.148744, "process_mem_max_rss": "525092", "process_in_blocks": "552", "process_out_blocks": "13280"}
[0m22:48:40.005722 [debug] [MainThread]: Command `dbt run` succeeded at 22:48:40.005622 after 8.23 seconds
[0m22:48:40.006101 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd1e92fe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dc503f940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f6dd048ce80>]}
[0m22:48:40.006481 [debug] [MainThread]: Flushing usage events
[0m23:26:24.625696 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f134155efe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133fca4b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133fca4b80>]}


============================== 23:26:24.630898 | edd3c6db-5f60-466a-bccb-6034a31a9364 ==============================
[0m23:26:24.630898 [info ] [MainThread]: Running with dbt=1.8.7
[0m23:26:24.631490 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'introspect': 'True', 'static_parser': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m23:26:24.889325 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c8e5c90>]}
[0m23:26:24.944234 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133fb55b10>]}
[0m23:26:24.948186 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m23:26:24.958949 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m23:26:25.134660 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 0 files changed.
[0m23:26:25.135306 [debug] [MainThread]: Partial parsing: added file: mta://models/subway_station_stats.sql
[0m23:26:25.363569 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1334130130>]}
[0m23:26:25.453330 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f13340f76d0>]}
[0m23:26:25.453931 [info ] [MainThread]: Found 9 models, 8 sources, 416 macros
[0m23:26:25.454378 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f13340f7760>]}
[0m23:26:25.455974 [info ] [MainThread]: 
[0m23:26:25.456547 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m23:26:25.461228 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m23:26:25.558799 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m23:26:25.559236 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m23:26:25.559525 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m23:26:25.571676 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m23:26:25.572804 [debug] [ThreadPool]: On list_mtastats: Close
[0m23:26:25.575519 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m23:26:25.575944 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m23:26:25.580488 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m23:26:25.580829 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m23:26:25.581164 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:26:25.587692 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m23:26:25.588866 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m23:26:25.589235 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m23:26:25.589718 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m23:26:25.589974 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m23:26:25.590253 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m23:26:25.591613 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m23:26:25.592763 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m23:26:25.593302 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m23:26:25.593739 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m23:26:25.595303 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m23:26:25.595672 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m23:26:25.599135 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m23:26:25.603521 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m23:26:25.603864 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m23:26:25.604179 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m23:26:25.609735 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m23:26:25.610069 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m23:26:25.610399 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m23:26:25.627975 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m23:26:25.629273 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m23:26:25.631234 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m23:26:25.631626 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m23:26:25.635365 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1334156410>]}
[0m23:26:25.635860 [debug] [MainThread]: Using duckdb connection "master"
[0m23:26:25.636200 [debug] [MainThread]: On master: BEGIN
[0m23:26:25.636501 [debug] [MainThread]: Opening a new connection, currently in state init
[0m23:26:25.642616 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m23:26:25.642928 [debug] [MainThread]: On master: COMMIT
[0m23:26:25.643195 [debug] [MainThread]: Using duckdb connection "master"
[0m23:26:25.643460 [debug] [MainThread]: On master: COMMIT
[0m23:26:25.643873 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m23:26:25.644119 [debug] [MainThread]: On master: Close
[0m23:26:25.646279 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m23:26:25.646627 [info ] [MainThread]: 
[0m23:26:25.655328 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m23:26:25.656097 [info ] [Thread-1 (]: 1 of 9 START sql table model main.avg_riders_per_day ........................... [RUN]
[0m23:26:25.656696 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m23:26:25.657383 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m23:26:25.658595 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m23:26:25.659146 [debug] [Thread-4 (]: Began running node model.mta.fare_class_boro
[0m23:26:25.659723 [debug] [Thread-5 (]: Began running node model.mta.omny_adoption_by_station
[0m23:26:25.660442 [info ] [Thread-2 (]: 2 of 9 START sql table model main.busiest_specific_times ....................... [RUN]
[0m23:26:25.661147 [debug] [Thread-6 (]: Began running node model.mta.omny_adoption_increase
[0m23:26:25.661829 [info ] [Thread-3 (]: 3 of 9 START sql table model main.daily_ridership .............................. [RUN]
[0m23:26:25.662544 [debug] [Thread-7 (]: Began running node model.mta.subway_station_stats
[0m23:26:25.663034 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m23:26:25.663632 [info ] [Thread-4 (]: 4 of 9 START sql table model main.fare_class_boro .............................. [RUN]
[0m23:26:25.664196 [debug] [Thread-8 (]: Began running node model.mta.total_riders_per_station
[0m23:26:25.664818 [debug] [Thread-9 (]: Began running node model.mta.weekly_riders_per_station
[0m23:26:25.665429 [info ] [Thread-5 (]: 5 of 9 START sql table model main.omny_adoption_by_station ..................... [RUN]
[0m23:26:25.666489 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m23:26:25.667351 [info ] [Thread-6 (]: 6 of 9 START sql table model main.omny_adoption_increase ....................... [RUN]
[0m23:26:25.668214 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m23:26:25.668901 [info ] [Thread-7 (]: 7 of 9 START sql table model main.subway_station_stats ......................... [RUN]
[0m23:26:25.676077 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m23:26:25.681264 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m23:26:25.682140 [info ] [Thread-8 (]: 8 of 9 START sql table model main.total_riders_per_station ..................... [RUN]
[0m23:26:25.682885 [info ] [Thread-9 (]: 9 of 9 START sql table model main.weekly_riders_per_station .................... [RUN]
[0m23:26:25.683724 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.omny_adoption_by_station)
[0m23:26:25.684237 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m23:26:25.685089 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m23:26:25.685736 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m23:26:25.686476 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m23:26:25.687066 [debug] [Thread-4 (]: Began compiling node model.mta.fare_class_boro
[0m23:26:25.688559 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m23:26:25.689368 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m23:26:25.689858 [debug] [Thread-5 (]: Began compiling node model.mta.omny_adoption_by_station
[0m23:26:25.694494 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m23:26:25.695298 [debug] [Thread-6 (]: Began compiling node model.mta.omny_adoption_increase
[0m23:26:25.700604 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m23:26:25.701342 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m23:26:25.702252 [debug] [Thread-7 (]: Began compiling node model.mta.subway_station_stats
[0m23:26:25.705269 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m23:26:25.705895 [debug] [Thread-8 (]: Began compiling node model.mta.total_riders_per_station
[0m23:26:25.706566 [debug] [Thread-9 (]: Began compiling node model.mta.weekly_riders_per_station
[0m23:26:25.710282 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m23:26:25.713171 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m23:26:25.728348 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m23:26:25.731569 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m23:26:25.743784 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m23:26:25.754173 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m23:26:25.757401 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m23:26:25.760303 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m23:26:25.760930 [debug] [Thread-4 (]: Began executing node model.mta.fare_class_boro
[0m23:26:25.762179 [debug] [Thread-6 (]: Began executing node model.mta.omny_adoption_increase
[0m23:26:25.764795 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m23:26:25.765491 [debug] [Thread-5 (]: Began executing node model.mta.omny_adoption_by_station
[0m23:26:25.766026 [debug] [Thread-7 (]: Began executing node model.mta.subway_station_stats
[0m23:26:25.768885 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m23:26:25.772948 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m23:26:25.777075 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m23:26:25.777512 [debug] [Thread-8 (]: Began executing node model.mta.total_riders_per_station
[0m23:26:25.778474 [debug] [Thread-9 (]: Began executing node model.mta.weekly_riders_per_station
[0m23:26:25.781773 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m23:26:25.782276 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m23:26:25.784938 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m23:26:25.786647 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m23:26:25.792674 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m23:26:25.791859 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m23:26:25.793410 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m23:26:25.798205 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m23:26:25.799095 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m23:26:25.799727 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m23:26:25.800426 [debug] [Thread-4 (]: On model.mta.fare_class_boro: BEGIN
[0m23:26:25.801002 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m23:26:25.801736 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: BEGIN
[0m23:26:25.802345 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m23:26:25.802864 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m23:26:25.803511 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m23:26:25.804043 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m23:26:25.804552 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m23:26:25.805104 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m23:26:25.827918 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m23:26:25.829093 [debug] [Thread-7 (]: Using duckdb connection "model.mta.subway_station_stats"
[0m23:26:25.830109 [debug] [Thread-8 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m23:26:25.831033 [debug] [Thread-9 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m23:26:25.832200 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m23:26:25.832835 [debug] [Thread-7 (]: On model.mta.subway_station_stats: BEGIN
[0m23:26:25.833392 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: BEGIN
[0m23:26:25.834325 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: BEGIN
[0m23:26:25.834819 [debug] [Thread-1 (]: SQL status: OK in 0.032 seconds
[0m23:26:25.835435 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m23:26:25.835974 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m23:26:25.836607 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m23:26:25.837089 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m23:26:25.837939 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m23:26:25.838495 [debug] [Thread-4 (]: SQL status: OK in 0.035 seconds
[0m23:26:25.840404 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m23:26:25.841909 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m23:26:25.842843 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m23:26:25.844160 [debug] [Thread-2 (]: SQL status: OK in 0.040 seconds
[0m23:26:25.844644 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m23:26:25.845104 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m23:26:25.846740 [debug] [Thread-6 (]: SQL status: OK in 0.042 seconds
[0m23:26:25.847291 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m23:26:25.847874 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m23:26:25.850690 [debug] [Thread-3 (]: SQL status: OK in 0.046 seconds
[0m23:26:25.851298 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m23:26:25.852292 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m23:26:25.853358 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m23:26:25.853834 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m23:26:25.854476 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) * 100.0 / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) * 100.0 / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m23:26:25.860255 [debug] [Thread-7 (]: SQL status: OK in 0.024 seconds
[0m23:26:25.861423 [debug] [Thread-7 (]: Using duckdb connection "model.mta.subway_station_stats"
[0m23:26:25.862157 [debug] [Thread-7 (]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m23:26:25.865415 [debug] [Thread-8 (]: SQL status: OK in 0.029 seconds
[0m23:26:25.866042 [debug] [Thread-8 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m23:26:25.866616 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m23:26:25.867574 [debug] [Thread-9 (]: SQL status: OK in 0.030 seconds
[0m23:26:25.868110 [debug] [Thread-9 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m23:26:25.868580 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m23:26:26.344012 [debug] [Thread-3 (]: SQL status: OK in 0.491 seconds
[0m23:26:26.385968 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m23:26:26.387023 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m23:26:26.391505 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m23:26:26.447525 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m23:26:26.482211 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m23:26:26.483290 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m23:26:26.497019 [debug] [Thread-3 (]: SQL status: OK in 0.013 seconds
[0m23:26:26.514939 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m23:26:26.523283 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m23:26:26.525154 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m23:26:26.530137 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m23:26:26.535800 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f13415e7130>]}
[0m23:26:26.544029 [info ] [Thread-3 (]: 3 of 9 OK created sql table model main.daily_ridership ......................... [[32mOK[0m in 0.86s]
[0m23:26:26.546011 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m23:26:26.594283 [debug] [Thread-2 (]: SQL status: OK in 0.748 seconds
[0m23:26:26.602722 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m23:26:26.605242 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m23:26:26.613936 [debug] [Thread-2 (]: SQL status: OK in 0.007 seconds
[0m23:26:26.617922 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m23:26:26.618997 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m23:26:26.619540 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m23:26:26.624225 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m23:26:26.638917 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m23:26:26.639781 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m23:26:26.644066 [debug] [Thread-2 (]: SQL status: OK in 0.003 seconds
[0m23:26:26.649547 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m23:26:26.650533 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c849de0>]}
[0m23:26:26.651445 [info ] [Thread-2 (]: 2 of 9 OK created sql table model main.busiest_specific_times .................. [[32mOK[0m in 0.98s]
[0m23:26:26.652513 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m23:26:29.105275 [debug] [Thread-9 (]: SQL status: OK in 3.236 seconds
[0m23:26:29.120748 [debug] [Thread-9 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m23:26:29.121990 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m23:26:29.123398 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m23:26:29.126615 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m23:26:29.127412 [debug] [Thread-9 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m23:26:29.128077 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: COMMIT
[0m23:26:29.171997 [debug] [Thread-9 (]: SQL status: OK in 0.043 seconds
[0m23:26:29.176924 [debug] [Thread-9 (]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m23:26:29.177829 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m23:26:29.179249 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m23:26:29.182374 [debug] [Thread-9 (]: On model.mta.weekly_riders_per_station: Close
[0m23:26:29.183841 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c848ac0>]}
[0m23:26:29.185338 [info ] [Thread-9 (]: 9 of 9 OK created sql table model main.weekly_riders_per_station ............... [[32mOK[0m in 3.49s]
[0m23:26:29.188746 [debug] [Thread-9 (]: Finished running node model.mta.weekly_riders_per_station
[0m23:26:29.402757 [debug] [Thread-5 (]: SQL status: OK in 3.547 seconds
[0m23:26:29.409649 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m23:26:29.410575 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m23:26:29.415840 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m23:26:29.423257 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m23:26:29.433960 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m23:26:29.435170 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m23:26:29.449002 [debug] [Thread-5 (]: SQL status: OK in 0.013 seconds
[0m23:26:29.453775 [debug] [Thread-5 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m23:26:29.454587 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m23:26:29.455908 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m23:26:29.461051 [debug] [Thread-5 (]: On model.mta.omny_adoption_by_station: Close
[0m23:26:29.486043 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c84ace0>]}
[0m23:26:29.487833 [info ] [Thread-5 (]: 5 of 9 OK created sql table model main.omny_adoption_by_station ................ [[32mOK[0m in 3.80s]
[0m23:26:29.489074 [debug] [Thread-5 (]: Finished running node model.mta.omny_adoption_by_station
[0m23:26:31.375227 [debug] [Thread-8 (]: SQL status: OK in 5.508 seconds
[0m23:26:31.382781 [debug] [Thread-8 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m23:26:31.383706 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m23:26:31.385311 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m23:26:31.388046 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: COMMIT
[0m23:26:31.397276 [debug] [Thread-8 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m23:26:31.398073 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: COMMIT
[0m23:26:31.426536 [debug] [Thread-8 (]: SQL status: OK in 0.028 seconds
[0m23:26:31.430968 [debug] [Thread-8 (]: Using duckdb connection "model.mta.total_riders_per_station"
[0m23:26:31.431920 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m23:26:31.433094 [debug] [Thread-8 (]: SQL status: OK in 0.000 seconds
[0m23:26:31.435360 [debug] [Thread-8 (]: On model.mta.total_riders_per_station: Close
[0m23:26:31.436358 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f132d912e60>]}
[0m23:26:31.437410 [info ] [Thread-8 (]: 8 of 9 OK created sql table model main.total_riders_per_station ................ [[32mOK[0m in 5.75s]
[0m23:26:31.438536 [debug] [Thread-8 (]: Finished running node model.mta.total_riders_per_station
[0m23:26:35.430077 [debug] [Thread-4 (]: SQL status: OK in 9.586 seconds
[0m23:26:35.436241 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m23:26:35.437212 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m23:26:35.438569 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m23:26:35.441546 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m23:26:35.442691 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m23:26:35.443498 [debug] [Thread-4 (]: On model.mta.fare_class_boro: COMMIT
[0m23:26:35.481581 [debug] [Thread-4 (]: SQL status: OK in 0.010 seconds
[0m23:26:35.486226 [debug] [Thread-4 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m23:26:35.486962 [debug] [Thread-4 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m23:26:35.488076 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m23:26:35.490282 [debug] [Thread-4 (]: On model.mta.fare_class_boro: Close
[0m23:26:35.491248 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c84af80>]}
[0m23:26:35.492638 [info ] [Thread-4 (]: 4 of 9 OK created sql table model main.fare_class_boro ......................... [[32mOK[0m in 9.82s]
[0m23:26:35.493708 [debug] [Thread-4 (]: Finished running node model.mta.fare_class_boro
[0m23:26:35.902789 [debug] [Thread-6 (]: SQL status: OK in 10.054 seconds
[0m23:26:35.909391 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m23:26:35.910464 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m23:26:35.912027 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m23:26:35.915043 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m23:26:35.915850 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m23:26:35.916438 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: COMMIT
[0m23:26:35.951829 [debug] [Thread-6 (]: SQL status: OK in 0.035 seconds
[0m23:26:35.956523 [debug] [Thread-6 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m23:26:35.971816 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m23:26:35.973498 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m23:26:35.976436 [debug] [Thread-6 (]: On model.mta.omny_adoption_increase: Close
[0m23:26:35.977801 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c84add0>]}
[0m23:26:35.980496 [info ] [Thread-6 (]: 6 of 9 OK created sql table model main.omny_adoption_increase .................. [[32mOK[0m in 10.29s]
[0m23:26:35.981806 [debug] [Thread-6 (]: Finished running node model.mta.omny_adoption_increase
[0m23:26:36.404627 [debug] [Thread-7 (]: SQL status: OK in 10.541 seconds
[0m23:26:36.410276 [debug] [Thread-7 (]: Using duckdb connection "model.mta.subway_station_stats"
[0m23:26:36.411222 [debug] [Thread-7 (]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m23:26:36.413145 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m23:26:36.415347 [debug] [Thread-7 (]: On model.mta.subway_station_stats: COMMIT
[0m23:26:36.415930 [debug] [Thread-7 (]: Using duckdb connection "model.mta.subway_station_stats"
[0m23:26:36.416735 [debug] [Thread-7 (]: On model.mta.subway_station_stats: COMMIT
[0m23:26:36.423730 [debug] [Thread-7 (]: SQL status: OK in 0.006 seconds
[0m23:26:36.427675 [debug] [Thread-7 (]: Using duckdb connection "model.mta.subway_station_stats"
[0m23:26:36.428240 [debug] [Thread-7 (]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m23:26:36.429383 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m23:26:36.432345 [debug] [Thread-7 (]: On model.mta.subway_station_stats: Close
[0m23:26:36.433111 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f132d902260>]}
[0m23:26:36.433962 [info ] [Thread-7 (]: 7 of 9 OK created sql table model main.subway_station_stats .................... [[32mOK[0m in 10.75s]
[0m23:26:36.434767 [debug] [Thread-7 (]: Finished running node model.mta.subway_station_stats
[0m23:26:36.477923 [debug] [Thread-1 (]: SQL status: OK in 10.635 seconds
[0m23:26:36.481350 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m23:26:36.481823 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m23:26:36.484085 [debug] [Thread-1 (]: SQL status: OK in 0.002 seconds
[0m23:26:36.486045 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m23:26:36.486469 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m23:26:36.486811 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m23:26:36.491965 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m23:26:36.494340 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m23:26:36.494709 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m23:26:36.495348 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m23:26:36.496521 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m23:26:36.570570 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'edd3c6db-5f60-466a-bccb-6034a31a9364', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f133c84b820>]}
[0m23:26:36.571614 [info ] [Thread-1 (]: 1 of 9 OK created sql table model main.avg_riders_per_day ...................... [[32mOK[0m in 10.91s]
[0m23:26:36.572288 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m23:26:36.575348 [debug] [MainThread]: Using duckdb connection "master"
[0m23:26:36.575724 [debug] [MainThread]: On master: BEGIN
[0m23:26:36.576007 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m23:26:36.582639 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m23:26:36.583140 [debug] [MainThread]: On master: COMMIT
[0m23:26:36.583444 [debug] [MainThread]: Using duckdb connection "master"
[0m23:26:36.583701 [debug] [MainThread]: On master: COMMIT
[0m23:26:36.584361 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m23:26:36.584729 [debug] [MainThread]: On master: Close
[0m23:26:36.587307 [debug] [MainThread]: Connection 'master' was properly closed.
[0m23:26:36.587677 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m23:26:36.587959 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m23:26:36.588201 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m23:26:36.588477 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m23:26:36.588715 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m23:26:36.588930 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m23:26:36.589147 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m23:26:36.589402 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m23:26:36.589636 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m23:26:36.590117 [info ] [MainThread]: 
[0m23:26:36.590578 [info ] [MainThread]: Finished running 9 table models in 0 hours 0 minutes and 11.13 seconds (11.13s).
[0m23:26:36.592230 [debug] [MainThread]: Command end result
[0m23:26:36.620842 [info ] [MainThread]: 
[0m23:26:36.621452 [info ] [MainThread]: [32mCompleted successfully[0m
[0m23:26:36.621867 [info ] [MainThread]: 
[0m23:26:36.622199 [info ] [MainThread]: Done. PASS=9 WARN=0 ERROR=0 SKIP=0 TOTAL=9
[0m23:26:36.624378 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 12.045406, "process_user_time": 144.26456, "process_kernel_time": 5.840406, "process_mem_max_rss": "735588", "process_in_blocks": "673392", "process_out_blocks": "13936"}
[0m23:26:36.625056 [debug] [MainThread]: Command `dbt run` succeeded at 23:26:36.624941 after 12.05 seconds
[0m23:26:36.625467 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f134155efe0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1340893b20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f132d998910>]}
[0m23:26:36.625919 [debug] [MainThread]: Flushing usage events
[0m17:26:53.281042 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189f01af80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d760cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d760d30>]}


============================== 17:26:53.288036 | 6dae5303-0c49-465e-a684-9c54dc812cd3 ==============================
[0m17:26:53.288036 [info ] [MainThread]: Running with dbt=1.8.7
[0m17:26:53.288465 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'warn_error': 'None', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m17:26:53.494531 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d5bb430>]}
[0m17:26:53.541698 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189dd40550>]}
[0m17:26:53.545676 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m17:26:53.556917 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m17:26:53.699496 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 3 files added, 1 files changed.
[0m17:26:53.700093 [debug] [MainThread]: Partial parsing: added file: mta://models/labor_expenses_per_agency.sql
[0m17:26:53.700447 [debug] [MainThread]: Partial parsing: added file: mta://models/expense_type_per_year.sql
[0m17:26:53.700749 [debug] [MainThread]: Partial parsing: added file: mta://models/2023_largest_expense_differences.sql
[0m17:26:53.701057 [debug] [MainThread]: Partial parsing: updated file: mta://models/omny_adoption_by_station.sql
[0m17:26:53.906276 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18921dc100>]}
[0m17:26:53.993189 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18923ced70>]}
[0m17:26:53.993707 [info ] [MainThread]: Found 12 models, 8 sources, 416 macros
[0m17:26:53.994035 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189239efe0>]}
[0m17:26:53.995801 [info ] [MainThread]: 
[0m17:26:53.996312 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m17:26:54.000674 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m17:26:54.161687 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m17:26:54.162192 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m17:26:54.162493 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m17:26:54.193861 [debug] [ThreadPool]: SQL status: OK in 0.031 seconds
[0m17:26:54.195354 [debug] [ThreadPool]: On list_mtastats: Close
[0m17:26:54.198526 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m17:26:54.198908 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m17:26:54.203375 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:26:54.203715 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m17:26:54.203976 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:26:54.212183 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m17:26:54.213149 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:26:54.213394 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m17:26:54.213863 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:26:54.214197 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:26:54.214524 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m17:26:54.215014 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:26:54.215544 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:26:54.215764 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:26:54.216096 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:26:54.216618 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:26:54.216859 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m17:26:54.219519 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m17:26:54.223436 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:26:54.223713 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m17:26:54.223959 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:26:54.229332 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m17:26:54.229604 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:26:54.229853 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m17:26:54.244372 [debug] [ThreadPool]: SQL status: OK in 0.014 seconds
[0m17:26:54.245497 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m17:26:54.248077 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m17:26:54.248370 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m17:26:54.251914 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189f303400>]}
[0m17:26:54.252267 [debug] [MainThread]: Using duckdb connection "master"
[0m17:26:54.252504 [debug] [MainThread]: On master: BEGIN
[0m17:26:54.252726 [debug] [MainThread]: Opening a new connection, currently in state init
[0m17:26:54.257450 [debug] [MainThread]: SQL status: OK in 0.005 seconds
[0m17:26:54.257711 [debug] [MainThread]: On master: COMMIT
[0m17:26:54.257942 [debug] [MainThread]: Using duckdb connection "master"
[0m17:26:54.258132 [debug] [MainThread]: On master: COMMIT
[0m17:26:54.258488 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:26:54.258702 [debug] [MainThread]: On master: Close
[0m17:26:54.260429 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m17:26:54.260830 [info ] [MainThread]: 
[0m17:26:54.270844 [debug] [Thread-1 (]: Began running node model.mta.2023_largest_expense_differences
[0m17:26:54.271498 [debug] [Thread-2 (]: Began running node model.mta.avg_riders_per_day
[0m17:26:54.272083 [info ] [Thread-1 (]: 1 of 12 START sql table model main.2023_largest_expense_differences ............ [RUN]
[0m17:26:54.272767 [info ] [Thread-2 (]: 2 of 12 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m17:26:54.273775 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.2023_largest_expense_differences'
[0m17:26:54.274235 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m17:26:54.274781 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m17:26:54.275268 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m17:26:54.275836 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m17:26:54.276397 [debug] [Thread-1 (]: Began compiling node model.mta.2023_largest_expense_differences
[0m17:26:54.276872 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m17:26:54.277531 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m17:26:54.278251 [info ] [Thread-3 (]: 3 of 12 START sql table model main.busiest_specific_times ...................... [RUN]
[0m17:26:54.279072 [debug] [Thread-8 (]: Began running node model.mta.omny_adoption_by_station
[0m17:26:54.279748 [info ] [Thread-4 (]: 4 of 12 START sql table model main.daily_ridership ............................. [RUN]
[0m17:26:54.280714 [debug] [Thread-2 (]: Began compiling node model.mta.avg_riders_per_day
[0m17:26:54.281507 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_increase
[0m17:26:54.282766 [debug] [Thread-10 ]: Began running node model.mta.subway_station_stats
[0m17:26:54.332585 [debug] [Thread-11 ]: Began running node model.mta.total_riders_per_station
[0m17:26:54.334222 [debug] [Thread-12 ]: Began running node model.mta.weekly_riders_per_station
[0m17:26:54.333543 [info ] [Thread-5 (]: 5 of 12 START sql table model main.expense_type_per_year ....................... [RUN]
[0m17:26:54.346377 [info ] [Thread-6 (]: 6 of 12 START sql table model main.fare_class_boro ............................. [RUN]
[0m17:26:54.347810 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.2023_largest_expense_differences"
[0m17:26:54.348485 [info ] [Thread-7 (]: 7 of 12 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m17:26:54.349624 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m17:26:54.350757 [info ] [Thread-8 (]: 8 of 12 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m17:26:54.351999 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m17:26:54.355375 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m17:26:54.356669 [info ] [Thread-9 (]: 9 of 12 START sql table model main.omny_adoption_increase ...................... [RUN]
[0m17:26:54.357710 [info ] [Thread-10 ]: 10 of 12 START sql table model main.subway_station_stats ....................... [RUN]
[0m17:26:54.358383 [info ] [Thread-11 ]: 11 of 12 START sql table model main.total_riders_per_station ................... [RUN]
[0m17:26:54.359111 [info ] [Thread-12 ]: 12 of 12 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m17:26:54.359871 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m17:26:54.360456 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m17:26:54.361274 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m17:26:54.361985 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m17:26:54.362470 [debug] [Thread-1 (]: Began executing node model.mta.2023_largest_expense_differences
[0m17:26:54.363341 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m17:26:54.363900 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m17:26:54.364788 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m17:26:54.365509 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m17:26:54.366282 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m17:26:54.366920 [debug] [Thread-2 (]: Began executing node model.mta.avg_riders_per_day
[0m17:26:54.367506 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m17:26:54.368061 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m17:26:54.368556 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m17:26:54.369161 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m17:26:54.376486 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m17:26:54.394999 [debug] [Thread-8 (]: Began compiling node model.mta.omny_adoption_by_station
[0m17:26:54.413079 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.2023_largest_expense_differences"
[0m17:26:54.417989 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m17:26:54.418575 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_increase
[0m17:26:54.419062 [debug] [Thread-10 ]: Began compiling node model.mta.subway_station_stats
[0m17:26:54.419468 [debug] [Thread-11 ]: Began compiling node model.mta.total_riders_per_station
[0m17:26:54.422327 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m17:26:54.422884 [debug] [Thread-12 ]: Began compiling node model.mta.weekly_riders_per_station
[0m17:26:54.424697 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m17:26:54.428820 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m17:26:54.431951 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m17:26:54.434351 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m17:26:54.438050 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m17:26:54.438592 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m17:26:54.439229 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:26:54.445457 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m17:26:54.446206 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m17:26:54.449803 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m17:26:54.450493 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:26:54.452720 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m17:26:54.458040 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m17:26:54.459844 [debug] [Thread-8 (]: Began executing node model.mta.omny_adoption_by_station
[0m17:26:54.460500 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m17:26:54.461225 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m17:26:54.461996 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m17:26:54.462505 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: BEGIN
[0m17:26:54.466888 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m17:26:54.467489 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_increase
[0m17:26:54.468396 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: BEGIN
[0m17:26:54.468785 [debug] [Thread-10 ]: Began executing node model.mta.subway_station_stats
[0m17:26:54.469590 [debug] [Thread-11 ]: Began executing node model.mta.total_riders_per_station
[0m17:26:54.473622 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m17:26:54.474551 [debug] [Thread-12 ]: Began executing node model.mta.weekly_riders_per_station
[0m17:26:54.476142 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:26:54.481327 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m17:26:54.484453 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m17:26:54.487019 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m17:26:54.487459 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m17:26:54.490969 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m17:26:54.491499 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m17:26:54.491902 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:26:54.495536 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m17:26:54.499435 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m17:26:54.502203 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m17:26:54.502800 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m17:26:54.503184 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:26:54.510100 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:26:54.511654 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:26:54.512141 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:26:54.512853 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m17:26:54.513223 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:26:54.514802 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:26:54.515255 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:26:54.515703 [debug] [Thread-1 (]: SQL status: OK in 0.028 seconds
[0m17:26:54.516368 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m17:26:54.516897 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m17:26:54.517405 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m17:26:54.517800 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m17:26:54.518248 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m17:26:54.518810 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m17:26:54.519404 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: BEGIN
[0m17:26:54.520078 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:26:54.520484 [debug] [Thread-10 ]: On model.mta.subway_station_stats: BEGIN
[0m17:26:54.520979 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: BEGIN
[0m17:26:54.521669 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:26:54.522652 [debug] [Thread-2 (]: SQL status: OK in 0.031 seconds
[0m17:26:54.523108 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m17:26:54.523580 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m17:26:54.524006 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m17:26:54.524504 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m17:26:54.525099 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m17:26:54.525534 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m17:26:54.526430 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m17:26:54.526979 [debug] [Thread-3 (]: SQL status: OK in 0.011 seconds
[0m17:26:54.527384 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m17:26:54.527824 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.2023_largest_expense_differences"} */

  
    
    

    create  table
      "mtastats"."main"."2023_largest_expense_differences__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank;
    );
  
  
[0m17:26:54.528277 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:26:54.530145 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m17:26:54.530906 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:26:54.553525 [debug] [Thread-1 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.2023_largest_expense_differences"} */

  
    
    

    create  table
      "mtastats"."main"."2023_largest_expense_differences__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank;
    );
  
  
[0m17:26:54.554101 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:26:54.554919 [debug] [Thread-4 (]: SQL status: OK in 0.036 seconds
[0m17:26:54.555584 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:26:54.556709 [debug] [Thread-1 (]: DuckDB adapter: Rolling back transaction.
[0m17:26:54.557153 [debug] [Thread-8 (]: SQL status: OK in 0.034 seconds
[0m17:26:54.558491 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:26:54.559795 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: ROLLBACK
[0m17:26:54.560675 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:26:54.561093 [debug] [Thread-5 (]: SQL status: OK in 0.038 seconds
[0m17:26:54.561973 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m17:26:54.562563 [debug] [Thread-7 (]: SQL status: OK in 0.039 seconds
[0m17:26:54.564923 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m17:26:54.567251 [debug] [Thread-6 (]: SQL status: OK in 0.043 seconds
[0m17:26:54.567742 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:26:54.569953 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:26:54.572202 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:26:54.573977 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m17:26:54.574719 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m17:26:54.576232 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:26:54.577493 [debug] [Thread-9 (]: SQL status: OK in 0.052 seconds
[0m17:26:54.580320 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:26:54.580899 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m17:26:54.584107 [debug] [Thread-10 ]: SQL status: OK in 0.058 seconds
[0m17:26:54.589099 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:26:54.590179 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m17:26:54.597429 [debug] [Thread-11 ]: SQL status: OK in 0.070 seconds
[0m17:26:54.599291 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:26:54.605457 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:26:54.606657 [debug] [Thread-1 (]: Failed to rollback 'model.mta.2023_largest_expense_differences'
[0m17:26:54.607472 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: Close
[0m17:26:54.608783 [debug] [Thread-1 (]: Runtime Error in model 2023_largest_expense_differences (models/2023_largest_expense_differences.sql)
  Parser Error: syntax error at or near ";"
[0m17:26:54.611109 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1883384bb0>]}
[0m17:26:54.611865 [error] [Thread-1 (]: 1 of 12 ERROR creating sql table model main.2023_largest_expense_differences ... [[31mERROR[0m in 0.34s]
[0m17:26:54.612590 [debug] [Thread-1 (]: Finished running node model.mta.2023_largest_expense_differences
[0m17:26:54.616526 [debug] [Thread-12 ]: SQL status: OK in 0.086 seconds
[0m17:26:54.616961 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:26:54.617359 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m17:26:54.786984 [debug] [Thread-5 (]: SQL status: OK in 0.210 seconds
[0m17:26:54.804842 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:26:54.807463 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m17:26:54.809827 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m17:26:54.864991 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:26:54.865775 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:26:54.866444 [debug] [Thread-7 (]: SQL status: OK in 0.288 seconds
[0m17:26:54.867118 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:26:54.872227 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:26:54.873447 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m17:26:54.875288 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m17:26:54.877385 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:26:54.878378 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:26:54.879324 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:26:54.883913 [debug] [Thread-5 (]: SQL status: OK in 0.011 seconds
[0m17:26:54.907882 [debug] [Thread-7 (]: SQL status: OK in 0.028 seconds
[0m17:26:54.909051 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:26:54.915379 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m17:26:54.920973 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:26:54.922880 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m17:26:54.927979 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m17:26:54.934205 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m17:26:54.935090 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18922436a0>]}
[0m17:26:54.936083 [info ] [Thread-5 (]: 5 of 12 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.58s]
[0m17:26:54.936948 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m17:26:54.937842 [debug] [Thread-7 (]: SQL status: OK in 0.014 seconds
[0m17:26:54.941611 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m17:26:54.943365 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1892226830>]}
[0m17:26:54.944783 [info ] [Thread-7 (]: 7 of 12 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.58s]
[0m17:26:54.947542 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m17:26:54.984305 [debug] [Thread-4 (]: SQL status: OK in 0.415 seconds
[0m17:26:54.998039 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:26:55.001640 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m17:26:55.002844 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m17:26:55.006987 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m17:26:55.011305 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:26:55.013000 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m17:26:55.029195 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m17:26:55.053665 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:26:55.054378 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m17:26:55.058544 [debug] [Thread-4 (]: SQL status: OK in 0.004 seconds
[0m17:26:55.063096 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m17:26:55.064006 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1892241e40>]}
[0m17:26:55.065050 [info ] [Thread-4 (]: 4 of 12 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.71s]
[0m17:26:55.066460 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m17:26:56.365267 [debug] [Thread-3 (]: SQL status: OK in 1.805 seconds
[0m17:26:56.390214 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:26:56.394157 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m17:26:56.397609 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:26:56.403862 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:26:56.404750 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:26:56.405389 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:26:56.416956 [debug] [Thread-3 (]: SQL status: OK in 0.011 seconds
[0m17:26:56.420938 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:26:56.421939 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m17:26:56.423421 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:26:56.425632 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m17:26:56.426865 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d7ca290>]}
[0m17:26:56.427922 [info ] [Thread-3 (]: 3 of 12 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 2.08s]
[0m17:26:56.430240 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m17:26:58.947698 [debug] [Thread-2 (]: SQL status: OK in 4.389 seconds
[0m17:26:58.955518 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:26:58.956483 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m17:26:58.963159 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:26:58.966499 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:26:58.967399 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:26:58.983983 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:26:59.003481 [debug] [Thread-2 (]: SQL status: OK in 0.018 seconds
[0m17:26:59.008096 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:26:59.019395 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m17:26:59.020922 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m17:26:59.024358 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: Close
[0m17:26:59.029288 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d697d60>]}
[0m17:26:59.031660 [info ] [Thread-2 (]: 2 of 12 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 4.75s]
[0m17:26:59.033110 [debug] [Thread-2 (]: Finished running node model.mta.avg_riders_per_day
[0m17:27:01.682801 [debug] [Thread-6 (]: SQL status: OK in 7.103 seconds
[0m17:27:01.709899 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:01.711474 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m17:27:01.713421 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m17:27:01.718299 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m17:27:01.720015 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:01.721244 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m17:27:01.732387 [debug] [Thread-6 (]: SQL status: OK in 0.010 seconds
[0m17:27:01.738401 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:01.749138 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m17:27:01.751235 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m17:27:01.772043 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m17:27:01.774154 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18922427d0>]}
[0m17:27:01.776365 [info ] [Thread-6 (]: 6 of 12 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 7.41s]
[0m17:27:01.783785 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m17:27:02.525321 [debug] [Thread-11 ]: SQL status: OK in 7.918 seconds
[0m17:27:02.542939 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:02.544407 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m17:27:02.545939 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:27:02.556499 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:27:02.558199 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:02.609257 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:27:02.629907 [debug] [Thread-11 ]: SQL status: OK in 0.020 seconds
[0m17:27:02.635137 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:02.636534 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m17:27:02.637724 [debug] [Thread-11 ]: SQL status: OK in 0.000 seconds
[0m17:27:02.640073 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: Close
[0m17:27:02.652423 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1892225f90>]}
[0m17:27:02.655769 [info ] [Thread-11 ]: 11 of 12 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 8.29s]
[0m17:27:02.662669 [debug] [Thread-11 ]: Finished running node model.mta.total_riders_per_station
[0m17:27:02.779118 [debug] [Thread-9 (]: SQL status: OK in 8.196 seconds
[0m17:27:02.790859 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:02.791706 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m17:27:02.794316 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m17:27:02.800825 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:27:02.804927 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:02.805659 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:27:02.850650 [debug] [Thread-9 (]: SQL status: OK in 0.044 seconds
[0m17:27:02.858853 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:02.860040 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m17:27:02.861242 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m17:27:02.863506 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: Close
[0m17:27:02.864434 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18229f8070>]}
[0m17:27:02.865482 [info ] [Thread-9 (]: 9 of 12 OK created sql table model main.omny_adoption_increase ................. [[32mOK[0m in 8.50s]
[0m17:27:02.866475 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_increase
[0m17:27:03.156867 [debug] [Thread-12 ]: SQL status: OK in 8.539 seconds
[0m17:27:03.162108 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:03.163097 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m17:27:03.164399 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:27:03.169934 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:27:03.189399 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:03.190189 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:27:03.235331 [debug] [Thread-12 ]: SQL status: OK in 0.044 seconds
[0m17:27:03.240992 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:03.245172 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m17:27:03.247711 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:27:03.250776 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: Close
[0m17:27:03.253041 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18922406d0>]}
[0m17:27:03.254373 [info ] [Thread-12 ]: 12 of 12 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 8.89s]
[0m17:27:03.261699 [debug] [Thread-12 ]: Finished running node model.mta.weekly_riders_per_station
[0m17:27:05.980175 [debug] [Thread-8 (]: SQL status: OK in 11.409 seconds
[0m17:27:05.983398 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:05.983891 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m17:27:05.991199 [debug] [Thread-8 (]: SQL status: OK in 0.007 seconds
[0m17:27:05.992992 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:27:05.993392 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:05.993812 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:27:05.998994 [debug] [Thread-8 (]: SQL status: OK in 0.005 seconds
[0m17:27:06.001454 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:06.001909 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m17:27:06.002764 [debug] [Thread-8 (]: SQL status: OK in 0.000 seconds
[0m17:27:06.004146 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: Close
[0m17:27:06.004789 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189d7445e0>]}
[0m17:27:06.005547 [info ] [Thread-8 (]: 8 of 12 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 11.64s]
[0m17:27:06.006274 [debug] [Thread-8 (]: Finished running node model.mta.omny_adoption_by_station
[0m17:27:06.168223 [debug] [Thread-10 ]: SQL status: OK in 11.576 seconds
[0m17:27:06.171755 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:06.172253 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m17:27:06.173146 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:27:06.175046 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:27:06.175698 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:06.176087 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:27:06.181564 [debug] [Thread-10 ]: SQL status: OK in 0.005 seconds
[0m17:27:06.183993 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:06.184394 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m17:27:06.185115 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m17:27:06.186335 [debug] [Thread-10 ]: On model.mta.subway_station_stats: Close
[0m17:27:06.329338 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '6dae5303-0c49-465e-a684-9c54dc812cd3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f1892227df0>]}
[0m17:27:06.330068 [info ] [Thread-10 ]: 10 of 12 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 11.96s]
[0m17:27:06.330639 [debug] [Thread-10 ]: Finished running node model.mta.subway_station_stats
[0m17:27:06.336140 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:06.336570 [debug] [MainThread]: On master: BEGIN
[0m17:27:06.336861 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m17:27:06.345554 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m17:27:06.346080 [debug] [MainThread]: On master: COMMIT
[0m17:27:06.346387 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:06.346660 [debug] [MainThread]: On master: COMMIT
[0m17:27:06.347482 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:27:06.347920 [debug] [MainThread]: On master: Close
[0m17:27:06.354176 [debug] [MainThread]: Connection 'master' was properly closed.
[0m17:27:06.354802 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m17:27:06.355147 [debug] [MainThread]: Connection 'model.mta.2023_largest_expense_differences' was properly closed.
[0m17:27:06.355387 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m17:27:06.355616 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m17:27:06.355834 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m17:27:06.356039 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m17:27:06.356257 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m17:27:06.356470 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m17:27:06.356690 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m17:27:06.356929 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m17:27:06.357153 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m17:27:06.357368 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m17:27:06.358454 [info ] [MainThread]: 
[0m17:27:06.359153 [info ] [MainThread]: Finished running 12 table models in 0 hours 0 minutes and 12.36 seconds (12.36s).
[0m17:27:06.361321 [debug] [MainThread]: Command end result
[0m17:27:06.394780 [info ] [MainThread]: 
[0m17:27:06.395990 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m17:27:06.396346 [info ] [MainThread]: 
[0m17:27:06.396784 [error] [MainThread]:   Runtime Error in model 2023_largest_expense_differences (models/2023_largest_expense_differences.sql)
  Parser Error: syntax error at or near ";"
[0m17:27:06.397132 [info ] [MainThread]: 
[0m17:27:06.397457 [info ] [MainThread]: Done. PASS=11 WARN=0 ERROR=1 SKIP=0 TOTAL=12
[0m17:27:06.399621 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 13.168735, "process_user_time": 151.39453, "process_kernel_time": 14.008176, "process_mem_max_rss": "698684", "process_in_blocks": "1158072", "process_out_blocks": "15224", "command_success": false}
[0m17:27:06.400268 [debug] [MainThread]: Command `dbt run` failed at 17:27:06.400170 after 13.17 seconds
[0m17:27:06.400654 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189f01af80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f189f0a31c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f18229cd8d0>]}
[0m17:27:06.401011 [debug] [MainThread]: Flushing usage events
[0m17:27:10.027830 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d1dbf010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d051b490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d051b430>]}


============================== 17:27:10.030040 | a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4 ==============================
[0m17:27:10.030040 [info ] [MainThread]: Running with dbt=1.8.7
[0m17:27:10.030484 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m17:27:10.220098 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d1e81bd0>]}
[0m17:27:10.275977 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d0434ee0>]}
[0m17:27:10.278752 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m17:27:10.286946 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m17:27:10.369220 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m17:27:10.369906 [debug] [MainThread]: Partial parsing: updated file: mta://models/2023_largest_expense_differences.sql
[0m17:27:10.586748 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4edc130>]}
[0m17:27:10.649555 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4ee08b0>]}
[0m17:27:10.650052 [info ] [MainThread]: Found 12 models, 8 sources, 416 macros
[0m17:27:10.650408 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c51551b0>]}
[0m17:27:10.652244 [info ] [MainThread]: 
[0m17:27:10.652806 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m17:27:10.657520 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m17:27:10.733359 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m17:27:10.733831 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m17:27:10.734141 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m17:27:10.745753 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m17:27:10.746912 [debug] [ThreadPool]: On list_mtastats: Close
[0m17:27:10.750235 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m17:27:10.750738 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m17:27:10.755625 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:27:10.755967 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m17:27:10.756224 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:27:10.762920 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m17:27:10.764138 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:27:10.764466 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m17:27:10.764879 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:27:10.765137 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:27:10.765368 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m17:27:10.765883 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:27:10.766552 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:27:10.766807 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:27:10.767029 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:27:10.767450 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:27:10.767729 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m17:27:10.772853 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m17:27:10.777428 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:27:10.777755 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m17:27:10.778029 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:27:10.784700 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m17:27:10.785112 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:27:10.785375 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m17:27:10.805561 [debug] [ThreadPool]: SQL status: OK in 0.020 seconds
[0m17:27:10.810223 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m17:27:10.810881 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m17:27:10.811220 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m17:27:10.816125 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d20a9de0>]}
[0m17:27:10.816587 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:10.816851 [debug] [MainThread]: On master: BEGIN
[0m17:27:10.817084 [debug] [MainThread]: Opening a new connection, currently in state init
[0m17:27:10.823720 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m17:27:10.824111 [debug] [MainThread]: On master: COMMIT
[0m17:27:10.824381 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:10.824625 [debug] [MainThread]: On master: COMMIT
[0m17:27:10.825021 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:27:10.825318 [debug] [MainThread]: On master: Close
[0m17:27:10.827363 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m17:27:10.827732 [info ] [MainThread]: 
[0m17:27:10.837603 [debug] [Thread-1 (]: Began running node model.mta.2023_largest_expense_differences
[0m17:27:10.838208 [info ] [Thread-1 (]: 1 of 12 START sql table model main.2023_largest_expense_differences ............ [RUN]
[0m17:27:10.838670 [debug] [Thread-2 (]: Began running node model.mta.avg_riders_per_day
[0m17:27:10.839576 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.2023_largest_expense_differences'
[0m17:27:10.840139 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m17:27:10.840764 [info ] [Thread-2 (]: 2 of 12 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m17:27:10.841313 [debug] [Thread-1 (]: Began compiling node model.mta.2023_largest_expense_differences
[0m17:27:10.841722 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m17:27:10.842237 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m17:27:10.842749 [info ] [Thread-3 (]: 3 of 12 START sql table model main.busiest_specific_times ...................... [RUN]
[0m17:27:10.843728 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m17:27:10.844289 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m17:27:10.845089 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m17:27:10.851546 [debug] [Thread-8 (]: Began running node model.mta.omny_adoption_by_station
[0m17:27:10.854517 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.2023_largest_expense_differences"
[0m17:27:10.855154 [info ] [Thread-4 (]: 4 of 12 START sql table model main.daily_ridership ............................. [RUN]
[0m17:27:10.856166 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_increase
[0m17:27:10.856955 [info ] [Thread-5 (]: 5 of 12 START sql table model main.expense_type_per_year ....................... [RUN]
[0m17:27:10.857589 [debug] [Thread-10 ]: Began running node model.mta.subway_station_stats
[0m17:27:10.858270 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m17:27:10.858726 [debug] [Thread-11 ]: Began running node model.mta.total_riders_per_station
[0m17:27:10.859264 [debug] [Thread-2 (]: Began compiling node model.mta.avg_riders_per_day
[0m17:27:10.859755 [debug] [Thread-12 ]: Began running node model.mta.weekly_riders_per_station
[0m17:27:10.860482 [info ] [Thread-6 (]: 6 of 12 START sql table model main.fare_class_boro ............................. [RUN]
[0m17:27:10.861132 [info ] [Thread-7 (]: 7 of 12 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m17:27:10.861892 [info ] [Thread-8 (]: 8 of 12 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m17:27:10.863333 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m17:27:10.864874 [info ] [Thread-9 (]: 9 of 12 START sql table model main.omny_adoption_increase ...................... [RUN]
[0m17:27:10.866008 [debug] [Thread-1 (]: Began executing node model.mta.2023_largest_expense_differences
[0m17:27:10.867542 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m17:27:10.868395 [info ] [Thread-10 ]: 10 of 12 START sql table model main.subway_station_stats ....................... [RUN]
[0m17:27:10.869117 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m17:27:10.869961 [info ] [Thread-11 ]: 11 of 12 START sql table model main.total_riders_per_station ................... [RUN]
[0m17:27:10.873869 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m17:27:10.874685 [info ] [Thread-12 ]: 12 of 12 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m17:27:10.875396 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m17:27:10.876099 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m17:27:10.876704 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m17:27:10.877289 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m17:27:10.877874 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m17:27:10.889864 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m17:27:10.913036 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m17:27:10.914006 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.2023_largest_expense_differences"
[0m17:27:10.917570 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m17:27:10.918392 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m17:27:10.919356 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m17:27:10.919923 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m17:27:10.920560 [debug] [Thread-2 (]: Began executing node model.mta.avg_riders_per_day
[0m17:27:10.921024 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m17:27:10.921537 [debug] [Thread-8 (]: Began compiling node model.mta.omny_adoption_by_station
[0m17:27:10.926017 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m17:27:10.926709 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_increase
[0m17:27:10.929457 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m17:27:10.930116 [debug] [Thread-10 ]: Began compiling node model.mta.subway_station_stats
[0m17:27:10.931327 [debug] [Thread-11 ]: Began compiling node model.mta.total_riders_per_station
[0m17:27:10.931807 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:27:10.932474 [debug] [Thread-12 ]: Began compiling node model.mta.weekly_riders_per_station
[0m17:27:10.932835 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m17:27:10.935623 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m17:27:10.938778 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m17:27:10.941576 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m17:27:10.943975 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m17:27:10.946403 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m17:27:10.947164 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m17:27:10.950475 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m17:27:10.952637 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m17:27:10.953127 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m17:27:10.953646 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: BEGIN
[0m17:27:10.955799 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m17:27:10.958591 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m17:27:10.960747 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m17:27:10.961152 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m17:27:10.964517 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m17:27:10.965077 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:10.966223 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_increase
[0m17:27:10.967064 [debug] [Thread-8 (]: Began executing node model.mta.omny_adoption_by_station
[0m17:27:10.970140 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m17:27:10.970939 [debug] [Thread-10 ]: Began executing node model.mta.subway_station_stats
[0m17:27:10.971436 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m17:27:10.971813 [debug] [Thread-11 ]: Began executing node model.mta.total_riders_per_station
[0m17:27:10.975320 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m17:27:10.979342 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m17:27:10.979933 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:10.980432 [debug] [Thread-12 ]: Began executing node model.mta.weekly_riders_per_station
[0m17:27:10.981011 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: BEGIN
[0m17:27:10.984156 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m17:27:10.987094 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m17:27:10.987650 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:10.990515 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m17:27:10.999898 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m17:27:11.001127 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.002505 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m17:27:11.003045 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.006168 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m17:27:11.006670 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:11.007230 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m17:27:11.007806 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m17:27:11.008717 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:11.009202 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:11.010028 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m17:27:11.010907 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:11.011550 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:11.012559 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m17:27:11.013050 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m17:27:11.013563 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m17:27:11.014828 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m17:27:11.015404 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:11.015821 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:27:11.016637 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: BEGIN
[0m17:27:11.017326 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m17:27:11.018037 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m17:27:11.018578 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m17:27:11.019935 [debug] [Thread-10 ]: On model.mta.subway_station_stats: BEGIN
[0m17:27:11.020696 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: BEGIN
[0m17:27:11.021148 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m17:27:11.021974 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m17:27:11.022431 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m17:27:11.022915 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m17:27:11.023572 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.2023_largest_expense_differences"} */

  
    
    

    create  table
      "mtastats"."main"."2023_largest_expense_differences__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m17:27:11.024608 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m17:27:11.025661 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m17:27:11.026436 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m17:27:11.027175 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:11.027678 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m17:27:11.028219 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m17:27:11.029603 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m17:27:11.030171 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m17:27:11.031578 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:11.032846 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:27:11.033299 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m17:27:11.034512 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:11.035191 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:27:11.036741 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.037607 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m17:27:11.038061 [debug] [Thread-7 (]: SQL status: OK in 0.016 seconds
[0m17:27:11.038756 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m17:27:11.041338 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.042837 [debug] [Thread-6 (]: SQL status: OK in 0.020 seconds
[0m17:27:11.044793 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m17:27:11.046634 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:11.049682 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:27:11.052944 [debug] [Thread-9 (]: SQL status: OK in 0.028 seconds
[0m17:27:11.053382 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:11.053813 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m17:27:11.060677 [debug] [Thread-8 (]: SQL status: OK in 0.034 seconds
[0m17:27:11.062030 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:11.063248 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m17:27:11.072799 [debug] [Thread-10 ]: SQL status: OK in 0.045 seconds
[0m17:27:11.073940 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:11.074938 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m17:27:11.087800 [debug] [Thread-11 ]: SQL status: OK in 0.059 seconds
[0m17:27:11.088347 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:11.088804 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:27:11.097323 [debug] [Thread-12 ]: SQL status: OK in 0.068 seconds
[0m17:27:11.098075 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:11.099007 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m17:27:11.185124 [debug] [Thread-5 (]: SQL status: OK in 0.145 seconds
[0m17:27:11.206279 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:11.207134 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year" rename to "expense_type_per_year__dbt_backup"
[0m17:27:11.208993 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m17:27:11.215375 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:11.216197 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m17:27:11.217409 [debug] [Thread-5 (]: SQL status: OK in 0.000 seconds
[0m17:27:11.272890 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:27:11.274193 [debug] [Thread-7 (]: SQL status: OK in 0.225 seconds
[0m17:27:11.276752 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:11.281014 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.282038 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:27:11.282919 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency" rename to "labor_expenses_per_agency__dbt_backup"
[0m17:27:11.285671 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m17:27:11.296544 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.297386 [debug] [Thread-5 (]: SQL status: OK in 0.014 seconds
[0m17:27:11.297967 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m17:27:11.326598 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:27:11.327771 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m17:27:11.329256 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m17:27:11.332193 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:27:11.332681 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.333080 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:27:11.333772 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m17:27:11.336465 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m17:27:11.338274 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4f478b0>]}
[0m17:27:11.339192 [info ] [Thread-5 (]: 5 of 12 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.47s]
[0m17:27:11.340122 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m17:27:11.341285 [debug] [Thread-7 (]: SQL status: OK in 0.008 seconds
[0m17:27:11.354296 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:27:11.355221 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m17:27:11.359501 [debug] [Thread-7 (]: SQL status: OK in 0.004 seconds
[0m17:27:11.368059 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m17:27:11.369147 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4f47940>]}
[0m17:27:11.370051 [info ] [Thread-7 (]: 7 of 12 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.49s]
[0m17:27:11.370749 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m17:27:11.382000 [debug] [Thread-1 (]: SQL status: OK in 0.351 seconds
[0m17:27:11.401579 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:27:11.403794 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.2023_largest_expense_differences"} */
alter table "mtastats"."main"."2023_largest_expense_differences__dbt_tmp" rename to "2023_largest_expense_differences"
[0m17:27:11.406296 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m17:27:11.408916 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: COMMIT
[0m17:27:11.410506 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:27:11.411351 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: COMMIT
[0m17:27:11.418287 [debug] [Thread-1 (]: SQL status: OK in 0.005 seconds
[0m17:27:11.425099 [debug] [Thread-1 (]: Using duckdb connection "model.mta.2023_largest_expense_differences"
[0m17:27:11.425948 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.2023_largest_expense_differences"} */
drop table if exists "mtastats"."main"."2023_largest_expense_differences__dbt_backup" cascade
[0m17:27:11.426723 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m17:27:11.428231 [debug] [Thread-1 (]: On model.mta.2023_largest_expense_differences: Close
[0m17:27:11.428905 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4f3efe0>]}
[0m17:27:11.430701 [info ] [Thread-1 (]: 1 of 12 OK created sql table model main.2023_largest_expense_differences ....... [[32mOK[0m in 0.59s]
[0m17:27:11.431954 [debug] [Thread-1 (]: Finished running node model.mta.2023_largest_expense_differences
[0m17:27:11.438237 [debug] [Thread-4 (]: SQL status: OK in 0.394 seconds
[0m17:27:11.444363 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.445315 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m17:27:11.446709 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m17:27:11.452537 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.454485 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m17:27:11.460423 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m17:27:11.466338 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m17:27:11.472511 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.473359 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m17:27:11.481638 [debug] [Thread-4 (]: SQL status: OK in 0.007 seconds
[0m17:27:11.490326 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:27:11.491586 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m17:27:11.501758 [debug] [Thread-4 (]: SQL status: OK in 0.009 seconds
[0m17:27:11.503844 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m17:27:11.504756 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4f3e2c0>]}
[0m17:27:11.505804 [info ] [Thread-4 (]: 4 of 12 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.64s]
[0m17:27:11.506796 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m17:27:13.040765 [debug] [Thread-2 (]: SQL status: OK in 2.004 seconds
[0m17:27:13.046132 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:13.051451 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m17:27:13.070054 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:27:13.075892 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:13.076698 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m17:27:13.078407 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:27:13.084348 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:27:13.109404 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:13.110398 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:27:13.117683 [debug] [Thread-2 (]: SQL status: OK in 0.006 seconds
[0m17:27:13.122168 [debug] [Thread-2 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:27:13.124143 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m17:27:13.132515 [debug] [Thread-2 (]: SQL status: OK in 0.007 seconds
[0m17:27:13.134932 [debug] [Thread-2 (]: On model.mta.avg_riders_per_day: Close
[0m17:27:13.135894 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c4f3f010>]}
[0m17:27:13.136818 [info ] [Thread-2 (]: 2 of 12 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.29s]
[0m17:27:13.155085 [debug] [Thread-2 (]: Finished running node model.mta.avg_riders_per_day
[0m17:27:16.080450 [debug] [Thread-3 (]: SQL status: OK in 5.042 seconds
[0m17:27:16.093429 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:16.096804 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m17:27:16.098430 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:27:16.103539 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:16.119665 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m17:27:16.121108 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:27:16.124402 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:27:16.125114 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:16.125734 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:27:16.141829 [debug] [Thread-3 (]: SQL status: OK in 0.015 seconds
[0m17:27:16.146268 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:27:16.147025 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m17:27:16.154066 [debug] [Thread-3 (]: SQL status: OK in 0.006 seconds
[0m17:27:16.156484 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m17:27:16.158176 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f97daae3070>]}
[0m17:27:16.159881 [info ] [Thread-3 (]: 3 of 12 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 5.30s]
[0m17:27:16.161038 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m17:27:18.236924 [debug] [Thread-12 ]: SQL status: OK in 7.137 seconds
[0m17:27:18.254494 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:18.267212 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m17:27:18.269614 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:27:18.276155 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:18.277336 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m17:27:18.278664 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:27:18.281125 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:27:18.281889 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:18.289175 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:27:18.349400 [debug] [Thread-12 ]: SQL status: OK in 0.059 seconds
[0m17:27:18.354077 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:27:18.354902 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m17:27:18.361824 [debug] [Thread-12 ]: SQL status: OK in 0.006 seconds
[0m17:27:18.371292 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: Close
[0m17:27:18.372346 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d0ca3eb0>]}
[0m17:27:18.373486 [info ] [Thread-12 ]: 12 of 12 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 7.45s]
[0m17:27:18.374639 [debug] [Thread-12 ]: Finished running node model.mta.weekly_riders_per_station
[0m17:27:18.483753 [debug] [Thread-11 ]: SQL status: OK in 7.394 seconds
[0m17:27:18.489943 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:18.510281 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m17:27:18.513308 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:27:18.520700 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:18.521633 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m17:27:18.522990 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:27:18.526592 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:27:18.527375 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:18.528618 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:27:18.583083 [debug] [Thread-11 ]: SQL status: OK in 0.013 seconds
[0m17:27:18.601008 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:27:18.601854 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m17:27:18.622122 [debug] [Thread-11 ]: SQL status: OK in 0.019 seconds
[0m17:27:18.625702 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: Close
[0m17:27:18.626732 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d04cc640>]}
[0m17:27:18.627731 [info ] [Thread-11 ]: 11 of 12 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 7.71s]
[0m17:27:18.628678 [debug] [Thread-11 ]: Finished running node model.mta.total_riders_per_station
[0m17:27:18.994468 [debug] [Thread-10 ]: SQL status: OK in 7.917 seconds
[0m17:27:19.000089 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:19.001144 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats" rename to "subway_station_stats__dbt_backup"
[0m17:27:19.002668 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:27:19.007747 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:19.008667 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m17:27:19.010466 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:27:19.032012 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:27:19.032972 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:19.033747 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:27:19.042321 [debug] [Thread-10 ]: SQL status: OK in 0.008 seconds
[0m17:27:19.046632 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:27:19.047367 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m17:27:19.054448 [debug] [Thread-10 ]: SQL status: OK in 0.006 seconds
[0m17:27:19.056856 [debug] [Thread-10 ]: On model.mta.subway_station_stats: Close
[0m17:27:19.057793 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98cd11efb0>]}
[0m17:27:19.058934 [info ] [Thread-10 ]: 10 of 12 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 8.15s]
[0m17:27:19.060076 [debug] [Thread-10 ]: Finished running node model.mta.subway_station_stats
[0m17:27:19.743649 [debug] [Thread-8 (]: SQL status: OK in 8.678 seconds
[0m17:27:19.749362 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:19.750330 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m17:27:19.751931 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m17:27:19.757903 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:19.758908 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m17:27:19.760432 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m17:27:19.763811 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:27:19.764694 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:19.765490 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:27:19.795228 [debug] [Thread-8 (]: SQL status: OK in 0.029 seconds
[0m17:27:19.805299 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:27:19.806194 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m17:27:19.827978 [debug] [Thread-8 (]: SQL status: OK in 0.021 seconds
[0m17:27:19.830757 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: Close
[0m17:27:19.832067 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d04361a0>]}
[0m17:27:19.833252 [info ] [Thread-8 (]: 8 of 12 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 8.96s]
[0m17:27:19.834437 [debug] [Thread-8 (]: Finished running node model.mta.omny_adoption_by_station
[0m17:27:20.168775 [debug] [Thread-6 (]: SQL status: OK in 9.118 seconds
[0m17:27:20.174144 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:20.175003 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m17:27:20.176325 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m17:27:20.184844 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:20.185797 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m17:27:20.187220 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m17:27:20.190782 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m17:27:20.191630 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:20.192274 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m17:27:20.206082 [debug] [Thread-6 (]: SQL status: OK in 0.013 seconds
[0m17:27:20.210838 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:27:20.211837 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m17:27:20.230810 [debug] [Thread-6 (]: SQL status: OK in 0.018 seconds
[0m17:27:20.234106 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m17:27:20.235216 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f97daae6ad0>]}
[0m17:27:20.236402 [info ] [Thread-6 (]: 6 of 12 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 9.36s]
[0m17:27:20.237542 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m17:27:20.760793 [debug] [Thread-9 (]: SQL status: OK in 9.706 seconds
[0m17:27:20.763736 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:20.764145 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m17:27:20.764852 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m17:27:20.767098 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:20.767435 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m17:27:20.768039 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m17:27:20.769557 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:27:20.769880 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:20.770158 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:27:20.774528 [debug] [Thread-9 (]: SQL status: OK in 0.004 seconds
[0m17:27:20.776486 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:27:20.776817 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m17:27:20.779274 [debug] [Thread-9 (]: SQL status: OK in 0.002 seconds
[0m17:27:20.780378 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: Close
[0m17:27:20.849495 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'a3d4f3f3-1a73-41aa-b4ad-3efe9807fed4', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98adfc2c20>]}
[0m17:27:20.850220 [info ] [Thread-9 (]: 9 of 12 OK created sql table model main.omny_adoption_increase ................. [[32mOK[0m in 9.97s]
[0m17:27:20.850740 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_increase
[0m17:27:20.854485 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:20.854817 [debug] [MainThread]: On master: BEGIN
[0m17:27:20.855040 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m17:27:20.860800 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m17:27:20.861202 [debug] [MainThread]: On master: COMMIT
[0m17:27:20.861460 [debug] [MainThread]: Using duckdb connection "master"
[0m17:27:20.861697 [debug] [MainThread]: On master: COMMIT
[0m17:27:20.862097 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:27:20.862340 [debug] [MainThread]: On master: Close
[0m17:27:20.864197 [debug] [MainThread]: Connection 'master' was properly closed.
[0m17:27:20.864460 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m17:27:20.864664 [debug] [MainThread]: Connection 'model.mta.2023_largest_expense_differences' was properly closed.
[0m17:27:20.864850 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m17:27:20.865247 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m17:27:20.865567 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m17:27:20.865793 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m17:27:20.865985 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m17:27:20.866174 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m17:27:20.866381 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m17:27:20.866575 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m17:27:20.866784 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m17:27:20.866965 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m17:27:20.867346 [info ] [MainThread]: 
[0m17:27:20.867684 [info ] [MainThread]: Finished running 12 table models in 0 hours 0 minutes and 10.21 seconds (10.21s).
[0m17:27:20.869185 [debug] [MainThread]: Command end result
[0m17:27:20.899923 [info ] [MainThread]: 
[0m17:27:20.901099 [info ] [MainThread]: [32mCompleted successfully[0m
[0m17:27:20.901616 [info ] [MainThread]: 
[0m17:27:20.901981 [info ] [MainThread]: Done. PASS=12 WARN=0 ERROR=0 SKIP=0 TOTAL=12
[0m17:27:20.903104 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 10.922279, "process_user_time": 146.8043, "process_kernel_time": 3.753177, "process_mem_max_rss": "752772", "process_in_blocks": "696", "process_out_blocks": "16360"}
[0m17:27:20.903947 [debug] [MainThread]: Command `dbt run` succeeded at 17:27:20.903749 after 10.92 seconds
[0m17:27:20.904668 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d1dbf010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98d1123e80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f98c5033d30>]}
[0m17:27:20.905146 [debug] [MainThread]: Flushing usage events
[0m17:30:14.206931 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb30623ef80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb304984cd0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb304984d30>]}


============================== 17:30:14.209225 | 13ed4c93-0a0f-44d0-a246-16b218dc7f27 ==============================
[0m17:30:14.209225 [info ] [MainThread]: Running with dbt=1.8.7
[0m17:30:14.209830 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'fail_fast': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'debug': 'False', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'log_format': 'default', 'invocation_command': 'dbt run', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m17:30:14.377364 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb3047df430>]}
[0m17:30:14.429176 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb304f68550>]}
[0m17:30:14.431575 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m17:30:14.441913 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m17:30:14.517428 [debug] [MainThread]: Partial parsing enabled: 1 files deleted, 1 files added, 0 files changed.
[0m17:30:14.518081 [debug] [MainThread]: Partial parsing: added file: mta://models/largest_expense_differences_2023.sql
[0m17:30:14.518421 [debug] [MainThread]: Partial parsing: deleted file: mta://models/2023_largest_expense_differences.sql
[0m17:30:14.707981 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f93d8130>]}
[0m17:30:14.797241 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f93e1300>]}
[0m17:30:14.798020 [info ] [MainThread]: Found 12 models, 8 sources, 416 macros
[0m17:30:14.798587 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb305c9bd60>]}
[0m17:30:14.801069 [info ] [MainThread]: 
[0m17:30:14.801889 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m17:30:14.819870 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m17:30:14.894268 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m17:30:14.894865 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m17:30:14.895175 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m17:30:14.907014 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m17:30:14.908421 [debug] [ThreadPool]: On list_mtastats: Close
[0m17:30:14.911262 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m17:30:14.911943 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m17:30:14.917943 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:14.918344 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m17:30:14.918636 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:30:14.927107 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m17:30:14.928352 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:14.928712 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m17:30:14.929248 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:30:14.929541 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:14.929789 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m17:30:14.930404 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:30:14.931133 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:30:14.931419 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:14.931674 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:30:14.932747 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m17:30:14.933063 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m17:30:14.936212 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m17:30:14.942794 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:30:14.943288 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m17:30:14.943663 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:30:14.951068 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m17:30:14.951538 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:30:14.951926 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m17:30:14.965644 [debug] [ThreadPool]: SQL status: OK in 0.013 seconds
[0m17:30:14.970775 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m17:30:14.971336 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m17:30:14.971626 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m17:30:14.976024 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb306527400>]}
[0m17:30:14.976444 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:14.976705 [debug] [MainThread]: On master: BEGIN
[0m17:30:14.976935 [debug] [MainThread]: Opening a new connection, currently in state init
[0m17:30:14.982709 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m17:30:14.983100 [debug] [MainThread]: On master: COMMIT
[0m17:30:14.983361 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:14.983591 [debug] [MainThread]: On master: COMMIT
[0m17:30:14.983990 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:30:14.984239 [debug] [MainThread]: On master: Close
[0m17:30:14.985806 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m17:30:14.986185 [info ] [MainThread]: 
[0m17:30:14.993586 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m17:30:14.994157 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m17:30:14.995178 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m17:30:14.995775 [debug] [Thread-4 (]: Began running node model.mta.expense_type_per_year
[0m17:30:14.994713 [info ] [Thread-1 (]: 1 of 12 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m17:30:14.996482 [info ] [Thread-2 (]: 2 of 12 START sql table model main.busiest_specific_times ...................... [RUN]
[0m17:30:14.997096 [debug] [Thread-5 (]: Began running node model.mta.fare_class_boro
[0m17:30:14.997516 [info ] [Thread-3 (]: 3 of 12 START sql table model main.daily_ridership ............................. [RUN]
[0m17:30:14.998057 [info ] [Thread-4 (]: 4 of 12 START sql table model main.expense_type_per_year ....................... [RUN]
[0m17:30:14.998634 [debug] [Thread-6 (]: Began running node model.mta.labor_expenses_per_agency
[0m17:30:14.999229 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m17:30:14.999743 [debug] [Thread-7 (]: Began running node model.mta.largest_expense_differences_2023
[0m17:30:15.000310 [debug] [Thread-8 (]: Began running node model.mta.omny_adoption_by_station
[0m17:30:15.001003 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m17:30:15.001573 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_increase
[0m17:30:15.002072 [debug] [Thread-10 ]: Began running node model.mta.subway_station_stats
[0m17:30:15.003182 [debug] [Thread-11 ]: Began running node model.mta.total_riders_per_station
[0m17:30:15.002732 [info ] [Thread-5 (]: 5 of 12 START sql table model main.fare_class_boro ............................. [RUN]
[0m17:30:15.004135 [debug] [Thread-12 ]: Began running node model.mta.weekly_riders_per_station
[0m17:30:15.004847 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m17:30:15.006695 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.expense_type_per_year'
[0m17:30:15.008103 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m17:30:15.007559 [info ] [Thread-6 (]: 6 of 12 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m17:30:15.008903 [info ] [Thread-7 (]: 7 of 12 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m17:30:15.009695 [info ] [Thread-8 (]: 8 of 12 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m17:30:15.010280 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m17:30:15.011152 [info ] [Thread-9 (]: 9 of 12 START sql table model main.omny_adoption_increase ...................... [RUN]
[0m17:30:15.011880 [info ] [Thread-10 ]: 10 of 12 START sql table model main.subway_station_stats ....................... [RUN]
[0m17:30:15.012468 [info ] [Thread-11 ]: 11 of 12 START sql table model main.total_riders_per_station ................... [RUN]
[0m17:30:15.013064 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.fare_class_boro)
[0m17:30:15.013956 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m17:30:15.014399 [debug] [Thread-4 (]: Began compiling node model.mta.expense_type_per_year
[0m17:30:15.013570 [info ] [Thread-12 ]: 12 of 12 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m17:30:15.026832 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m17:30:15.027838 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m17:30:15.028555 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m17:30:15.029265 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m17:30:15.032927 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m17:30:15.033772 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m17:30:15.034440 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m17:30:15.035035 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m17:30:15.035533 [debug] [Thread-5 (]: Began compiling node model.mta.fare_class_boro
[0m17:30:15.040779 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m17:30:15.043760 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m17:30:15.044733 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m17:30:15.045555 [debug] [Thread-6 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m17:30:15.046184 [debug] [Thread-7 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m17:30:15.046774 [debug] [Thread-8 (]: Began compiling node model.mta.omny_adoption_by_station
[0m17:30:15.047184 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m17:30:15.048085 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_increase
[0m17:30:15.048645 [debug] [Thread-10 ]: Began compiling node model.mta.subway_station_stats
[0m17:30:15.049186 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m17:30:15.049572 [debug] [Thread-11 ]: Began compiling node model.mta.total_riders_per_station
[0m17:30:15.052086 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m17:30:15.052942 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m17:30:15.053402 [debug] [Thread-4 (]: Began executing node model.mta.expense_type_per_year
[0m17:30:15.053796 [debug] [Thread-12 ]: Began compiling node model.mta.weekly_riders_per_station
[0m17:30:15.056569 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m17:30:15.058671 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m17:30:15.062263 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m17:30:15.075750 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m17:30:15.087241 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m17:30:15.089899 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m17:30:15.094280 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m17:30:15.096285 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m17:30:15.098788 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m17:30:15.101314 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m17:30:15.101772 [debug] [Thread-5 (]: Began executing node model.mta.fare_class_boro
[0m17:30:15.103650 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m17:30:15.104251 [debug] [Thread-6 (]: Began executing node model.mta.labor_expenses_per_agency
[0m17:30:15.105670 [debug] [Thread-8 (]: Began executing node model.mta.omny_adoption_by_station
[0m17:30:15.106139 [debug] [Thread-7 (]: Began executing node model.mta.largest_expense_differences_2023
[0m17:30:15.106567 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_increase
[0m17:30:15.107270 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:15.108460 [debug] [Thread-10 ]: Began executing node model.mta.subway_station_stats
[0m17:30:15.109250 [debug] [Thread-11 ]: Began executing node model.mta.total_riders_per_station
[0m17:30:15.109992 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:15.110435 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.110994 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.113439 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m17:30:15.113996 [debug] [Thread-12 ]: Began executing node model.mta.weekly_riders_per_station
[0m17:30:15.116333 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m17:30:15.119215 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m17:30:15.122430 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m17:30:15.124852 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m17:30:15.125368 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m17:30:15.127724 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m17:30:15.130248 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m17:30:15.130750 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m17:30:15.131201 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m17:30:15.131653 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: BEGIN
[0m17:30:15.134161 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m17:30:15.134683 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:15.135815 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.136909 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:15.137343 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:15.137811 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m17:30:15.138230 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:15.138738 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:15.139343 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m17:30:15.139781 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:15.140219 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m17:30:15.140606 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m17:30:15.141221 [debug] [Thread-5 (]: On model.mta.fare_class_boro: BEGIN
[0m17:30:15.141592 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:15.142028 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m17:30:15.142442 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m17:30:15.142826 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m17:30:15.148388 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: BEGIN
[0m17:30:15.149152 [debug] [Thread-10 ]: On model.mta.subway_station_stats: BEGIN
[0m17:30:15.149552 [debug] [Thread-1 (]: SQL status: OK in 0.012 seconds
[0m17:30:15.150201 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: BEGIN
[0m17:30:15.150924 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m17:30:15.151477 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m17:30:15.152070 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m17:30:15.153061 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m17:30:15.153973 [debug] [Thread-2 (]: SQL status: OK in 0.015 seconds
[0m17:30:15.154512 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m17:30:15.154948 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m17:30:15.155972 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m17:30:15.156906 [debug] [Thread-3 (]: SQL status: OK in 0.017 seconds
[0m17:30:15.157288 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:15.157783 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m17:30:15.158525 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m17:30:15.160430 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:15.161021 [debug] [Thread-4 (]: SQL status: OK in 0.020 seconds
[0m17:30:15.163338 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.163733 [debug] [Thread-5 (]: SQL status: OK in 0.013 seconds
[0m17:30:15.164489 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:30:15.166082 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m17:30:15.166695 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:30:15.167590 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.168141 [debug] [Thread-8 (]: SQL status: OK in 0.015 seconds
[0m17:30:15.168628 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m17:30:15.169332 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:15.170484 [debug] [Thread-7 (]: SQL status: OK in 0.016 seconds
[0m17:30:15.170943 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.172156 [debug] [Thread-9 (]: SQL status: OK in 0.017 seconds
[0m17:30:15.172710 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m17:30:15.173217 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:15.174393 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:30:15.175049 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:15.175670 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m17:30:15.176213 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:15.177256 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m17:30:15.178165 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m17:30:15.178769 [debug] [Thread-10 ]: SQL status: OK in 0.023 seconds
[0m17:30:15.179517 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m17:30:15.181826 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:15.183746 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m17:30:15.184390 [debug] [Thread-11 ]: SQL status: OK in 0.027 seconds
[0m17:30:15.185577 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:15.185992 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:30:15.186836 [debug] [Thread-12 ]: SQL status: OK in 0.028 seconds
[0m17:30:15.187187 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:15.187536 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m17:30:15.257844 [debug] [Thread-6 (]: SQL status: OK in 0.078 seconds
[0m17:30:15.271371 [debug] [Thread-4 (]: SQL status: OK in 0.094 seconds
[0m17:30:15.291964 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.304006 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency" rename to "labor_expenses_per_agency__dbt_backup"
[0m17:30:15.308773 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.310853 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m17:30:15.312012 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year" rename to "expense_type_per_year__dbt_backup"
[0m17:30:15.320910 [debug] [Thread-7 (]: SQL status: OK in 0.139 seconds
[0m17:30:15.322515 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m17:30:15.338457 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.345370 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m17:30:15.358862 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.364135 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:15.367844 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m17:30:15.370729 [debug] [Thread-6 (]: SQL status: OK in 0.025 seconds
[0m17:30:15.371803 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m17:30:15.378854 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m17:30:15.416860 [debug] [Thread-7 (]: SQL status: OK in 0.024 seconds
[0m17:30:15.517362 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m17:30:15.521167 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:30:15.531862 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:30:15.563694 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.564200 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:30:15.563165 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.565652 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:30:15.562268 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:15.580929 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m17:30:15.577875 [debug] [Thread-6 (]: SQL status: OK in 0.008 seconds
[0m17:30:15.591127 [debug] [Thread-4 (]: SQL status: OK in 0.025 seconds
[0m17:30:15.619327 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:15.624844 [debug] [Thread-3 (]: SQL status: OK in 0.451 seconds
[0m17:30:15.625610 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m17:30:15.631653 [debug] [Thread-7 (]: SQL status: OK in 0.050 seconds
[0m17:30:15.633464 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:15.643282 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m17:30:15.638236 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:15.650072 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m17:30:15.651934 [debug] [Thread-4 (]: SQL status: OK in 0.019 seconds
[0m17:30:15.652556 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m17:30:15.634141 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.664102 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: Close
[0m17:30:15.665012 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: Close
[0m17:30:15.679648 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m17:30:15.680528 [debug] [Thread-6 (]: SQL status: OK in 0.031 seconds
[0m17:30:15.684227 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f9449210>]}
[0m17:30:15.685280 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942e260>]}
[0m17:30:15.687467 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:30:15.692739 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: Close
[0m17:30:15.695073 [info ] [Thread-4 (]: 4 of 12 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.68s]
[0m17:30:15.703915 [debug] [Thread-4 (]: Finished running node model.mta.expense_type_per_year
[0m17:30:15.696216 [info ] [Thread-7 (]: 7 of 12 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.66s]
[0m17:30:15.705215 [debug] [Thread-7 (]: Finished running node model.mta.largest_expense_differences_2023
[0m17:30:15.701689 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.702925 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942d000>]}
[0m17:30:15.707729 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m17:30:15.710437 [info ] [Thread-6 (]: 6 of 12 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.68s]
[0m17:30:15.713834 [debug] [Thread-6 (]: Finished running node model.mta.labor_expenses_per_agency
[0m17:30:15.712012 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m17:30:15.716921 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m17:30:15.718092 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.718994 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m17:30:15.741310 [debug] [Thread-3 (]: SQL status: OK in 0.021 seconds
[0m17:30:15.746350 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:15.747174 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m17:30:15.779162 [debug] [Thread-3 (]: SQL status: OK in 0.031 seconds
[0m17:30:15.783302 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m17:30:15.784436 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f944a2f0>]}
[0m17:30:15.785462 [info ] [Thread-3 (]: 3 of 12 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.78s]
[0m17:30:15.787352 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m17:30:17.079879 [debug] [Thread-1 (]: SQL status: OK in 1.909 seconds
[0m17:30:17.085587 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:17.086559 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m17:30:17.087886 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m17:30:17.093519 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:17.100908 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m17:30:17.102377 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m17:30:17.126230 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:30:17.144816 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:17.145689 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:30:17.162494 [debug] [Thread-1 (]: SQL status: OK in 0.016 seconds
[0m17:30:17.167506 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:17.189444 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m17:30:17.196647 [debug] [Thread-1 (]: SQL status: OK in 0.006 seconds
[0m17:30:17.199208 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m17:30:17.201306 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f94496f0>]}
[0m17:30:17.202489 [info ] [Thread-1 (]: 1 of 12 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.20s]
[0m17:30:17.203986 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m17:30:19.461211 [debug] [Thread-2 (]: SQL status: OK in 4.289 seconds
[0m17:30:19.468825 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:19.469746 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m17:30:19.470945 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:30:19.475261 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:19.499425 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m17:30:19.500822 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:30:19.503584 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:30:19.504214 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:19.504713 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:30:19.514731 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m17:30:19.544161 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:19.545180 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m17:30:19.553180 [debug] [Thread-2 (]: SQL status: OK in 0.007 seconds
[0m17:30:19.555561 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m17:30:19.556472 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f9449c00>]}
[0m17:30:19.557490 [info ] [Thread-2 (]: 2 of 12 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 4.56s]
[0m17:30:19.558320 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m17:30:22.054078 [debug] [Thread-10 ]: SQL status: OK in 6.869 seconds
[0m17:30:22.059451 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:22.069481 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats" rename to "subway_station_stats__dbt_backup"
[0m17:30:22.071091 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:30:22.076671 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:22.099367 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m17:30:22.100971 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:30:22.104085 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:30:22.105073 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:22.111723 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:30:22.124244 [debug] [Thread-12 ]: SQL status: OK in 6.936 seconds
[0m17:30:22.149450 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:22.160402 [debug] [Thread-10 ]: SQL status: OK in 0.048 seconds
[0m17:30:22.164660 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m17:30:22.169254 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:22.170359 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m17:30:22.171301 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:30:22.176603 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:22.177895 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m17:30:22.179400 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:30:22.185143 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:30:22.191546 [debug] [Thread-10 ]: SQL status: OK in 0.020 seconds
[0m17:30:22.199452 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:22.202087 [debug] [Thread-10 ]: On model.mta.subway_station_stats: Close
[0m17:30:22.202886 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:30:22.203984 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb20d386c80>]}
[0m17:30:22.205311 [info ] [Thread-10 ]: 10 of 12 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 7.17s]
[0m17:30:22.206417 [debug] [Thread-10 ]: Finished running node model.mta.subway_station_stats
[0m17:30:22.227228 [debug] [Thread-5 (]: SQL status: OK in 7.049 seconds
[0m17:30:22.245694 [debug] [Thread-12 ]: SQL status: OK in 0.041 seconds
[0m17:30:22.258793 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:22.281073 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:22.282959 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m17:30:22.284704 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m17:30:22.292316 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:22.293119 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m17:30:22.294305 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m17:30:22.297097 [debug] [Thread-5 (]: On model.mta.fare_class_boro: COMMIT
[0m17:30:22.297760 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:22.298423 [debug] [Thread-5 (]: On model.mta.fare_class_boro: COMMIT
[0m17:30:22.282272 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m17:30:22.305873 [debug] [Thread-12 ]: SQL status: OK in 0.006 seconds
[0m17:30:22.308315 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: Close
[0m17:30:22.309444 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942d0c0>]}
[0m17:30:22.310457 [info ] [Thread-12 ]: 12 of 12 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 7.26s]
[0m17:30:22.311515 [debug] [Thread-12 ]: Finished running node model.mta.weekly_riders_per_station
[0m17:30:22.317018 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m17:30:22.322575 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:22.325203 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m17:30:22.337932 [debug] [Thread-5 (]: SQL status: OK in 0.012 seconds
[0m17:30:22.344005 [debug] [Thread-5 (]: On model.mta.fare_class_boro: Close
[0m17:30:22.362775 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942d8a0>]}
[0m17:30:22.365113 [info ] [Thread-5 (]: 5 of 12 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 7.35s]
[0m17:30:22.366394 [debug] [Thread-5 (]: Finished running node model.mta.fare_class_boro
[0m17:30:22.964291 [debug] [Thread-8 (]: SQL status: OK in 7.784 seconds
[0m17:30:22.969605 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:22.970411 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m17:30:22.971664 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m17:30:22.976756 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:22.977665 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m17:30:22.978986 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m17:30:22.982305 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:30:22.983276 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:22.984074 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:30:23.005540 [debug] [Thread-8 (]: SQL status: OK in 0.021 seconds
[0m17:30:23.010050 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:23.010741 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m17:30:23.021244 [debug] [Thread-8 (]: SQL status: OK in 0.010 seconds
[0m17:30:23.023800 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: Close
[0m17:30:23.024749 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942d5d0>]}
[0m17:30:23.025734 [info ] [Thread-8 (]: 8 of 12 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 8.00s]
[0m17:30:23.026598 [debug] [Thread-8 (]: Finished running node model.mta.omny_adoption_by_station
[0m17:30:23.149921 [debug] [Thread-11 ]: SQL status: OK in 7.963 seconds
[0m17:30:23.159197 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:23.160280 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m17:30:23.161925 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:30:23.166977 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:23.167877 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m17:30:23.169208 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:30:23.172243 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:30:23.173041 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:23.173791 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:30:23.200459 [debug] [Thread-11 ]: SQL status: OK in 0.026 seconds
[0m17:30:23.204792 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:23.205863 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m17:30:23.212235 [debug] [Thread-11 ]: SQL status: OK in 0.005 seconds
[0m17:30:23.215202 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: Close
[0m17:30:23.216439 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb20d38abc0>]}
[0m17:30:23.217720 [info ] [Thread-11 ]: 11 of 12 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 8.18s]
[0m17:30:23.218970 [debug] [Thread-11 ]: Finished running node model.mta.total_riders_per_station
[0m17:30:24.282462 [debug] [Thread-9 (]: SQL status: OK in 9.099 seconds
[0m17:30:24.285172 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:24.285534 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m17:30:24.286262 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m17:30:24.288414 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:24.288801 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m17:30:24.289440 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m17:30:24.290755 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:30:24.291061 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:24.291328 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:30:24.294954 [debug] [Thread-9 (]: SQL status: OK in 0.003 seconds
[0m17:30:24.296669 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:24.296981 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m17:30:24.299295 [debug] [Thread-9 (]: SQL status: OK in 0.002 seconds
[0m17:30:24.300283 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: Close
[0m17:30:24.364241 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '13ed4c93-0a0f-44d0-a246-16b218dc7f27', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb2f942de70>]}
[0m17:30:24.365113 [info ] [Thread-9 (]: 9 of 12 OK created sql table model main.omny_adoption_increase ................. [[32mOK[0m in 9.33s]
[0m17:30:24.365736 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_increase
[0m17:30:24.369510 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:24.369935 [debug] [MainThread]: On master: BEGIN
[0m17:30:24.370290 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m17:30:24.377552 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m17:30:24.378060 [debug] [MainThread]: On master: COMMIT
[0m17:30:24.378393 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:24.378653 [debug] [MainThread]: On master: COMMIT
[0m17:30:24.379134 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:30:24.379512 [debug] [MainThread]: On master: Close
[0m17:30:24.383067 [debug] [MainThread]: Connection 'master' was properly closed.
[0m17:30:24.383617 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m17:30:24.384022 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m17:30:24.384276 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m17:30:24.384509 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m17:30:24.384738 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m17:30:24.384945 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m17:30:24.385157 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m17:30:24.385440 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m17:30:24.385680 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m17:30:24.385882 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m17:30:24.386091 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m17:30:24.386337 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m17:30:24.387572 [info ] [MainThread]: 
[0m17:30:24.388280 [info ] [MainThread]: Finished running 12 table models in 0 hours 0 minutes and 9.59 seconds (9.59s).
[0m17:30:24.390078 [debug] [MainThread]: Command end result
[0m17:30:24.420479 [info ] [MainThread]: 
[0m17:30:24.421205 [info ] [MainThread]: [32mCompleted successfully[0m
[0m17:30:24.421594 [info ] [MainThread]: 
[0m17:30:24.421949 [info ] [MainThread]: Done. PASS=12 WARN=0 ERROR=0 SKIP=0 TOTAL=12
[0m17:30:24.422852 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 10.261556, "process_user_time": 139.20253, "process_kernel_time": 2.844342, "process_mem_max_rss": "779456", "process_out_blocks": "16360", "process_in_blocks": "0"}
[0m17:30:24.423636 [debug] [MainThread]: Command `dbt run` succeeded at 17:30:24.423485 after 10.26 seconds
[0m17:30:24.424185 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb30623ef80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb306527400>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fb304f68550>]}
[0m17:30:24.424547 [debug] [MainThread]: Flushing usage events
[0m17:30:30.004009 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb9b857010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb99f5f490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb99f5f430>]}


============================== 17:30:30.005922 | 84a509c2-2ad8-461d-a9e0-ce277217a1f3 ==============================
[0m17:30:30.005922 [info ] [MainThread]: Running with dbt=1.8.7
[0m17:30:30.006373 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m17:30:30.171334 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb9b919bd0>]}
[0m17:30:30.222116 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb96cf0ee0>]}
[0m17:30:30.224636 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m17:30:30.231521 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m17:30:30.317812 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m17:30:30.318263 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m17:30:30.344168 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb96c922f0>]}
[0m17:30:30.405187 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8ea2ea40>]}
[0m17:30:30.405683 [info ] [MainThread]: Found 12 models, 8 sources, 416 macros
[0m17:30:30.406062 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8ea2cfd0>]}
[0m17:30:30.407524 [info ] [MainThread]: 
[0m17:30:30.408094 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m17:30:30.412493 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m17:30:30.443779 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m17:30:30.444247 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m17:30:30.444550 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m17:30:30.453153 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m17:30:30.454734 [debug] [ThreadPool]: On list_mtastats: Close
[0m17:30:30.458350 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m17:30:30.459019 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m17:30:30.464042 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:30.464352 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m17:30:30.464628 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:30:30.470080 [debug] [ThreadPool]: SQL status: OK in 0.005 seconds
[0m17:30:30.471122 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:30.471386 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m17:30:30.471842 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:30:30.472094 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:30.472326 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m17:30:30.472818 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m17:30:30.473413 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:30:30.473635 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m17:30:30.474109 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m17:30:30.475464 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m17:30:30.475737 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m17:30:30.479151 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m17:30:30.483164 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:30:30.483495 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m17:30:30.483799 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m17:30:30.489729 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m17:30:30.490034 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m17:30:30.490325 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m17:30:30.505854 [debug] [ThreadPool]: SQL status: OK in 0.015 seconds
[0m17:30:30.507239 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m17:30:30.507940 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m17:30:30.508255 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m17:30:30.512407 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb9bb3dde0>]}
[0m17:30:30.512923 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:30.513236 [debug] [MainThread]: On master: BEGIN
[0m17:30:30.513627 [debug] [MainThread]: Opening a new connection, currently in state init
[0m17:30:30.525684 [debug] [MainThread]: SQL status: OK in 0.012 seconds
[0m17:30:30.526280 [debug] [MainThread]: On master: COMMIT
[0m17:30:30.526672 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:30.527031 [debug] [MainThread]: On master: COMMIT
[0m17:30:30.527567 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:30:30.527949 [debug] [MainThread]: On master: Close
[0m17:30:30.530467 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m17:30:30.530946 [info ] [MainThread]: 
[0m17:30:30.541019 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m17:30:30.541655 [info ] [Thread-1 (]: 1 of 12 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m17:30:30.542310 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m17:30:30.542626 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m17:30:30.548427 [debug] [Thread-2 (]: Began running node model.mta.busiest_specific_times
[0m17:30:30.549144 [debug] [Thread-3 (]: Began running node model.mta.daily_ridership
[0m17:30:30.550690 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m17:30:30.552152 [debug] [Thread-4 (]: Began running node model.mta.expense_type_per_year
[0m17:30:30.552838 [debug] [Thread-5 (]: Began running node model.mta.fare_class_boro
[0m17:30:30.551613 [info ] [Thread-2 (]: 2 of 12 START sql table model main.busiest_specific_times ...................... [RUN]
[0m17:30:30.554247 [debug] [Thread-6 (]: Began running node model.mta.labor_expenses_per_agency
[0m17:30:30.553760 [info ] [Thread-3 (]: 3 of 12 START sql table model main.daily_ridership ............................. [RUN]
[0m17:30:30.555407 [info ] [Thread-4 (]: 4 of 12 START sql table model main.expense_type_per_year ....................... [RUN]
[0m17:30:30.556265 [debug] [Thread-7 (]: Began running node model.mta.largest_expense_differences_2023
[0m17:30:30.556920 [info ] [Thread-5 (]: 5 of 12 START sql table model main.fare_class_boro ............................. [RUN]
[0m17:30:30.557685 [debug] [Thread-8 (]: Began running node model.mta.omny_adoption_by_station
[0m17:30:30.558351 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_increase
[0m17:30:30.559189 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m17:30:30.559750 [debug] [Thread-10 ]: Began running node model.mta.subway_station_stats
[0m17:30:30.560296 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m17:30:30.561011 [debug] [Thread-11 ]: Began running node model.mta.total_riders_per_station
[0m17:30:30.561841 [info ] [Thread-6 (]: 6 of 12 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m17:30:30.562518 [debug] [Thread-12 ]: Began running node model.mta.weekly_riders_per_station
[0m17:30:30.563584 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m17:30:30.565264 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.expense_type_per_year'
[0m17:30:30.566983 [info ] [Thread-7 (]: 7 of 12 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m17:30:30.568025 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.fare_class_boro)
[0m17:30:30.568920 [info ] [Thread-8 (]: 8 of 12 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m17:30:30.570292 [info ] [Thread-9 (]: 9 of 12 START sql table model main.omny_adoption_increase ...................... [RUN]
[0m17:30:30.571026 [debug] [Thread-2 (]: Began compiling node model.mta.busiest_specific_times
[0m17:30:30.571700 [info ] [Thread-10 ]: 10 of 12 START sql table model main.subway_station_stats ....................... [RUN]
[0m17:30:30.577922 [info ] [Thread-11 ]: 11 of 12 START sql table model main.total_riders_per_station ................... [RUN]
[0m17:30:30.585270 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m17:30:30.600469 [info ] [Thread-12 ]: 12 of 12 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m17:30:30.614394 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m17:30:30.615174 [debug] [Thread-3 (]: Began compiling node model.mta.daily_ridership
[0m17:30:30.615880 [debug] [Thread-4 (]: Began compiling node model.mta.expense_type_per_year
[0m17:30:30.616552 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m17:30:30.617128 [debug] [Thread-5 (]: Began compiling node model.mta.fare_class_boro
[0m17:30:30.617818 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m17:30:30.618750 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m17:30:30.621673 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m17:30:30.622349 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m17:30:30.622957 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m17:30:30.623470 [debug] [Thread-6 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m17:30:30.624068 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m17:30:30.631371 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m17:30:30.679963 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m17:30:30.680645 [debug] [Thread-7 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m17:30:30.681289 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:30.683607 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m17:30:30.684041 [debug] [Thread-8 (]: Began compiling node model.mta.omny_adoption_by_station
[0m17:30:30.684498 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_increase
[0m17:30:30.685199 [debug] [Thread-10 ]: Began compiling node model.mta.subway_station_stats
[0m17:30:30.685539 [debug] [Thread-2 (]: Began executing node model.mta.busiest_specific_times
[0m17:30:30.686038 [debug] [Thread-11 ]: Began compiling node model.mta.total_riders_per_station
[0m17:30:30.687911 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m17:30:30.688292 [debug] [Thread-12 ]: Began compiling node model.mta.weekly_riders_per_station
[0m17:30:30.688822 [debug] [Thread-3 (]: Began executing node model.mta.daily_ridership
[0m17:30:30.690900 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m17:30:30.691246 [debug] [Thread-4 (]: Began executing node model.mta.expense_type_per_year
[0m17:30:30.691697 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m17:30:30.693658 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m17:30:30.694171 [debug] [Thread-5 (]: Began executing node model.mta.fare_class_boro
[0m17:30:30.696083 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m17:30:30.698079 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m17:30:30.700702 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m17:30:30.703312 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m17:30:30.705203 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m17:30:30.705750 [debug] [Thread-6 (]: Began executing node model.mta.labor_expenses_per_agency
[0m17:30:30.708004 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m17:30:30.708522 [debug] [Thread-7 (]: Began executing node model.mta.largest_expense_differences_2023
[0m17:30:30.710820 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m17:30:30.711288 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m17:30:30.713598 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m17:30:30.713999 [debug] [Thread-8 (]: Began executing node model.mta.omny_adoption_by_station
[0m17:30:30.714581 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_increase
[0m17:30:30.715695 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:30.716292 [debug] [Thread-10 ]: Began executing node model.mta.subway_station_stats
[0m17:30:30.718575 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m17:30:30.719514 [debug] [Thread-12 ]: Began executing node model.mta.weekly_riders_per_station
[0m17:30:30.722293 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m17:30:30.722687 [debug] [Thread-11 ]: Began executing node model.mta.total_riders_per_station
[0m17:30:30.723910 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:30.724270 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:30.730251 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:30.732623 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m17:30:30.735118 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m17:30:30.735625 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: BEGIN
[0m17:30:30.737993 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m17:30:30.738439 [debug] [Thread-1 (]: SQL status: OK in 0.027 seconds
[0m17:30:30.741133 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m17:30:30.741731 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:30.742121 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:30.744297 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m17:30:30.744808 [debug] [Thread-3 (]: On model.mta.daily_ridership: BEGIN
[0m17:30:30.745228 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: BEGIN
[0m17:30:30.745710 [debug] [Thread-5 (]: On model.mta.fare_class_boro: BEGIN
[0m17:30:30.746264 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:30.746816 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:30.747237 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m17:30:30.747801 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:30.748285 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:30.748785 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:30.749263 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m17:30:30.749765 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m17:30:30.750447 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m17:30:30.750835 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:30.751305 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m17:30:30.751734 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m17:30:30.752138 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m17:30:30.752535 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: BEGIN
[0m17:30:30.753345 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:30:30.753866 [debug] [Thread-10 ]: On model.mta.subway_station_stats: BEGIN
[0m17:30:30.754402 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m17:30:30.754944 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m17:30:30.755416 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m17:30:30.756270 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: BEGIN
[0m17:30:30.758016 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m17:30:30.758463 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m17:30:30.758863 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m17:30:30.759749 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m17:30:30.760304 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m17:30:30.761028 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m17:30:30.761729 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:30.762967 [debug] [Thread-3 (]: SQL status: OK in 0.012 seconds
[0m17:30:30.764005 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m17:30:30.764542 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:30.765450 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m17:30:30.766555 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m17:30:30.766998 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:30.767493 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m17:30:30.770119 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m17:30:30.770616 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:30.771168 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:30:30.772980 [debug] [Thread-6 (]: SQL status: OK in 0.018 seconds
[0m17:30:30.773385 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:30.773810 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m17:30:30.777437 [debug] [Thread-7 (]: SQL status: OK in 0.022 seconds
[0m17:30:30.777953 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:30.778492 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m17:30:30.785003 [debug] [Thread-8 (]: SQL status: OK in 0.026 seconds
[0m17:30:30.785615 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:30.786160 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m17:30:30.788123 [debug] [Thread-9 (]: SQL status: OK in 0.029 seconds
[0m17:30:30.788634 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:30.789137 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m17:30:30.793071 [debug] [Thread-10 ]: SQL status: OK in 0.033 seconds
[0m17:30:30.793550 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:30.794072 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m17:30:30.797394 [debug] [Thread-12 ]: SQL status: OK in 0.037 seconds
[0m17:30:30.797879 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:30.798368 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m17:30:30.800382 [debug] [Thread-11 ]: SQL status: OK in 0.039 seconds
[0m17:30:30.800884 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:30.801313 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m17:30:30.868093 [debug] [Thread-6 (]: SQL status: OK in 0.094 seconds
[0m17:30:30.887555 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:30.888856 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m17:30:30.891236 [debug] [Thread-6 (]: SQL status: OK in 0.002 seconds
[0m17:30:30.905076 [debug] [Thread-4 (]: SQL status: OK in 0.137 seconds
[0m17:30:30.940803 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:30.953414 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m17:30:30.957081 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m17:30:30.964631 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:30:30.966032 [debug] [Thread-7 (]: SQL status: OK in 0.187 seconds
[0m17:30:30.968756 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:30.975947 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:30:30.976600 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m17:30:30.977243 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:30.978085 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: COMMIT
[0m17:30:30.980880 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:30.981492 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m17:30:30.982439 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m17:30:30.985681 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m17:30:30.986247 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:30.986717 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m17:30:30.991514 [debug] [Thread-6 (]: SQL status: OK in 0.013 seconds
[0m17:30:31.009499 [debug] [Thread-6 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m17:30:31.011419 [debug] [Thread-4 (]: SQL status: OK in 0.031 seconds
[0m17:30:31.012314 [debug] [Thread-7 (]: SQL status: OK in 0.025 seconds
[0m17:30:31.014450 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m17:30:31.033248 [debug] [Thread-4 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m17:30:31.041179 [debug] [Thread-7 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m17:30:31.047123 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m17:30:31.045713 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m17:30:31.046400 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m17:30:31.056628 [debug] [Thread-6 (]: On model.mta.labor_expenses_per_agency: Close
[0m17:30:31.063301 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m17:30:31.067605 [debug] [Thread-4 (]: On model.mta.expense_type_per_year: Close
[0m17:30:31.070015 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd2a350>]}
[0m17:30:31.071547 [info ] [Thread-4 (]: 4 of 12 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.50s]
[0m17:30:31.072414 [debug] [Thread-4 (]: Finished running node model.mta.expense_type_per_year
[0m17:30:31.073977 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd2bd30>]}
[0m17:30:31.075258 [debug] [Thread-7 (]: SQL status: OK in 0.028 seconds
[0m17:30:31.076293 [info ] [Thread-6 (]: 6 of 12 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.48s]
[0m17:30:31.078334 [debug] [Thread-7 (]: On model.mta.largest_expense_differences_2023: Close
[0m17:30:31.079261 [debug] [Thread-6 (]: Finished running node model.mta.labor_expenses_per_agency
[0m17:30:31.080149 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd2af20>]}
[0m17:30:31.091636 [info ] [Thread-7 (]: 7 of 12 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.46s]
[0m17:30:31.092642 [debug] [Thread-7 (]: Finished running node model.mta.largest_expense_differences_2023
[0m17:30:31.173370 [debug] [Thread-3 (]: SQL status: OK in 0.407 seconds
[0m17:30:31.187556 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:31.188528 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m17:30:31.189875 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m17:30:31.201884 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m17:30:31.202752 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:31.203462 [debug] [Thread-3 (]: On model.mta.daily_ridership: COMMIT
[0m17:30:31.251565 [debug] [Thread-3 (]: SQL status: OK in 0.047 seconds
[0m17:30:31.257648 [debug] [Thread-3 (]: Using duckdb connection "model.mta.daily_ridership"
[0m17:30:31.262677 [debug] [Thread-3 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m17:30:31.263806 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m17:30:31.273110 [debug] [Thread-3 (]: On model.mta.daily_ridership: Close
[0m17:30:31.302529 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8c1ede40>]}
[0m17:30:31.303772 [info ] [Thread-3 (]: 3 of 12 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.72s]
[0m17:30:31.309530 [debug] [Thread-3 (]: Finished running node model.mta.daily_ridership
[0m17:30:32.673457 [debug] [Thread-1 (]: SQL status: OK in 1.914 seconds
[0m17:30:32.694389 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:32.698090 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m17:30:32.699300 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m17:30:32.701875 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:30:32.702516 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:32.703031 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m17:30:32.733860 [debug] [Thread-1 (]: SQL status: OK in 0.026 seconds
[0m17:30:32.739260 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m17:30:32.759512 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m17:30:32.760807 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m17:30:32.763057 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m17:30:32.779839 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8ea2afe0>]}
[0m17:30:32.781025 [info ] [Thread-1 (]: 1 of 12 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.24s]
[0m17:30:32.782058 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m17:30:35.117291 [debug] [Thread-2 (]: SQL status: OK in 4.352 seconds
[0m17:30:35.122386 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:35.125797 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m17:30:35.127278 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m17:30:35.130151 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:30:35.141423 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:35.142260 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: COMMIT
[0m17:30:35.159154 [debug] [Thread-2 (]: SQL status: OK in 0.016 seconds
[0m17:30:35.163359 [debug] [Thread-2 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m17:30:35.164082 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m17:30:35.165133 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m17:30:35.167315 [debug] [Thread-2 (]: On model.mta.busiest_specific_times: Close
[0m17:30:35.168223 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd2a6e0>]}
[0m17:30:35.169217 [info ] [Thread-2 (]: 2 of 12 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 4.61s]
[0m17:30:35.170409 [debug] [Thread-2 (]: Finished running node model.mta.busiest_specific_times
[0m17:30:37.706026 [debug] [Thread-12 ]: SQL status: OK in 6.907 seconds
[0m17:30:37.711533 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:37.712334 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m17:30:37.713513 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m17:30:37.716090 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:30:37.716885 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:37.717554 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m17:30:37.736354 [debug] [Thread-12 ]: SQL status: OK in 0.018 seconds
[0m17:30:37.741202 [debug] [Thread-12 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m17:30:37.742216 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m17:30:37.743386 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m17:30:37.745702 [debug] [Thread-12 ]: On model.mta.weekly_riders_per_station: Close
[0m17:30:37.746804 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd443a0>]}
[0m17:30:37.747960 [info ] [Thread-12 ]: 12 of 12 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 7.12s]
[0m17:30:37.749652 [debug] [Thread-12 ]: Finished running node model.mta.weekly_riders_per_station
[0m17:30:37.962868 [debug] [Thread-10 ]: SQL status: OK in 7.168 seconds
[0m17:30:37.968408 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:37.969196 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m17:30:37.970550 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m17:30:37.973373 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:30:37.974097 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:37.974700 [debug] [Thread-10 ]: On model.mta.subway_station_stats: COMMIT
[0m17:30:37.998072 [debug] [Thread-10 ]: SQL status: OK in 0.023 seconds
[0m17:30:38.004351 [debug] [Thread-10 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m17:30:38.005119 [debug] [Thread-10 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m17:30:38.006180 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m17:30:38.008390 [debug] [Thread-10 ]: On model.mta.subway_station_stats: Close
[0m17:30:38.009396 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcae6fe4af0>]}
[0m17:30:38.011250 [info ] [Thread-10 ]: 10 of 12 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 7.39s]
[0m17:30:38.012333 [debug] [Thread-10 ]: Finished running node model.mta.subway_station_stats
[0m17:30:38.562492 [debug] [Thread-9 (]: SQL status: OK in 7.773 seconds
[0m17:30:38.567622 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:38.568355 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m17:30:38.569592 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m17:30:38.572127 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:30:38.572759 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:38.573301 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: COMMIT
[0m17:30:38.593185 [debug] [Thread-9 (]: SQL status: OK in 0.019 seconds
[0m17:30:38.597779 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m17:30:38.598725 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m17:30:38.600051 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m17:30:38.603439 [debug] [Thread-9 (]: On model.mta.omny_adoption_increase: Close
[0m17:30:38.604422 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8c10b250>]}
[0m17:30:38.605417 [info ] [Thread-9 (]: 9 of 12 OK created sql table model main.omny_adoption_increase ................. [[32mOK[0m in 7.99s]
[0m17:30:38.620031 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_increase
[0m17:30:39.574495 [debug] [Thread-8 (]: SQL status: OK in 8.788 seconds
[0m17:30:39.580206 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:39.581338 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m17:30:39.582810 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m17:30:39.585490 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:30:39.586315 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:39.587091 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m17:30:39.613809 [debug] [Thread-8 (]: SQL status: OK in 0.026 seconds
[0m17:30:39.619282 [debug] [Thread-8 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m17:30:39.620164 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m17:30:39.621309 [debug] [Thread-8 (]: SQL status: OK in 0.000 seconds
[0m17:30:39.623539 [debug] [Thread-8 (]: On model.mta.omny_adoption_by_station: Close
[0m17:30:39.624437 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dded300>]}
[0m17:30:39.625476 [info ] [Thread-8 (]: 8 of 12 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 9.01s]
[0m17:30:39.626533 [debug] [Thread-8 (]: Finished running node model.mta.omny_adoption_by_station
[0m17:30:39.817191 [debug] [Thread-5 (]: SQL status: OK in 9.045 seconds
[0m17:30:39.822765 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:39.823737 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m17:30:39.825450 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m17:30:39.828337 [debug] [Thread-5 (]: On model.mta.fare_class_boro: COMMIT
[0m17:30:39.829261 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:39.829988 [debug] [Thread-5 (]: On model.mta.fare_class_boro: COMMIT
[0m17:30:39.834634 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m17:30:39.837868 [debug] [Thread-5 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m17:30:39.838376 [debug] [Thread-5 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m17:30:39.839545 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m17:30:39.841116 [debug] [Thread-5 (]: On model.mta.fare_class_boro: Close
[0m17:30:39.841857 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb8dd2b8b0>]}
[0m17:30:39.842599 [info ] [Thread-5 (]: 5 of 12 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 9.27s]
[0m17:30:39.843324 [debug] [Thread-5 (]: Finished running node model.mta.fare_class_boro
[0m17:30:39.874636 [debug] [Thread-11 ]: SQL status: OK in 9.073 seconds
[0m17:30:39.879700 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:39.880510 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m17:30:39.881460 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:30:39.882879 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:30:39.883243 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:39.883553 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: COMMIT
[0m17:30:39.887169 [debug] [Thread-11 ]: SQL status: OK in 0.003 seconds
[0m17:30:39.892571 [debug] [Thread-11 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m17:30:39.893270 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m17:30:39.894372 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m17:30:39.895591 [debug] [Thread-11 ]: On model.mta.total_riders_per_station: Close
[0m17:30:39.957800 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '84a509c2-2ad8-461d-a9e0-ce277217a1f3', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcae6fdec50>]}
[0m17:30:39.958561 [info ] [Thread-11 ]: 11 of 12 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 9.33s]
[0m17:30:39.959174 [debug] [Thread-11 ]: Finished running node model.mta.total_riders_per_station
[0m17:30:39.962518 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:39.962913 [debug] [MainThread]: On master: BEGIN
[0m17:30:39.963181 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m17:30:39.969600 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m17:30:39.970042 [debug] [MainThread]: On master: COMMIT
[0m17:30:39.970329 [debug] [MainThread]: Using duckdb connection "master"
[0m17:30:39.970585 [debug] [MainThread]: On master: COMMIT
[0m17:30:39.971016 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m17:30:39.971300 [debug] [MainThread]: On master: Close
[0m17:30:39.973400 [debug] [MainThread]: Connection 'master' was properly closed.
[0m17:30:39.973760 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m17:30:39.974033 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m17:30:39.974253 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m17:30:39.974442 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m17:30:39.974647 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m17:30:39.974828 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m17:30:39.975043 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m17:30:39.975225 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m17:30:39.975395 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m17:30:39.975583 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m17:30:39.975749 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m17:30:39.975924 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m17:30:39.976290 [info ] [MainThread]: 
[0m17:30:39.976653 [info ] [MainThread]: Finished running 12 table models in 0 hours 0 minutes and 9.57 seconds (9.57s).
[0m17:30:39.977951 [debug] [MainThread]: Command end result
[0m17:30:40.002248 [info ] [MainThread]: 
[0m17:30:40.002792 [info ] [MainThread]: [32mCompleted successfully[0m
[0m17:30:40.003141 [info ] [MainThread]: 
[0m17:30:40.003465 [info ] [MainThread]: Done. PASS=12 WARN=0 ERROR=0 SKIP=0 TOTAL=12
[0m17:30:40.004254 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 10.043162, "process_user_time": 139.27101, "process_kernel_time": 2.354581, "process_mem_max_rss": "822172", "process_out_blocks": "14864", "process_in_blocks": "0"}
[0m17:30:40.004891 [debug] [MainThread]: Command `dbt run` succeeded at 17:30:40.004797 after 10.04 seconds
[0m17:30:40.005250 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb9b857010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb96cc6260>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fcb9ab59900>]}
[0m17:30:40.005695 [debug] [MainThread]: Flushing usage events
[0m18:57:30.961578 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3ee74ef50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3ece57430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3ece573d0>]}


============================== 18:57:30.970381 | 0799545a-7008-4741-a10a-f17fb130eaa8 ==============================
[0m18:57:30.970381 [info ] [MainThread]: Running with dbt=1.8.7
[0m18:57:30.973111 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'version_check': 'True', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'introspect': 'True', 'static_parser': 'True', 'invocation_command': 'dbt run', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m18:57:31.379937 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1d625c0>]}
[0m18:57:31.488447 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1cf5e70>]}
[0m18:57:31.494768 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m18:57:31.515455 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m18:57:31.728917 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 1 files added, 0 files changed.
[0m18:57:31.730000 [debug] [MainThread]: Partial parsing: added file: mta://models/bond_payment_info.sql
[0m18:57:32.131053 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e18ac130>]}
[0m18:57:32.256364 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1a110f0>]}
[0m18:57:32.257631 [info ] [MainThread]: Found 13 models, 8 sources, 416 macros
[0m18:57:32.258259 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1a11000>]}
[0m18:57:32.260929 [info ] [MainThread]: 
[0m18:57:32.261838 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m18:57:32.273535 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m18:57:32.418356 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m18:57:32.418994 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m18:57:32.419433 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m18:57:32.443223 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m18:57:32.445326 [debug] [ThreadPool]: On list_mtastats: Close
[0m18:57:32.450054 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m18:57:32.450913 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m18:57:32.458730 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:57:32.459217 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m18:57:32.459611 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m18:57:32.468966 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m18:57:32.470783 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:57:32.471346 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m18:57:32.472181 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m18:57:32.472625 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:57:32.473032 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m18:57:32.473764 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m18:57:32.474743 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m18:57:32.475151 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:57:32.475508 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m18:57:32.476108 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m18:57:32.476535 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m18:57:32.480794 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m18:57:32.488119 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m18:57:32.488643 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m18:57:32.489043 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m18:57:32.496846 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m18:57:32.497359 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m18:57:32.497783 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m18:57:32.530032 [debug] [ThreadPool]: SQL status: OK in 0.032 seconds
[0m18:57:32.532142 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m18:57:32.533418 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m18:57:32.533884 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m18:57:32.539512 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3eea334f0>]}
[0m18:57:32.540339 [debug] [MainThread]: Using duckdb connection "master"
[0m18:57:32.540785 [debug] [MainThread]: On master: BEGIN
[0m18:57:32.541183 [debug] [MainThread]: Opening a new connection, currently in state init
[0m18:57:32.550958 [debug] [MainThread]: SQL status: OK in 0.010 seconds
[0m18:57:32.551660 [debug] [MainThread]: On master: COMMIT
[0m18:57:32.552128 [debug] [MainThread]: Using duckdb connection "master"
[0m18:57:32.552732 [debug] [MainThread]: On master: COMMIT
[0m18:57:32.553718 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m18:57:32.554226 [debug] [MainThread]: On master: Close
[0m18:57:32.557416 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m18:57:32.558034 [info ] [MainThread]: 
[0m18:57:32.572252 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m18:57:32.573118 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m18:57:32.574016 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m18:57:32.575033 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m18:57:32.575908 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m18:57:32.576885 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m18:57:32.577845 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m18:57:32.578602 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m18:57:32.579534 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m18:57:32.580296 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m18:57:32.581197 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m18:57:32.581760 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m18:57:32.582490 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m18:57:32.583170 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m18:57:32.584050 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m18:57:32.584762 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m18:57:32.585901 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m18:57:32.589410 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m18:57:32.586689 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m18:57:32.591357 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m18:57:32.593631 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m18:57:32.595145 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m18:57:32.597027 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m18:57:32.597950 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m18:57:32.596207 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m18:57:32.600131 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m18:57:32.599193 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m18:57:32.614171 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m18:57:32.615118 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m18:57:32.616166 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m18:57:32.617212 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m18:57:32.618178 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m18:57:32.621107 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m18:57:32.622038 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m18:57:32.622996 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m18:57:32.624099 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m18:57:32.625034 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m18:57:32.626030 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m18:57:32.626696 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m18:57:32.627750 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m18:57:32.628911 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m18:57:32.629795 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m18:57:32.636974 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m18:57:32.638472 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m18:57:32.640118 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m18:57:32.641269 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m18:57:32.642292 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m18:57:32.643174 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m18:57:32.643719 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m18:57:32.644515 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m18:57:32.645164 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m18:57:32.653165 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m18:57:32.654182 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m18:57:32.655085 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m18:57:32.657755 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m18:57:32.664670 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m18:57:32.665647 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m18:57:32.666811 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m18:57:32.679399 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m18:57:32.702320 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m18:57:32.715915 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m18:57:32.720520 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m18:57:32.721218 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m18:57:32.724501 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m18:57:32.727991 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m18:57:32.731486 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m18:57:32.755900 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m18:57:32.736992 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m18:57:32.741085 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m18:57:32.741930 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m18:57:32.745363 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m18:57:32.746003 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m18:57:32.749316 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m18:57:32.752936 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m18:57:32.754435 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:57:32.755022 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:57:32.732154 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m18:57:32.760421 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m18:57:32.761781 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m18:57:32.762496 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m18:57:32.763429 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:57:32.764246 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m18:57:32.768219 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m18:57:32.773454 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m18:57:32.774599 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m18:57:32.775444 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m18:57:32.776359 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m18:57:32.777012 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m18:57:32.781083 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m18:57:32.781781 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m18:57:32.786010 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m18:57:32.786879 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:57:32.790861 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m18:57:32.791472 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m18:57:32.795453 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m18:57:32.796698 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m18:57:32.797415 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:57:32.801546 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m18:57:32.802147 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:57:32.802776 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m18:57:32.807371 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m18:57:32.808366 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:57:32.812979 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m18:57:32.813999 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m18:57:32.815214 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m18:57:32.815784 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:57:32.826828 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:57:32.828128 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:57:32.828770 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m18:57:32.829956 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m18:57:32.831011 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:57:32.832386 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m18:57:32.834048 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:57:32.834937 [debug] [Thread-1 (]: SQL status: OK in 0.038 seconds
[0m18:57:32.835558 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:57:32.836208 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m18:57:32.837359 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m18:57:32.837992 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m18:57:32.838812 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m18:57:32.839723 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m18:57:32.840419 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m18:57:32.841175 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m18:57:32.841835 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m18:57:32.843157 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m18:57:32.843971 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:57:32.844520 [debug] [Thread-2 (]: SQL status: OK in 0.042 seconds
[0m18:57:32.845160 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m18:57:32.846155 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m18:57:32.846979 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m18:57:32.847917 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m18:57:32.849091 [debug] [Thread-3 (]: SQL status: OK in 0.034 seconds
[0m18:57:32.849876 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m18:57:32.850704 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m18:57:32.851299 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m18:57:32.852045 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:57:32.852841 [debug] [Thread-7 (]: SQL status: OK in 0.017 seconds
[0m18:57:32.853420 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m18:57:32.854890 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:57:32.856363 [debug] [Thread-5 (]: SQL status: OK in 0.017 seconds
[0m18:57:32.857661 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        mta_operations_statement
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger;
    );
  
  
[0m18:57:32.858771 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:57:32.859359 [debug] [Thread-6 (]: SQL status: OK in 0.019 seconds
[0m18:57:32.860367 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m18:57:32.861611 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:57:32.872300 [debug] [Thread-2 (]: DuckDB adapter: Error running SQL: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        mta_operations_statement
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger;
    );
  
  
[0m18:57:32.874366 [debug] [Thread-4 (]: SQL status: OK in 0.032 seconds
[0m18:57:32.876710 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m18:57:32.877794 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:57:32.879138 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m18:57:32.879836 [debug] [Thread-2 (]: DuckDB adapter: Rolling back transaction.
[0m18:57:32.880754 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:57:32.886453 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m18:57:32.881484 [debug] [Thread-8 (]: SQL status: OK in 0.035 seconds
[0m18:57:32.884395 [debug] [Thread-2 (]: On model.mta.bond_payment_info: ROLLBACK
[0m18:57:32.885454 [debug] [Thread-9 (]: SQL status: OK in 0.038 seconds
[0m18:57:32.882526 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m18:57:32.887960 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:57:32.893282 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:57:32.896516 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m18:57:32.900981 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m18:57:32.913536 [debug] [Thread-10 ]: SQL status: OK in 0.065 seconds
[0m18:57:32.915166 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:57:32.917252 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m18:57:32.930132 [debug] [Thread-11 ]: SQL status: OK in 0.080 seconds
[0m18:57:32.932293 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:57:32.936599 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m18:57:32.946723 [debug] [Thread-12 ]: SQL status: OK in 0.094 seconds
[0m18:57:32.949889 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:57:32.951424 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m18:57:32.956669 [debug] [Thread-13 ]: SQL status: OK in 0.103 seconds
[0m18:57:32.958034 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:57:32.960494 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m18:57:32.964119 [debug] [Thread-2 (]: Failed to rollback 'model.mta.bond_payment_info'
[0m18:57:32.965533 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m18:57:32.967234 [debug] [Thread-2 (]: Runtime Error in model bond_payment_info (models/bond_payment_info.sql)
  Parser Error: syntax error at or near ";"
[0m18:57:32.975787 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3eda4e4d0>]}
[0m18:57:32.976935 [error] [Thread-2 (]: 2 of 13 ERROR creating sql table model main.bond_payment_info .................. [[31mERROR[0m in 0.39s]
[0m18:57:32.977824 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m18:57:33.101725 [debug] [Thread-7 (]: SQL status: OK in 0.219 seconds
[0m18:57:33.123276 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:57:33.124267 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m18:57:33.127547 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m18:57:33.219980 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m18:57:33.221305 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:57:33.222185 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m18:57:33.228510 [debug] [Thread-5 (]: SQL status: OK in 0.345 seconds
[0m18:57:33.236939 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:57:33.238358 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m18:57:33.239864 [debug] [Thread-7 (]: SQL status: OK in 0.017 seconds
[0m18:57:33.262272 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:57:33.264449 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m18:57:33.266111 [debug] [Thread-5 (]: SQL status: OK in 0.027 seconds
[0m18:57:33.270419 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m18:57:33.273187 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m18:57:33.274521 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:57:33.281166 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m18:57:33.282236 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m18:57:33.283487 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1904af0>]}
[0m18:57:33.285141 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.66s]
[0m18:57:33.286320 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m18:57:33.291347 [debug] [Thread-5 (]: SQL status: OK in 0.007 seconds
[0m18:57:33.306557 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:57:33.307697 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m18:57:33.309741 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m18:57:33.315822 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m18:57:33.324569 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1907be0>]}
[0m18:57:33.328313 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.71s]
[0m18:57:33.333791 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m18:57:33.372502 [debug] [Thread-4 (]: SQL status: OK in 0.485 seconds
[0m18:57:33.396564 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:57:33.398479 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m18:57:33.400469 [debug] [Thread-8 (]: SQL status: OK in 0.496 seconds
[0m18:57:33.413106 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:57:33.413947 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m18:57:33.415034 [debug] [Thread-4 (]: SQL status: OK in 0.013 seconds
[0m18:57:33.417983 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m18:57:33.420047 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:57:33.421922 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m18:57:33.423070 [debug] [Thread-8 (]: SQL status: OK in 0.008 seconds
[0m18:57:33.427060 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m18:57:33.428123 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:57:33.429334 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m18:57:33.436727 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m18:57:33.443959 [debug] [Thread-8 (]: SQL status: OK in 0.014 seconds
[0m18:57:33.441224 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:57:33.452061 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:57:33.455347 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m18:57:33.457229 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m18:57:33.460169 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m18:57:33.477599 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m18:57:33.472544 [debug] [Thread-8 (]: SQL status: OK in 0.005 seconds
[0m18:57:33.478816 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1905660>]}
[0m18:57:33.488111 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m18:57:33.495359 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1904d60>]}
[0m18:57:33.489682 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.88s]
[0m18:57:33.500197 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m18:57:33.498311 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.87s]
[0m18:57:33.518946 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m18:57:36.262145 [debug] [Thread-1 (]: SQL status: OK in 3.405 seconds
[0m18:57:36.269973 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:57:36.271068 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m18:57:36.273044 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m18:57:36.305171 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m18:57:36.306360 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:57:36.307207 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m18:57:36.341134 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m18:57:36.347143 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:57:36.380518 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m18:57:36.383605 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m18:57:36.387572 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m18:57:36.390305 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1907040>]}
[0m18:57:36.391869 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 3.81s]
[0m18:57:36.393471 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m18:57:38.307373 [debug] [Thread-3 (]: SQL status: OK in 5.428 seconds
[0m18:57:38.337586 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:57:38.356866 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m18:57:38.358769 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m18:57:38.364647 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m18:57:38.366108 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:57:38.366942 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m18:57:38.381963 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m18:57:38.388131 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:57:38.389379 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m18:57:38.390886 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m18:57:38.393533 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m18:57:38.394643 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e19079a0>]}
[0m18:57:38.395855 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 5.81s]
[0m18:57:38.396926 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m18:57:42.861322 [debug] [Thread-6 (]: SQL status: OK in 9.966 seconds
[0m18:57:42.868527 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:57:42.869871 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m18:57:42.901041 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m18:57:42.904694 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m18:57:42.905533 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:57:42.906248 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m18:57:42.949297 [debug] [Thread-6 (]: SQL status: OK in 0.042 seconds
[0m18:57:42.957744 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:57:42.958828 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m18:57:42.960302 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m18:57:42.963221 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m18:57:42.980643 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe2fe867cd0>]}
[0m18:57:42.982295 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 10.36s]
[0m18:57:42.983648 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m18:57:43.053464 [debug] [Thread-11 ]: SQL status: OK in 10.114 seconds
[0m18:57:43.060420 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:57:43.061492 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m18:57:43.063117 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m18:57:43.066574 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m18:57:43.067676 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:57:43.068984 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m18:57:43.082424 [debug] [Thread-11 ]: SQL status: OK in 0.012 seconds
[0m18:57:43.088098 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:57:43.089397 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m18:57:43.090797 [debug] [Thread-11 ]: SQL status: OK in 0.000 seconds
[0m18:57:43.093765 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m18:57:43.095000 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1904580>]}
[0m18:57:43.096324 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 10.45s]
[0m18:57:43.111134 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m18:57:43.282488 [debug] [Thread-12 ]: SQL status: OK in 10.329 seconds
[0m18:57:43.288836 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:57:43.289885 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m18:57:43.305062 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m18:57:43.308629 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m18:57:43.309393 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:57:43.310143 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m18:57:43.330322 [debug] [Thread-12 ]: SQL status: OK in 0.019 seconds
[0m18:57:43.335483 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:57:43.336294 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m18:57:43.337524 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m18:57:43.340598 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m18:57:43.341944 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e1907220>]}
[0m18:57:43.343405 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 10.70s]
[0m18:57:43.360724 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m18:57:43.744472 [debug] [Thread-13 ]: SQL status: OK in 10.783 seconds
[0m18:57:43.751897 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:57:43.753108 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m18:57:43.754913 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m18:57:43.758819 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m18:57:43.760000 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:57:43.761045 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m18:57:43.792058 [debug] [Thread-13 ]: SQL status: OK in 0.030 seconds
[0m18:57:43.797253 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:57:43.798243 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m18:57:43.799597 [debug] [Thread-13 ]: SQL status: OK in 0.000 seconds
[0m18:57:43.802379 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m18:57:43.803506 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3e19044f0>]}
[0m18:57:43.804803 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 11.16s]
[0m18:57:43.806128 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m18:57:43.977156 [debug] [Thread-9 (]: SQL status: OK in 11.070 seconds
[0m18:57:43.984748 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:57:43.986254 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m18:57:43.987984 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m18:57:43.994894 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m18:57:43.996044 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:57:43.996941 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m18:57:44.029172 [debug] [Thread-9 (]: SQL status: OK in 0.031 seconds
[0m18:57:44.034207 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:57:44.035022 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m18:57:44.036295 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m18:57:44.038954 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m18:57:44.040220 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3be913f10>]}
[0m18:57:44.041572 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 11.41s]
[0m18:57:44.043223 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m18:57:45.512222 [debug] [Thread-10 ]: SQL status: OK in 12.593 seconds
[0m18:57:45.516539 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:57:45.517164 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m18:57:45.518330 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m18:57:45.520549 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m18:57:45.521081 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:57:45.521559 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m18:57:45.526743 [debug] [Thread-10 ]: SQL status: OK in 0.005 seconds
[0m18:57:45.529961 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:57:45.530504 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m18:57:45.531537 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m18:57:45.533196 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m18:57:45.660209 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '0799545a-7008-4741-a10a-f17fb130eaa8', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3be92b670>]}
[0m18:57:45.661482 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 13.02s]
[0m18:57:45.662628 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m18:57:45.669084 [debug] [MainThread]: Using duckdb connection "master"
[0m18:57:45.670141 [debug] [MainThread]: On master: BEGIN
[0m18:57:45.670912 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m18:57:45.683700 [debug] [MainThread]: SQL status: OK in 0.013 seconds
[0m18:57:45.684678 [debug] [MainThread]: On master: COMMIT
[0m18:57:45.685348 [debug] [MainThread]: Using duckdb connection "master"
[0m18:57:45.685933 [debug] [MainThread]: On master: COMMIT
[0m18:57:45.687551 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m18:57:45.688464 [debug] [MainThread]: On master: Close
[0m18:57:45.696517 [debug] [MainThread]: Connection 'master' was properly closed.
[0m18:57:45.697757 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m18:57:45.698578 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m18:57:45.699271 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m18:57:45.700015 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m18:57:45.700794 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m18:57:45.701520 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m18:57:45.702195 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m18:57:45.702856 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m18:57:45.703510 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m18:57:45.704151 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m18:57:45.704741 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m18:57:45.705515 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m18:57:45.706368 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m18:57:45.707611 [info ] [MainThread]: 
[0m18:57:45.708643 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 13.45 seconds (13.45s).
[0m18:57:45.713427 [debug] [MainThread]: Command end result
[0m18:57:45.767810 [info ] [MainThread]: 
[0m18:57:45.768913 [info ] [MainThread]: [31mCompleted with 1 error and 0 warnings:[0m
[0m18:57:45.769878 [info ] [MainThread]: 
[0m18:57:45.770790 [error] [MainThread]:   Runtime Error in model bond_payment_info (models/bond_payment_info.sql)
  Parser Error: syntax error at or near ";"
[0m18:57:45.771478 [info ] [MainThread]: 
[0m18:57:45.771973 [info ] [MainThread]: Done. PASS=12 WARN=0 ERROR=1 SKIP=0 TOTAL=13
[0m18:57:45.774284 [debug] [MainThread]: Resource report: {"command_name": "run", "command_wall_clock_time": 14.906795, "process_user_time": 170.83435, "process_kernel_time": 12.213672, "process_mem_max_rss": "775656", "process_out_blocks": "15808", "command_success": false, "process_in_blocks": "0"}
[0m18:57:45.775084 [debug] [MainThread]: Command `dbt run` failed at 18:57:45.774938 after 14.91 seconds
[0m18:57:45.775611 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3ee74ef50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe3eda79a20>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fe2fe835e10>]}
[0m18:57:45.776177 [debug] [MainThread]: Flushing usage events
[0m18:58:05.532006 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96a423b040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96a29474f0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96a2947490>]}


============================== 18:58:05.535758 | 9aa29a32-7d2f-4c89-ab47-3158290025f1 ==============================
[0m18:58:05.535758 [info ] [MainThread]: Running with dbt=1.8.7
[0m18:58:05.536493 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt run', 'introspect': 'True', 'target_path': 'None', 'log_format': 'default', 'send_anonymous_usage_stats': 'True'}
[0m18:58:05.879437 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f969f6d4d60>]}
[0m18:58:05.988007 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f969f65ac80>]}
[0m18:58:05.993430 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m18:58:06.013040 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m18:58:06.167955 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m18:58:06.169491 [debug] [MainThread]: Partial parsing: updated file: mta://models/bond_payment_info.sql
[0m18:58:06.577253 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96973b0130>]}
[0m18:58:06.683438 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96975b27a0>]}
[0m18:58:06.684265 [info ] [MainThread]: Found 13 models, 8 sources, 416 macros
[0m18:58:06.685033 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96975b08e0>]}
[0m18:58:06.687648 [info ] [MainThread]: 
[0m18:58:06.688484 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m18:58:06.696973 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m18:58:06.822518 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m18:58:06.823525 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m18:58:06.824236 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m18:58:06.851280 [debug] [ThreadPool]: SQL status: OK in 0.027 seconds
[0m18:58:06.854443 [debug] [ThreadPool]: On list_mtastats: Close
[0m18:58:06.862101 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m18:58:06.863404 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m18:58:06.876597 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:58:06.877376 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m18:58:06.877960 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m18:58:06.890216 [debug] [ThreadPool]: SQL status: OK in 0.012 seconds
[0m18:58:06.892576 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:58:06.893374 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m18:58:06.895136 [debug] [ThreadPool]: SQL status: OK in 0.001 seconds
[0m18:58:06.895791 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:58:06.896268 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m18:58:06.897220 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m18:58:06.898350 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m18:58:06.898787 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m18:58:06.899167 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m18:58:06.899859 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m18:58:06.900318 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m18:58:06.905760 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m18:58:06.914521 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m18:58:06.915044 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m18:58:06.915459 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m18:58:06.924294 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m18:58:06.924800 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m18:58:06.925209 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m18:58:06.950136 [debug] [ThreadPool]: SQL status: OK in 0.024 seconds
[0m18:58:06.956819 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m18:58:06.957591 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m18:58:06.958025 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m18:58:06.964738 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96a4522d40>]}
[0m18:58:06.965372 [debug] [MainThread]: Using duckdb connection "master"
[0m18:58:06.965780 [debug] [MainThread]: On master: BEGIN
[0m18:58:06.966194 [debug] [MainThread]: Opening a new connection, currently in state init
[0m18:58:06.977999 [debug] [MainThread]: SQL status: OK in 0.012 seconds
[0m18:58:06.978787 [debug] [MainThread]: On master: COMMIT
[0m18:58:06.979370 [debug] [MainThread]: Using duckdb connection "master"
[0m18:58:06.980010 [debug] [MainThread]: On master: COMMIT
[0m18:58:06.981051 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m18:58:06.981636 [debug] [MainThread]: On master: Close
[0m18:58:06.984912 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m18:58:06.985719 [info ] [MainThread]: 
[0m18:58:07.001790 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m18:58:07.002955 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m18:58:07.004227 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m18:58:07.005923 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m18:58:07.007232 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m18:58:07.008509 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m18:58:07.010428 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m18:58:07.012209 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m18:58:07.013765 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m18:58:07.016062 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m18:58:07.018085 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m18:58:07.019040 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m18:58:07.020521 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m18:58:07.021902 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m18:58:07.023009 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m18:58:07.024337 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m18:58:07.025728 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m18:58:07.026905 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m18:58:07.027723 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m18:58:07.028636 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m18:58:07.029877 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m18:58:07.031705 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m18:58:07.033360 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m18:58:07.034522 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m18:58:07.047541 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m18:58:07.050335 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m18:58:07.052362 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m18:58:07.053741 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m18:58:07.054822 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m18:58:07.056635 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m18:58:07.057724 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m18:58:07.060828 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m18:58:07.061910 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m18:58:07.062909 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m18:58:07.063921 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m18:58:07.064739 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m18:58:07.065722 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m18:58:07.067069 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m18:58:07.069332 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m18:58:07.070988 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m18:58:07.071833 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m18:58:07.073160 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m18:58:07.074293 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m18:58:07.075305 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m18:58:07.076549 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m18:58:07.077549 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m18:58:07.078538 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m18:58:07.079274 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m18:58:07.083217 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m18:58:07.084189 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m18:58:07.085021 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m18:58:07.085909 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m18:58:07.086730 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m18:58:07.111171 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m18:58:07.134902 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m18:58:07.141601 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m18:58:07.144975 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m18:58:07.145918 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m18:58:07.146729 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m18:58:07.153544 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m18:58:07.156565 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m18:58:07.162391 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m18:58:07.163258 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m18:58:07.167988 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m18:58:07.172452 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m18:58:07.176991 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m18:58:07.182953 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m18:58:07.187661 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m18:58:07.188879 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m18:58:07.193019 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m18:58:07.193916 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:07.197965 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m18:58:07.200898 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:58:07.206068 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m18:58:07.207768 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m18:58:07.209266 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m18:58:07.209967 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m18:58:07.210772 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m18:58:07.213869 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m18:58:07.214523 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m18:58:07.215450 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m18:58:07.221076 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m18:58:07.222415 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m18:58:07.223313 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m18:58:07.224580 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m18:58:07.225880 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m18:58:07.227022 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:07.232614 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m18:58:07.239831 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m18:58:07.246003 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m18:58:07.251906 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m18:58:07.257549 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m18:58:07.263091 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m18:58:07.268620 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m18:58:07.269889 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m18:58:07.276878 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m18:58:07.276026 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m18:58:07.278500 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:07.283691 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m18:58:07.284605 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m18:58:07.286423 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.287273 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:07.289100 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:07.292356 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:07.293413 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:07.294525 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:07.306804 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:07.308278 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m18:58:07.310259 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:07.311530 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m18:58:07.314355 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m18:58:07.315520 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:07.316887 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m18:58:07.317971 [debug] [Thread-1 (]: SQL status: OK in 0.048 seconds
[0m18:58:07.319233 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m18:58:07.320707 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m18:58:07.321673 [debug] [Thread-2 (]: SQL status: OK in 0.045 seconds
[0m18:58:07.322693 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m18:58:07.323731 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m18:58:07.324715 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m18:58:07.325691 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m18:58:07.326628 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m18:58:07.328054 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m18:58:07.329186 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m18:58:07.330071 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m18:58:07.331050 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:07.332248 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m18:58:07.333594 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m18:58:07.334700 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:58:07.335631 [debug] [Thread-3 (]: SQL status: OK in 0.024 seconds
[0m18:58:07.336645 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m18:58:07.337716 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m18:58:07.338770 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m18:58:07.340731 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m18:58:07.342625 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m18:58:07.344519 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m18:58:07.347352 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        mta_operations_statement
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger
    );
  
  
[0m18:58:07.350382 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:07.352398 [debug] [Thread-4 (]: SQL status: OK in 0.027 seconds
[0m18:58:07.360171 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m18:58:07.362693 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:07.364170 [debug] [Thread-5 (]: SQL status: OK in 0.036 seconds
[0m18:58:07.368053 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m18:58:07.370881 [debug] [Thread-8 (]: SQL status: OK in 0.041 seconds
[0m18:58:07.372227 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.375962 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:07.378314 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    mta_operations_statement
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m18:58:07.379264 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m18:58:07.380874 [debug] [Thread-7 (]: SQL status: OK in 0.049 seconds
[0m18:58:07.381460 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:07.382133 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m18:58:07.384998 [debug] [Thread-6 (]: SQL status: OK in 0.051 seconds
[0m18:58:07.386178 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:07.388190 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m18:58:07.397062 [debug] [Thread-9 (]: SQL status: OK in 0.060 seconds
[0m18:58:07.398521 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:07.399673 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m18:58:07.402307 [debug] [Thread-10 ]: SQL status: OK in 0.064 seconds
[0m18:58:07.403485 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:07.404677 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m18:58:07.410010 [debug] [Thread-11 ]: SQL status: OK in 0.071 seconds
[0m18:58:07.411225 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:07.412344 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m18:58:07.421828 [debug] [Thread-12 ]: SQL status: OK in 0.081 seconds
[0m18:58:07.422942 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:07.424059 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m18:58:07.426647 [debug] [Thread-13 ]: SQL status: OK in 0.084 seconds
[0m18:58:07.427542 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:07.428165 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m18:58:07.627695 [debug] [Thread-5 (]: SQL status: OK in 0.247 seconds
[0m18:58:07.655658 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.656848 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year" rename to "expense_type_per_year__dbt_backup"
[0m18:58:07.658663 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m18:58:07.670609 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.673310 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m18:58:07.676198 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m18:58:07.696691 [debug] [Thread-7 (]: SQL status: OK in 0.314 seconds
[0m18:58:07.730262 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:07.788117 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency" rename to "labor_expenses_per_agency__dbt_backup"
[0m18:58:07.803049 [debug] [Thread-7 (]: SQL status: OK in 0.008 seconds
[0m18:58:07.800844 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m18:58:07.817936 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.816565 [debug] [Thread-8 (]: SQL status: OK in 0.436 seconds
[0m18:58:07.819018 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m18:58:07.814591 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:07.843102 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:07.846686 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m18:58:07.849708 [debug] [Thread-4 (]: SQL status: OK in 0.475 seconds
[0m18:58:07.854041 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023" rename to "largest_expense_differences_2023__dbt_backup"
[0m18:58:07.859316 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:07.861006 [debug] [Thread-7 (]: SQL status: OK in 0.006 seconds
[0m18:58:07.880206 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m18:58:07.875242 [debug] [Thread-5 (]: SQL status: OK in 0.030 seconds
[0m18:58:07.876286 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership" rename to "daily_ridership__dbt_backup"
[0m18:58:07.882525 [debug] [Thread-8 (]: SQL status: OK in 0.021 seconds
[0m18:58:07.883253 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:07.905046 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m18:58:07.918732 [debug] [Thread-4 (]: SQL status: OK in 0.025 seconds
[0m18:58:07.920186 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m18:58:07.921221 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:07.922419 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m18:58:07.952140 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:07.955746 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m18:58:07.960347 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m18:58:07.969845 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m18:58:07.971436 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m18:58:07.976402 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m18:58:07.981789 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:07.983000 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m18:58:07.979608 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m18:58:07.986091 [debug] [Thread-7 (]: SQL status: OK in 0.033 seconds
[0m18:58:07.988826 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:07.997058 [debug] [Thread-5 (]: SQL status: OK in 0.036 seconds
[0m18:58:08.008309 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m18:58:08.012621 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m18:58:08.013583 [debug] [Thread-8 (]: SQL status: OK in 0.028 seconds
[0m18:58:08.026188 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m18:58:08.068877 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f969f63ec80>]}
[0m18:58:08.027959 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m18:58:08.062973 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m18:58:08.088315 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m18:58:08.084715 [debug] [Thread-4 (]: SQL status: OK in 0.061 seconds
[0m18:58:08.070483 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 1.00s]
[0m18:58:08.109401 [debug] [Thread-7 (]: SQL status: OK in 0.037 seconds
[0m18:58:08.151269 [debug] [Thread-8 (]: SQL status: OK in 0.062 seconds
[0m18:58:08.160377 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m18:58:08.182706 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m18:58:08.190495 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m18:58:08.188773 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m18:58:08.186058 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m18:58:08.213889 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697507eb0>]}
[0m18:58:08.215551 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 1.15s]
[0m18:58:08.217115 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m18:58:08.210291 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697506680>]}
[0m18:58:08.219108 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 1.14s]
[0m18:58:08.220812 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m18:58:08.229478 [debug] [Thread-2 (]: SQL status: OK in 0.870 seconds
[0m18:58:08.240222 [debug] [Thread-4 (]: SQL status: OK in 0.049 seconds
[0m18:58:08.268227 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m18:58:08.282787 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95a1b9ea70>]}
[0m18:58:08.284655 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 1.23s]
[0m18:58:08.286157 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m18:58:08.290469 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:58:08.291769 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
alter table "mtastats"."main"."bond_payment_info__dbt_tmp" rename to "bond_payment_info"
[0m18:58:08.294141 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m18:58:08.297649 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m18:58:08.298527 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:58:08.299251 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m18:58:08.327740 [debug] [Thread-2 (]: SQL status: OK in 0.027 seconds
[0m18:58:08.337330 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m18:58:08.368252 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
drop table if exists "mtastats"."main"."bond_payment_info__dbt_backup" cascade
[0m18:58:08.380440 [debug] [Thread-2 (]: SQL status: OK in 0.011 seconds
[0m18:58:08.400244 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m18:58:08.401568 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697405ed0>]}
[0m18:58:08.402820 [info ] [Thread-2 (]: 2 of 13 OK created sql table model main.bond_payment_info ...................... [[32mOK[0m in 1.39s]
[0m18:58:08.421505 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m18:58:09.753344 [debug] [Thread-1 (]: SQL status: OK in 2.395 seconds
[0m18:58:09.761096 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:09.770330 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day" rename to "avg_riders_per_day__dbt_backup"
[0m18:58:09.772089 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m18:58:09.778693 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:09.790635 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m18:58:09.793219 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m18:58:09.803303 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m18:58:09.804186 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:09.804892 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m18:58:09.830985 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m18:58:09.837324 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m18:58:09.838221 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m18:58:09.866578 [debug] [Thread-1 (]: SQL status: OK in 0.027 seconds
[0m18:58:09.869509 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m18:58:09.899003 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96974051e0>]}
[0m18:58:09.900880 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.89s]
[0m18:58:09.902412 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m18:58:13.499000 [debug] [Thread-3 (]: SQL status: OK in 6.132 seconds
[0m18:58:13.506045 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:13.510168 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times" rename to "busiest_specific_times__dbt_backup"
[0m18:58:13.512091 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m18:58:13.535835 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:13.550248 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m18:58:13.554410 [debug] [Thread-3 (]: SQL status: OK in 0.003 seconds
[0m18:58:13.558361 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m18:58:13.559347 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:13.560296 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m18:58:13.585559 [debug] [Thread-3 (]: SQL status: OK in 0.024 seconds
[0m18:58:13.593627 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m18:58:13.594585 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m18:58:13.613091 [debug] [Thread-3 (]: SQL status: OK in 0.018 seconds
[0m18:58:13.616268 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m18:58:13.630794 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95a1be4610>]}
[0m18:58:13.632170 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 6.60s]
[0m18:58:13.643324 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m18:58:14.043816 [debug] [Thread-6 (]: SQL status: OK in 6.654 seconds
[0m18:58:14.050378 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:14.080448 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro" rename to "fare_class_boro__dbt_backup"
[0m18:58:14.082349 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m18:58:14.088770 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:14.090188 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m18:58:14.091678 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m18:58:14.095401 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m18:58:14.096237 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:14.096935 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m18:58:14.131851 [debug] [Thread-6 (]: SQL status: OK in 0.034 seconds
[0m18:58:14.139884 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m18:58:14.158302 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m18:58:14.172665 [debug] [Thread-6 (]: SQL status: OK in 0.013 seconds
[0m18:58:14.185196 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m18:58:14.186479 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9694773430>]}
[0m18:58:14.187779 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 7.12s]
[0m18:58:14.188985 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m18:58:15.287795 [debug] [Thread-10 ]: SQL status: OK in 7.882 seconds
[0m18:58:15.294308 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:15.295286 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase" rename to "omny_adoption_increase__dbt_backup"
[0m18:58:15.320195 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m18:58:15.326509 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:15.356950 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m18:58:15.359806 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m18:58:15.363757 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m18:58:15.364924 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:15.390036 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m18:58:15.439824 [debug] [Thread-10 ]: SQL status: OK in 0.029 seconds
[0m18:58:15.446027 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m18:58:15.460616 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m18:58:15.466869 [debug] [Thread-12 ]: SQL status: OK in 8.042 seconds
[0m18:58:15.474233 [debug] [Thread-10 ]: SQL status: OK in 0.013 seconds
[0m18:58:15.477076 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m18:58:15.478221 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697504ac0>]}
[0m18:58:15.480988 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 8.41s]
[0m18:58:15.482391 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m18:58:15.473654 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:15.483769 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station" rename to "total_riders_per_station__dbt_backup"
[0m18:58:15.485385 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m18:58:15.497211 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:15.498327 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m18:58:15.499915 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m18:58:15.504338 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m18:58:15.505322 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:15.506238 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m18:58:15.543753 [debug] [Thread-12 ]: SQL status: OK in 0.035 seconds
[0m18:58:15.551510 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m18:58:15.552492 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m18:58:15.586688 [debug] [Thread-12 ]: SQL status: OK in 0.033 seconds
[0m18:58:15.589809 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m18:58:15.591532 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f969472bca0>]}
[0m18:58:15.592979 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 8.52s]
[0m18:58:15.594327 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m18:58:16.368099 [debug] [Thread-9 (]: SQL status: OK in 8.967 seconds
[0m18:58:16.374943 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:16.390756 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station" rename to "omny_adoption_by_station__dbt_backup"
[0m18:58:16.392385 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m18:58:16.398642 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:16.399670 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m18:58:16.401222 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m18:58:16.405159 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m18:58:16.406023 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:16.407064 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m18:58:16.441355 [debug] [Thread-9 (]: SQL status: OK in 0.033 seconds
[0m18:58:16.446582 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m18:58:16.447579 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m18:58:16.460972 [debug] [Thread-9 (]: SQL status: OK in 0.012 seconds
[0m18:58:16.464082 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m18:58:16.465405 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96975065f0>]}
[0m18:58:16.466740 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 9.39s]
[0m18:58:16.468087 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m18:58:18.095211 [debug] [Thread-13 ]: SQL status: OK in 10.666 seconds
[0m18:58:18.108262 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:18.110599 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station" rename to "weekly_riders_per_station__dbt_backup"
[0m18:58:18.113656 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m18:58:18.127625 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:18.130436 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m18:58:18.132964 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m18:58:18.139550 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m18:58:18.141130 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:18.143390 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m18:58:18.194807 [debug] [Thread-13 ]: SQL status: OK in 0.049 seconds
[0m18:58:18.232861 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m18:58:18.234766 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m18:58:18.270570 [debug] [Thread-13 ]: SQL status: OK in 0.030 seconds
[0m18:58:18.276402 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m18:58:18.278889 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697504820>]}
[0m18:58:18.281548 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 11.20s]
[0m18:58:18.285040 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m18:58:20.684115 [debug] [Thread-11 ]: SQL status: OK in 13.271 seconds
[0m18:58:20.692363 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:20.693197 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats" rename to "subway_station_stats__dbt_backup"
[0m18:58:20.694876 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m18:58:20.699531 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:20.700419 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m18:58:20.701848 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m18:58:20.704773 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m18:58:20.705496 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:20.706161 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m18:58:20.713175 [debug] [Thread-11 ]: SQL status: OK in 0.006 seconds
[0m18:58:20.717181 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m18:58:20.717890 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m18:58:20.722582 [debug] [Thread-11 ]: SQL status: OK in 0.004 seconds
[0m18:58:20.724758 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m18:58:20.874291 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '9aa29a32-7d2f-4c89-ab47-3158290025f1', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f95a1bd1ab0>]}
[0m18:58:20.876442 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 13.80s]
[0m18:58:20.877712 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m18:58:20.887294 [debug] [MainThread]: Using duckdb connection "master"
[0m18:58:20.888398 [debug] [MainThread]: On master: BEGIN
[0m18:58:20.889188 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m18:58:20.905054 [debug] [MainThread]: SQL status: OK in 0.016 seconds
[0m18:58:20.906162 [debug] [MainThread]: On master: COMMIT
[0m18:58:20.907993 [debug] [MainThread]: Using duckdb connection "master"
[0m18:58:20.908845 [debug] [MainThread]: On master: COMMIT
[0m18:58:20.911257 [debug] [MainThread]: SQL status: OK in 0.001 seconds
[0m18:58:20.912418 [debug] [MainThread]: On master: Close
[0m18:58:20.920563 [debug] [MainThread]: Connection 'master' was properly closed.
[0m18:58:20.922000 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m18:58:20.922895 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m18:58:20.923674 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m18:58:20.924428 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m18:58:20.928153 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m18:58:20.931709 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m18:58:20.933711 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m18:58:20.934968 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m18:58:20.936091 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m18:58:20.937298 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m18:58:20.938389 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m18:58:20.939265 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m18:58:20.940003 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m18:58:20.941134 [info ] [MainThread]: 
[0m18:58:20.941903 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 14.25 seconds (14.25s).
[0m18:58:20.947107 [debug] [MainThread]: Command end result
[0m18:58:21.070067 [info ] [MainThread]: 
[0m18:58:21.071051 [info ] [MainThread]: [32mCompleted successfully[0m
[0m18:58:21.071750 [info ] [MainThread]: 
[0m18:58:21.072405 [info ] [MainThread]: Done. PASS=13 WARN=0 ERROR=0 SKIP=0 TOTAL=13
[0m18:58:21.074039 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 15.639669, "process_user_time": 188.77, "process_kernel_time": 3.722381, "process_mem_max_rss": "671732", "process_in_blocks": "632", "process_out_blocks": "16952"}
[0m18:58:21.075064 [debug] [MainThread]: Command `dbt run` succeeded at 18:58:21.074870 after 15.64 seconds
[0m18:58:21.075751 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96a423b040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f96973012a0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f9697301a20>]}
[0m18:58:21.076419 [debug] [MainThread]: Flushing usage events
[0m00:29:57.902318 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc81395af50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc8120ab430>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc8120ab3d0>]}


============================== 00:29:57.906667 | 7b4e347e-891b-4688-9728-417592619d0d ==============================
[0m00:29:57.906667 [info ] [MainThread]: Running with dbt=1.8.7
[0m00:29:57.907139 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'warn_error': 'None', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'version_check': 'True', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'log_format': 'default', 'static_parser': 'True', 'invocation_command': 'dbt run', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'introspect': 'True', 'send_anonymous_usage_stats': 'True'}
[0m00:29:58.097907 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc811f965c0>]}
[0m00:29:58.151713 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc811f29e70>]}
[0m00:29:58.154940 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m00:29:58.163474 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m00:29:58.261268 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 1 files changed.
[0m00:29:58.262394 [debug] [MainThread]: Partial parsing: updated file: mta://models/sources.yml
[0m00:29:58.598352 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc8049da950>]}
[0m00:29:58.732533 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc8048f2bc0>]}
[0m00:29:58.733738 [info ] [MainThread]: Found 13 models, 9 sources, 416 macros
[0m00:29:58.734239 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc8048f2b30>]}
[0m00:29:58.736324 [info ] [MainThread]: 
[0m00:29:58.736959 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m00:29:58.742732 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m00:29:58.802741 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m00:29:58.803138 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m00:29:58.803405 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:29:58.816481 [debug] [ThreadPool]: SQL status: OK in 0.013 seconds
[0m00:29:58.817559 [debug] [ThreadPool]: On list_mtastats: Close
[0m00:29:58.820888 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m00:29:58.821839 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m00:29:58.826346 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:29:58.826631 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m00:29:58.826861 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:29:58.834300 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:29:58.835295 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:29:58.835562 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m00:29:58.835979 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:29:58.836211 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:29:58.836417 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m00:29:58.836872 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:29:58.837462 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:29:58.837701 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:29:58.837915 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:29:58.838300 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:29:58.838538 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m00:29:58.841614 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m00:29:58.845442 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:29:58.845768 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m00:29:58.846046 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:29:58.852696 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:29:58.853086 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:29:58.853369 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m00:29:58.871165 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m00:29:58.872713 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m00:29:58.873923 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m00:29:58.874217 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m00:29:58.878002 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806b69990>]}
[0m00:29:58.878545 [debug] [MainThread]: Using duckdb connection "master"
[0m00:29:58.878834 [debug] [MainThread]: On master: BEGIN
[0m00:29:58.879116 [debug] [MainThread]: Opening a new connection, currently in state init
[0m00:29:58.885280 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m00:29:58.885692 [debug] [MainThread]: On master: COMMIT
[0m00:29:58.885955 [debug] [MainThread]: Using duckdb connection "master"
[0m00:29:58.886188 [debug] [MainThread]: On master: COMMIT
[0m00:29:58.886592 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:29:58.886845 [debug] [MainThread]: On master: Close
[0m00:29:58.888668 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m00:29:58.889003 [info ] [MainThread]: 
[0m00:29:58.899601 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m00:29:58.900427 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m00:29:58.901142 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m00:29:58.901876 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m00:29:58.902424 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m00:29:58.903171 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m00:29:58.904160 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m00:29:58.904598 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m00:29:58.905216 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m00:29:58.905935 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m00:29:58.906393 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m00:29:58.906992 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m00:29:58.907522 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m00:29:58.908094 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m00:29:58.908501 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m00:29:58.909139 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m00:29:58.910032 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m00:29:58.911121 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m00:29:58.912116 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m00:29:58.916116 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m00:29:58.916932 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m00:29:58.917787 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m00:29:58.918683 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m00:29:58.920197 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m00:29:58.921300 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m00:29:58.921935 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m00:29:58.922673 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m00:29:58.933233 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m00:29:58.934519 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m00:29:58.935859 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m00:29:58.936691 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m00:29:58.937516 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m00:29:58.938467 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m00:29:58.939246 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m00:29:58.939986 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m00:29:58.945240 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m00:29:58.947137 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m00:29:58.951073 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m00:29:58.953133 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m00:29:58.954917 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m00:29:58.956994 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m00:29:58.957678 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m00:29:58.958658 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m00:29:58.961822 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m00:29:58.962818 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m00:29:58.964000 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m00:29:58.964779 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m00:29:58.966325 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m00:29:58.969883 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m00:29:58.977458 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m00:29:58.979278 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m00:29:58.980099 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m00:29:58.981154 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m00:29:58.982124 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m00:29:58.985901 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m00:29:58.987115 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m00:29:58.988734 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m00:29:58.990926 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m00:29:58.999245 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m00:29:59.012097 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m00:29:59.022207 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m00:29:59.027771 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m00:29:59.030472 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m00:29:59.033617 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m00:29:59.036267 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m00:29:59.038821 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m00:29:59.039359 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m00:29:59.042388 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m00:29:59.045290 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m00:29:59.049039 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m00:29:59.049563 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m00:29:59.051951 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m00:29:59.054921 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m00:29:59.056753 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m00:29:59.057323 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m00:29:59.059401 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m00:29:59.063249 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m00:29:59.063833 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m00:29:59.064480 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:29:59.068116 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m00:29:59.068767 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:29:59.069930 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m00:29:59.070673 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m00:29:59.071048 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m00:29:59.071672 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m00:29:59.074982 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m00:29:59.078190 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m00:29:59.079027 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:29:59.082885 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m00:29:59.085868 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m00:29:59.086431 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m00:29:59.087036 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:29:59.087503 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m00:29:59.090493 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m00:29:59.091225 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:29:59.096316 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m00:29:59.100099 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m00:29:59.103882 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m00:29:59.104960 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m00:29:59.105835 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:29:59.107687 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m00:29:59.108193 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:29:59.108878 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m00:29:59.109288 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:29:59.109665 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:29:59.110162 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m00:29:59.110936 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m00:29:59.111922 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:29:59.112937 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m00:29:59.113692 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:29:59.114277 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:29:59.114725 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m00:29:59.115167 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:29:59.122754 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m00:29:59.123290 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m00:29:59.123869 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m00:29:59.124422 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m00:29:59.125139 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m00:29:59.125781 [debug] [Thread-2 (]: SQL status: OK in 0.018 seconds
[0m00:29:59.126150 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m00:29:59.126795 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m00:29:59.127542 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m00:29:59.127978 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m00:29:59.128540 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m00:29:59.129698 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m00:29:59.130385 [debug] [Thread-1 (]: SQL status: OK in 0.020 seconds
[0m00:29:59.130800 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m00:29:59.131201 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m00:29:59.131890 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:29:59.132400 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m00:29:59.133020 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m00:29:59.133710 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m00:29:59.134515 [debug] [Thread-3 (]: SQL status: OK in 0.022 seconds
[0m00:29:59.135100 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m00:29:59.135617 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:29:59.136417 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger
    );
  
  
[0m00:29:59.137588 [debug] [Thread-4 (]: SQL status: OK in 0.014 seconds
[0m00:29:59.138442 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:29:59.139241 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:29:59.142279 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:29:59.143013 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m00:29:59.143425 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:29:59.145315 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m00:29:59.145908 [debug] [Thread-7 (]: SQL status: OK in 0.018 seconds
[0m00:29:59.146422 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:29:59.148083 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:29:59.149199 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m00:29:59.149782 [debug] [Thread-8 (]: SQL status: OK in 0.020 seconds
[0m00:29:59.150310 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m00:29:59.151289 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:29:59.152817 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m00:29:59.155243 [debug] [Thread-6 (]: SQL status: OK in 0.024 seconds
[0m00:29:59.155910 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:29:59.156352 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:29:59.157773 [debug] [Thread-9 (]: SQL status: OK in 0.027 seconds
[0m00:29:59.158264 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:29:59.158717 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m00:29:59.160849 [debug] [Thread-10 ]: SQL status: OK in 0.028 seconds
[0m00:29:59.161740 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:29:59.164741 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m00:29:59.169899 [debug] [Thread-11 ]: SQL status: OK in 0.037 seconds
[0m00:29:59.171340 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:29:59.173618 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m00:29:59.181713 [debug] [Thread-12 ]: SQL status: OK in 0.047 seconds
[0m00:29:59.183147 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:29:59.184126 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:29:59.200212 [debug] [Thread-13 ]: SQL status: OK in 0.065 seconds
[0m00:29:59.200926 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:29:59.201360 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m00:29:59.376249 [debug] [Thread-5 (]: SQL status: OK in 0.225 seconds
[0m00:29:59.404881 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:29:59.405591 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m00:29:59.410119 [debug] [Thread-5 (]: SQL status: OK in 0.004 seconds
[0m00:29:59.478808 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:29:59.479855 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:29:59.480327 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:29:59.485632 [debug] [Thread-4 (]: SQL status: OK in 0.338 seconds
[0m00:29:59.491769 [debug] [Thread-5 (]: SQL status: OK in 0.011 seconds
[0m00:29:59.494842 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:29:59.495630 [debug] [Thread-7 (]: SQL status: OK in 0.343 seconds
[0m00:29:59.522176 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:29:59.522861 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m00:29:59.544228 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m00:29:59.549048 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:29:59.550694 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m00:29:59.552445 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m00:29:59.558358 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:29:59.558921 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:29:59.559451 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:29:59.560390 [debug] [Thread-5 (]: SQL status: OK in 0.010 seconds
[0m00:29:59.562316 [debug] [Thread-7 (]: SQL status: OK in 0.011 seconds
[0m00:29:59.571659 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:29:59.576199 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m00:29:59.577169 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:29:59.577954 [debug] [Thread-4 (]: SQL status: OK in 0.015 seconds
[0m00:29:59.580874 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc804941c60>]}
[0m00:29:59.581955 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:29:59.592070 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:29:59.593164 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.64s]
[0m00:29:59.596485 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m00:29:59.597893 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m00:29:59.602535 [debug] [Thread-7 (]: SQL status: OK in 0.007 seconds
[0m00:29:59.622181 [debug] [Thread-4 (]: SQL status: OK in 0.022 seconds
[0m00:29:59.625933 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m00:29:59.628119 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:29:59.633685 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806a55ed0>]}
[0m00:29:59.634622 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m00:29:59.635769 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.71s]
[0m00:29:59.638540 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m00:29:59.639509 [debug] [Thread-7 (]: SQL status: OK in 0.003 seconds
[0m00:29:59.642475 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m00:29:59.643653 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806a55090>]}
[0m00:29:59.644792 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.69s]
[0m00:29:59.645907 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m00:29:59.688122 [debug] [Thread-8 (]: SQL status: OK in 0.534 seconds
[0m00:29:59.710902 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:29:59.712288 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m00:29:59.714937 [debug] [Thread-8 (]: SQL status: OK in 0.002 seconds
[0m00:29:59.723049 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:29:59.723946 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:29:59.724360 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:29:59.729745 [debug] [Thread-8 (]: SQL status: OK in 0.005 seconds
[0m00:29:59.733861 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:29:59.734335 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m00:29:59.735626 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m00:29:59.737657 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m00:29:59.738803 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806a56b30>]}
[0m00:29:59.739579 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.78s]
[0m00:29:59.740336 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m00:30:00.561637 [debug] [Thread-2 (]: SQL status: OK in 1.421 seconds
[0m00:30:00.567623 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:30:00.568574 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
alter table "mtastats"."main"."bond_payment_info__dbt_tmp" rename to "bond_payment_info"
[0m00:30:00.570094 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m00:30:00.572535 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:30:00.573612 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:30:00.574898 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:30:00.580815 [debug] [Thread-2 (]: SQL status: OK in 0.005 seconds
[0m00:30:00.583996 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:30:00.586488 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
drop table if exists "mtastats"."main"."bond_payment_info__dbt_backup" cascade
[0m00:30:00.587928 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m00:30:00.590313 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m00:30:00.591295 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806ce9720>]}
[0m00:30:00.592383 [info ] [Thread-2 (]: 2 of 13 OK created sql table model main.bond_payment_info ...................... [[32mOK[0m in 1.69s]
[0m00:30:00.593853 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m00:30:00.684317 [debug] [Thread-3 (]: SQL status: OK in 1.537 seconds
[0m00:30:00.690399 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:30:00.692997 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m00:30:00.696496 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m00:30:00.700914 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:30:00.701895 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:30:00.702516 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:30:00.707927 [debug] [Thread-3 (]: SQL status: OK in 0.005 seconds
[0m00:30:00.711589 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:30:00.714957 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m00:30:00.717261 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m00:30:00.719956 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m00:30:00.721175 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806ceb3d0>]}
[0m00:30:00.722459 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 1.81s]
[0m00:30:00.723567 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m00:30:05.202835 [debug] [Thread-1 (]: SQL status: OK in 6.058 seconds
[0m00:30:05.254306 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:30:05.255436 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m00:30:05.257143 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:30:05.260846 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:30:05.282100 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:30:05.283031 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:30:05.321212 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m00:30:05.327826 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:30:05.328622 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m00:30:05.330026 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m00:30:05.334407 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m00:30:05.350599 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806ce99f0>]}
[0m00:30:05.352901 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 6.45s]
[0m00:30:05.354375 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m00:30:07.346054 [debug] [Thread-9 (]: SQL status: OK in 8.186 seconds
[0m00:30:07.370507 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:30:07.371554 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m00:30:07.372904 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:30:07.378887 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:30:07.382437 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:30:07.383269 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:30:07.404976 [debug] [Thread-9 (]: SQL status: OK in 0.021 seconds
[0m00:30:07.409993 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:30:07.410878 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m00:30:07.412607 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:30:07.415779 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m00:30:07.430404 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc806acae90>]}
[0m00:30:07.433360 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 8.47s]
[0m00:30:07.434925 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m00:30:07.583420 [debug] [Thread-12 ]: SQL status: OK in 8.398 seconds
[0m00:30:07.589542 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:30:07.610169 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m00:30:07.612010 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m00:30:07.615245 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:30:07.626623 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:30:07.627477 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:30:07.636647 [debug] [Thread-12 ]: SQL status: OK in 0.008 seconds
[0m00:30:07.641588 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:30:07.642385 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m00:30:07.643538 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m00:30:07.645806 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m00:30:07.646874 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc7e07cf880>]}
[0m00:30:07.648214 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 8.68s]
[0m00:30:07.649401 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m00:30:07.846331 [debug] [Thread-10 ]: SQL status: OK in 8.679 seconds
[0m00:30:07.852815 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:30:07.857874 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m00:30:07.859602 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m00:30:07.862923 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:30:07.863671 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:30:07.864306 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:30:07.875692 [debug] [Thread-10 ]: SQL status: OK in 0.010 seconds
[0m00:30:07.881171 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:30:07.881984 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m00:30:07.883194 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m00:30:07.886000 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m00:30:07.910964 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc804942980>]}
[0m00:30:07.913142 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 8.95s]
[0m00:30:07.914716 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m00:30:12.220571 [debug] [Thread-6 (]: SQL status: OK in 13.063 seconds
[0m00:30:12.230107 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:30:12.231800 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m00:30:12.234471 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m00:30:12.237375 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:30:12.238737 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:30:12.239604 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:30:12.240998 [debug] [Thread-13 ]: SQL status: OK in 13.039 seconds
[0m00:30:12.251992 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:30:12.253373 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m00:30:12.254409 [debug] [Thread-6 (]: SQL status: OK in 0.014 seconds
[0m00:30:12.260812 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:30:12.261518 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m00:30:12.262052 [debug] [Thread-13 ]: SQL status: OK in 0.007 seconds
[0m00:30:12.264144 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:30:12.264590 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:30:12.265050 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:30:12.265650 [debug] [Thread-6 (]: SQL status: OK in 0.003 seconds
[0m00:30:12.267147 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m00:30:12.268094 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc7c8798820>]}
[0m00:30:12.269044 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 13.32s]
[0m00:30:12.270049 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m00:30:12.307903 [debug] [Thread-13 ]: SQL status: OK in 0.042 seconds
[0m00:30:12.311272 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:30:12.311916 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m00:30:12.313413 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m00:30:12.315531 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m00:30:12.316204 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc7e07eee30>]}
[0m00:30:12.316864 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 13.35s]
[0m00:30:12.317496 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m00:30:12.345655 [debug] [Thread-11 ]: SQL status: OK in 13.171 seconds
[0m00:30:12.350594 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:30:12.351680 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m00:30:12.352850 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m00:30:12.354511 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:30:12.354936 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:30:12.355264 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:30:12.360889 [debug] [Thread-11 ]: SQL status: OK in 0.005 seconds
[0m00:30:12.363485 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:30:12.363914 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m00:30:12.365199 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m00:30:12.367180 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m00:30:12.481863 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '7b4e347e-891b-4688-9728-417592619d0d', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc804943850>]}
[0m00:30:12.482788 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 13.52s]
[0m00:30:12.483427 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m00:30:12.489353 [debug] [MainThread]: Using duckdb connection "master"
[0m00:30:12.490065 [debug] [MainThread]: On master: BEGIN
[0m00:30:12.490417 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m00:30:12.499287 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m00:30:12.500060 [debug] [MainThread]: On master: COMMIT
[0m00:30:12.500634 [debug] [MainThread]: Using duckdb connection "master"
[0m00:30:12.501119 [debug] [MainThread]: On master: COMMIT
[0m00:30:12.501904 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:30:12.502387 [debug] [MainThread]: On master: Close
[0m00:30:12.507095 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:30:12.507751 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m00:30:12.508147 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m00:30:12.508374 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m00:30:12.508601 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m00:30:12.508862 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m00:30:12.509091 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m00:30:12.509340 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m00:30:12.509600 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m00:30:12.510178 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m00:30:12.510806 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m00:30:12.511367 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m00:30:12.511770 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m00:30:12.512084 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m00:30:12.512801 [info ] [MainThread]: 
[0m00:30:12.513485 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 13.78 seconds (13.78s).
[0m00:30:12.516044 [debug] [MainThread]: Command end result
[0m00:30:12.622893 [info ] [MainThread]: 
[0m00:30:12.623523 [info ] [MainThread]: [32mCompleted successfully[0m
[0m00:30:12.623930 [info ] [MainThread]: 
[0m00:30:12.624284 [info ] [MainThread]: Done. PASS=13 WARN=0 ERROR=0 SKIP=0 TOTAL=13
[0m00:30:12.625875 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 14.771554, "process_user_time": 153.44781, "process_kernel_time": 26.078356, "process_mem_max_rss": "739688", "process_in_blocks": "1952", "process_out_blocks": "16344"}
[0m00:30:12.626464 [debug] [MainThread]: Command `dbt run` succeeded at 00:30:12.626357 after 14.77 seconds
[0m00:30:12.626863 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc81395af50>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc80494f5e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fc80494f640>]}
[0m00:30:12.627239 [debug] [MainThread]: Flushing usage events
[0m00:37:28.083059 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4df197010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4dd8eb490>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4dd8eb430>]}


============================== 00:37:28.086581 | 92090f67-0420-4b80-a63c-fd4d043ce71b ==============================
[0m00:37:28.086581 [info ] [MainThread]: Running with dbt=1.8.7
[0m00:37:28.087064 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'fail_fast': 'False', 'version_check': 'True', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'empty': 'False', 'quiet': 'False', 'no_print': 'None', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'introspect': 'True', 'log_format': 'default', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m00:37:28.293489 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4df259bd0>]}
[0m00:37:28.355067 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4dd800ee0>]}
[0m00:37:28.359226 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m00:37:28.369204 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m00:37:28.467688 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m00:37:28.468058 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m00:37:28.496263 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d234c130>]}
[0m00:37:28.570881 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d2312260>]}
[0m00:37:28.571483 [info ] [MainThread]: Found 13 models, 9 sources, 416 macros
[0m00:37:28.571915 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d2312ad0>]}
[0m00:37:28.573609 [info ] [MainThread]: 
[0m00:37:28.574241 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m00:37:28.578712 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m00:37:28.630954 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m00:37:28.631537 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m00:37:28.631929 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:37:28.645968 [debug] [ThreadPool]: SQL status: OK in 0.014 seconds
[0m00:37:28.647180 [debug] [ThreadPool]: On list_mtastats: Close
[0m00:37:28.650742 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m00:37:28.651267 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m00:37:28.656615 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:37:28.657284 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m00:37:28.657667 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:37:28.664773 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:37:28.666082 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:37:28.666423 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m00:37:28.666920 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:37:28.667208 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:37:28.667451 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m00:37:28.667973 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:37:28.668629 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:37:28.668961 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:37:28.669254 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:37:28.669919 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:37:28.670399 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m00:37:28.674350 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m00:37:28.678844 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:37:28.679242 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m00:37:28.679662 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:37:28.686833 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:37:28.687255 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:37:28.687648 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m00:37:28.705533 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m00:37:28.707310 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m00:37:28.708297 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m00:37:28.708744 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m00:37:28.714022 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4defa8ac0>]}
[0m00:37:28.714589 [debug] [MainThread]: Using duckdb connection "master"
[0m00:37:28.714902 [debug] [MainThread]: On master: BEGIN
[0m00:37:28.715154 [debug] [MainThread]: Opening a new connection, currently in state init
[0m00:37:28.724393 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m00:37:28.724875 [debug] [MainThread]: On master: COMMIT
[0m00:37:28.725148 [debug] [MainThread]: Using duckdb connection "master"
[0m00:37:28.725375 [debug] [MainThread]: On master: COMMIT
[0m00:37:28.725808 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:37:28.726094 [debug] [MainThread]: On master: Close
[0m00:37:28.727932 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m00:37:28.728286 [info ] [MainThread]: 
[0m00:37:28.738305 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m00:37:28.739133 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m00:37:28.740046 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m00:37:28.740413 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m00:37:28.747303 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m00:37:28.750474 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m00:37:28.753473 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m00:37:28.754797 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m00:37:28.756189 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m00:37:28.757132 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m00:37:28.758391 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m00:37:28.760349 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m00:37:28.761440 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m00:37:28.762605 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m00:37:28.764319 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m00:37:28.765641 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m00:37:28.766879 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m00:37:28.767852 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m00:37:28.768629 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m00:37:28.769424 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m00:37:28.770606 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m00:37:28.771329 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m00:37:28.772627 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m00:37:28.773470 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m00:37:28.774236 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m00:37:28.775183 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m00:37:28.776222 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m00:37:28.777021 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m00:37:28.777682 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m00:37:28.778577 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m00:37:28.779691 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m00:37:28.781015 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m00:37:28.782815 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m00:37:28.785203 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m00:37:28.810610 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m00:37:28.828780 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m00:37:28.829699 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m00:37:28.830459 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m00:37:28.831093 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m00:37:28.831780 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m00:37:28.832383 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m00:37:28.833110 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m00:37:28.833963 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m00:37:28.834890 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m00:37:28.835549 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m00:37:28.836171 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m00:37:28.837118 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m00:37:28.840669 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m00:37:28.841711 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m00:37:28.842539 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m00:37:28.843263 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:37:28.888636 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m00:37:28.890294 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m00:37:28.893453 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m00:37:28.893981 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m00:37:28.894455 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m00:37:28.894908 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m00:37:28.896850 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m00:37:28.897358 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m00:37:28.897857 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m00:37:28.900247 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m00:37:28.902169 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m00:37:28.902844 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m00:37:28.905041 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m00:37:28.906313 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m00:37:28.906801 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m00:37:28.907212 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m00:37:28.909247 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m00:37:28.911635 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m00:37:28.914607 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m00:37:28.915346 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m00:37:28.917126 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m00:37:28.919107 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m00:37:28.920100 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m00:37:28.920839 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m00:37:28.923780 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m00:37:28.924425 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m00:37:28.927010 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m00:37:28.927441 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m00:37:28.929993 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m00:37:28.931299 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m00:37:28.931823 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m00:37:28.932200 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m00:37:28.934533 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m00:37:28.935175 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m00:37:28.945471 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m00:37:28.949491 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m00:37:28.953217 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m00:37:28.953823 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:37:28.954412 [debug] [Thread-1 (]: SQL status: OK in 0.034 seconds
[0m00:37:28.957145 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m00:37:28.957631 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:37:28.960854 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m00:37:28.961512 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:37:28.963979 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m00:37:28.966545 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m00:37:28.970018 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m00:37:28.970731 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:37:28.973814 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m00:37:28.974821 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m00:37:28.975511 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:37:28.975959 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:37:28.976419 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:37:28.977020 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m00:37:28.977881 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m00:37:28.978402 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:37:28.978833 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:37:28.980380 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:37:28.981034 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:37:28.981519 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m00:37:28.981944 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:37:28.982604 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m00:37:28.983228 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m00:37:28.983680 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m00:37:28.984074 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:37:28.984538 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:37:28.984957 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m00:37:28.985460 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m00:37:28.985874 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m00:37:28.986292 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m00:37:28.986727 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m00:37:28.987155 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m00:37:28.987562 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m00:37:28.987962 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m00:37:28.988790 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m00:37:28.989483 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m00:37:28.990108 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m00:37:28.992102 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m00:37:28.993420 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m00:37:28.994139 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m00:37:28.994859 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m00:37:28.996191 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m00:37:28.996747 [debug] [Thread-4 (]: SQL status: OK in 0.012 seconds
[0m00:37:28.997844 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m00:37:28.999009 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m00:37:28.999703 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:37:29.001667 [debug] [Thread-3 (]: SQL status: OK in 0.016 seconds
[0m00:37:29.003149 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:37:29.004913 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger
    );
  
  
[0m00:37:29.005555 [debug] [Thread-5 (]: SQL status: OK in 0.018 seconds
[0m00:37:29.006666 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:37:29.007241 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m00:37:29.009485 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:37:29.010214 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:37:29.011516 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m00:37:29.014432 [debug] [Thread-8 (]: SQL status: OK in 0.026 seconds
[0m00:37:29.015419 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:37:29.016045 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m00:37:29.023319 [debug] [Thread-7 (]: SQL status: OK in 0.034 seconds
[0m00:37:29.023937 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:37:29.024555 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m00:37:29.032346 [debug] [Thread-6 (]: SQL status: OK in 0.039 seconds
[0m00:37:29.033390 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:37:29.034658 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:37:29.037828 [debug] [Thread-10 ]: SQL status: OK in 0.044 seconds
[0m00:37:29.038933 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:37:29.039992 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m00:37:29.045916 [debug] [Thread-9 (]: SQL status: OK in 0.051 seconds
[0m00:37:29.048872 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:37:29.050012 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m00:37:29.052541 [debug] [Thread-11 ]: SQL status: OK in 0.056 seconds
[0m00:37:29.053230 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:37:29.054315 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m00:37:29.061305 [debug] [Thread-12 ]: SQL status: OK in 0.063 seconds
[0m00:37:29.062542 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:37:29.063424 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:37:29.072606 [debug] [Thread-13 ]: SQL status: OK in 0.073 seconds
[0m00:37:29.073345 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:37:29.073821 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m00:37:29.325951 [debug] [Thread-5 (]: SQL status: OK in 0.311 seconds
[0m00:37:29.357576 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:37:29.358515 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m00:37:29.361269 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m00:37:29.411332 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:37:29.411897 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:37:29.412422 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:37:29.413155 [debug] [Thread-7 (]: SQL status: OK in 0.388 seconds
[0m00:37:29.417037 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:37:29.417515 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m00:37:29.419810 [debug] [Thread-7 (]: SQL status: OK in 0.002 seconds
[0m00:37:29.422313 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:37:29.422825 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:37:29.423234 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:37:29.423884 [debug] [Thread-5 (]: SQL status: OK in 0.011 seconds
[0m00:37:29.439321 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:37:29.440229 [debug] [Thread-7 (]: SQL status: OK in 0.017 seconds
[0m00:37:29.441299 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m00:37:29.451551 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:37:29.453315 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m00:37:29.455944 [debug] [Thread-5 (]: SQL status: OK in 0.003 seconds
[0m00:37:29.460701 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m00:37:29.462042 [debug] [Thread-7 (]: SQL status: OK in 0.008 seconds
[0m00:37:29.464638 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1673490>]}
[0m00:37:29.467591 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m00:37:29.468770 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.68s]
[0m00:37:29.470719 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d16acd00>]}
[0m00:37:29.472032 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m00:37:29.473374 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.64s]
[0m00:37:29.474501 [debug] [Thread-8 (]: SQL status: OK in 0.458 seconds
[0m00:37:29.475672 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m00:37:29.484249 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:37:29.486198 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m00:37:29.487291 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m00:37:29.498789 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:37:29.502040 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:37:29.503423 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:37:29.513882 [debug] [Thread-8 (]: SQL status: OK in 0.009 seconds
[0m00:37:29.520800 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:37:29.522474 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m00:37:29.524112 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m00:37:29.527038 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m00:37:29.528509 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1685690>]}
[0m00:37:29.531141 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.70s]
[0m00:37:29.532858 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m00:37:29.543544 [debug] [Thread-4 (]: SQL status: OK in 0.532 seconds
[0m00:37:29.550553 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:37:29.552231 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m00:37:29.553981 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m00:37:29.560868 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:37:29.562578 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:37:29.563690 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:37:29.584945 [debug] [Thread-4 (]: SQL status: OK in 0.020 seconds
[0m00:37:29.590454 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:37:29.591770 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m00:37:29.595723 [debug] [Thread-4 (]: SQL status: OK in 0.003 seconds
[0m00:37:29.598881 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m00:37:29.600170 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1673e20>]}
[0m00:37:29.601477 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.82s]
[0m00:37:29.603399 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m00:37:29.865006 [debug] [Thread-2 (]: SQL status: OK in 0.857 seconds
[0m00:37:29.876687 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:37:29.877730 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
alter table "mtastats"."main"."bond_payment_info__dbt_tmp" rename to "bond_payment_info"
[0m00:37:29.879140 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m00:37:29.882177 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:37:29.883077 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:37:29.883794 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:37:29.889080 [debug] [Thread-2 (]: SQL status: OK in 0.004 seconds
[0m00:37:29.930589 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:37:29.950682 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
drop table if exists "mtastats"."main"."bond_payment_info__dbt_backup" cascade
[0m00:37:29.952249 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m00:37:29.955100 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m00:37:29.956409 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1673760>]}
[0m00:37:29.957868 [info ] [Thread-2 (]: 2 of 13 OK created sql table model main.bond_payment_info ...................... [[32mOK[0m in 1.18s]
[0m00:37:29.959528 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m00:37:31.915333 [debug] [Thread-1 (]: SQL status: OK in 2.924 seconds
[0m00:37:31.927628 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:37:31.931358 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m00:37:31.933104 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:37:31.940233 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:37:31.943120 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:37:31.944031 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:37:31.969682 [debug] [Thread-1 (]: SQL status: OK in 0.025 seconds
[0m00:37:31.991386 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:37:31.998906 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m00:37:32.000486 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:37:32.004204 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m00:37:32.005720 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d237ea10>]}
[0m00:37:32.010678 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 3.27s]
[0m00:37:32.024892 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m00:37:34.261164 [debug] [Thread-3 (]: SQL status: OK in 5.247 seconds
[0m00:37:34.270750 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:37:34.271931 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m00:37:34.292081 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m00:37:34.295374 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:37:34.296294 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:37:34.296974 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:37:34.305829 [debug] [Thread-3 (]: SQL status: OK in 0.008 seconds
[0m00:37:34.311983 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:37:34.312972 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m00:37:34.322077 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m00:37:34.333837 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m00:37:34.335027 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d25931c0>]}
[0m00:37:34.336189 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 5.56s]
[0m00:37:34.337312 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m00:37:35.601056 [debug] [Thread-6 (]: SQL status: OK in 6.565 seconds
[0m00:37:35.610932 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:37:35.631742 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m00:37:35.633258 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m00:37:35.637140 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:37:35.637931 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:37:35.638530 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:37:35.652836 [debug] [Thread-6 (]: SQL status: OK in 0.013 seconds
[0m00:37:35.658108 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:37:35.658953 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m00:37:35.660144 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m00:37:35.662566 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m00:37:35.663658 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d16737c0>]}
[0m00:37:35.664813 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 6.83s]
[0m00:37:35.665936 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m00:37:36.081325 [debug] [Thread-13 ]: SQL status: OK in 7.007 seconds
[0m00:37:36.110143 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:37:36.111467 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m00:37:36.112965 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m00:37:36.116965 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:37:36.117977 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:37:36.118687 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:37:36.171473 [debug] [Thread-13 ]: SQL status: OK in 0.052 seconds
[0m00:37:36.177348 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:37:36.178281 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m00:37:36.179553 [debug] [Thread-13 ]: SQL status: OK in 0.000 seconds
[0m00:37:36.183617 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m00:37:36.210854 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1685d80>]}
[0m00:37:36.212221 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 7.37s]
[0m00:37:36.213291 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m00:37:36.854016 [debug] [Thread-10 ]: SQL status: OK in 7.813 seconds
[0m00:37:36.859851 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:37:36.860773 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m00:37:36.862263 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m00:37:36.865615 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:37:36.866572 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:37:36.867227 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:37:36.899597 [debug] [Thread-10 ]: SQL status: OK in 0.032 seconds
[0m00:37:36.904584 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:37:36.905416 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m00:37:36.906528 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m00:37:36.908803 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m00:37:36.909769 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1685ab0>]}
[0m00:37:36.910822 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 8.08s]
[0m00:37:36.911809 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m00:37:37.258158 [debug] [Thread-9 (]: SQL status: OK in 8.207 seconds
[0m00:37:37.269523 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:37:37.285889 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m00:37:37.287587 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:37:37.290828 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:37:37.291675 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:37:37.292236 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:37:37.322337 [debug] [Thread-9 (]: SQL status: OK in 0.029 seconds
[0m00:37:37.327587 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:37:37.328574 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m00:37:37.329991 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:37:37.332932 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m00:37:37.334071 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1557fd0>]}
[0m00:37:37.335212 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 8.50s]
[0m00:37:37.336429 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m00:37:37.889019 [debug] [Thread-12 ]: SQL status: OK in 8.825 seconds
[0m00:37:37.895212 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:37:37.896356 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m00:37:37.897843 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m00:37:37.900693 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:37:37.901455 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:37:37.902150 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:37:37.929866 [debug] [Thread-12 ]: SQL status: OK in 0.027 seconds
[0m00:37:37.935980 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:37:37.937028 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m00:37:37.938978 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m00:37:37.941441 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m00:37:37.942538 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1685e10>]}
[0m00:37:37.944551 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 9.11s]
[0m00:37:37.945846 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m00:37:40.279301 [debug] [Thread-11 ]: SQL status: OK in 11.224 seconds
[0m00:37:40.282347 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:37:40.282773 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m00:37:40.283758 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m00:37:40.285183 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:37:40.285549 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:37:40.285870 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:37:40.290671 [debug] [Thread-11 ]: SQL status: OK in 0.004 seconds
[0m00:37:40.292805 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:37:40.293157 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m00:37:40.293733 [debug] [Thread-11 ]: SQL status: OK in 0.000 seconds
[0m00:37:40.294880 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m00:37:40.380638 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '92090f67-0420-4b80-a63c-fd4d043ce71b', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d1685b40>]}
[0m00:37:40.381426 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 11.55s]
[0m00:37:40.382026 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m00:37:40.385987 [debug] [MainThread]: Using duckdb connection "master"
[0m00:37:40.386408 [debug] [MainThread]: On master: BEGIN
[0m00:37:40.386700 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m00:37:40.396169 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m00:37:40.396718 [debug] [MainThread]: On master: COMMIT
[0m00:37:40.397077 [debug] [MainThread]: Using duckdb connection "master"
[0m00:37:40.397334 [debug] [MainThread]: On master: COMMIT
[0m00:37:40.397882 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:37:40.398203 [debug] [MainThread]: On master: Close
[0m00:37:40.400685 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:37:40.401147 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m00:37:40.401458 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m00:37:40.401739 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m00:37:40.402008 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m00:37:40.402221 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m00:37:40.402472 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m00:37:40.402673 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m00:37:40.402872 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m00:37:40.403063 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m00:37:40.403287 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m00:37:40.403497 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m00:37:40.403748 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m00:37:40.404001 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m00:37:40.404942 [info ] [MainThread]: 
[0m00:37:40.405714 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 11.83 seconds (11.83s).
[0m00:37:40.407463 [debug] [MainThread]: Command end result
[0m00:37:40.438867 [info ] [MainThread]: 
[0m00:37:40.439518 [info ] [MainThread]: [32mCompleted successfully[0m
[0m00:37:40.440027 [info ] [MainThread]: 
[0m00:37:40.440415 [info ] [MainThread]: Done. PASS=13 WARN=0 ERROR=0 SKIP=0 TOTAL=13
[0m00:37:40.441704 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 12.409488, "process_user_time": 149.55783, "process_kernel_time": 10.442017, "process_mem_max_rss": "680228", "process_in_blocks": "552", "process_out_blocks": "15472"}
[0m00:37:40.443365 [debug] [MainThread]: Command `dbt run` succeeded at 00:37:40.443148 after 12.41 seconds
[0m00:37:40.444077 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4df197010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4df47dde0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7fd4d15164a0>]}
[0m00:37:40.444572 [debug] [MainThread]: Flushing usage events
[0m00:38:10.077460 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26728e7010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2671028b80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2671028be0>]}


============================== 00:38:10.079776 | f29a6979-13cf-4b97-840b-3f9af75dbe8e ==============================
[0m00:38:10.079776 [info ] [MainThread]: Running with dbt=1.8.7
[0m00:38:10.080349 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'write_json': 'True', 'log_cache_events': 'False', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'debug': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'fail_fast': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'static_parser': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'target_path': 'None', 'invocation_command': 'dbt run', 'send_anonymous_usage_stats': 'True'}
[0m00:38:10.268696 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26729a5bd0>]}
[0m00:38:10.328656 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2670f50ee0>]}
[0m00:38:10.331872 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m00:38:10.340846 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m00:38:10.422657 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m00:38:10.423142 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m00:38:10.453650 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2665a50130>]}
[0m00:38:10.530151 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2665a12260>]}
[0m00:38:10.530808 [info ] [MainThread]: Found 13 models, 9 sources, 416 macros
[0m00:38:10.531225 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2665a12ad0>]}
[0m00:38:10.533090 [info ] [MainThread]: 
[0m00:38:10.533787 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m00:38:10.538879 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m00:38:10.570786 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m00:38:10.571330 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m00:38:10.571663 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:38:10.581201 [debug] [ThreadPool]: SQL status: OK in 0.009 seconds
[0m00:38:10.582631 [debug] [ThreadPool]: On list_mtastats: Close
[0m00:38:10.587366 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m00:38:10.588145 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m00:38:10.594178 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:38:10.594695 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m00:38:10.595037 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:38:10.602792 [debug] [ThreadPool]: SQL status: OK in 0.008 seconds
[0m00:38:10.604201 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:38:10.604621 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m00:38:10.605328 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:38:10.605630 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:38:10.605910 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m00:38:10.606567 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:38:10.607399 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:38:10.607752 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:38:10.608064 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:38:10.608672 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:38:10.609026 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m00:38:10.613680 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m00:38:10.619670 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:38:10.620319 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m00:38:10.620642 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:38:10.627569 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:38:10.628702 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:38:10.629170 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m00:38:10.646423 [debug] [ThreadPool]: SQL status: OK in 0.017 seconds
[0m00:38:10.647981 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m00:38:10.648567 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m00:38:10.648825 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m00:38:10.653538 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26726f8ac0>]}
[0m00:38:10.654023 [debug] [MainThread]: Using duckdb connection "master"
[0m00:38:10.654312 [debug] [MainThread]: On master: BEGIN
[0m00:38:10.654531 [debug] [MainThread]: Opening a new connection, currently in state init
[0m00:38:10.660341 [debug] [MainThread]: SQL status: OK in 0.006 seconds
[0m00:38:10.660727 [debug] [MainThread]: On master: COMMIT
[0m00:38:10.660984 [debug] [MainThread]: Using duckdb connection "master"
[0m00:38:10.661211 [debug] [MainThread]: On master: COMMIT
[0m00:38:10.661612 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:38:10.661869 [debug] [MainThread]: On master: Close
[0m00:38:10.664375 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m00:38:10.664847 [info ] [MainThread]: 
[0m00:38:10.673561 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m00:38:10.674315 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m00:38:10.675173 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m00:38:10.675696 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m00:38:10.681689 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m00:38:10.683288 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m00:38:10.685400 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m00:38:10.686284 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m00:38:10.682515 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m00:38:10.687341 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m00:38:10.688550 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m00:38:10.690024 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m00:38:10.691515 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m00:38:10.693082 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m00:38:10.694262 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m00:38:10.696193 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m00:38:10.696855 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m00:38:10.697616 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m00:38:10.698483 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m00:38:10.699176 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m00:38:10.699729 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m00:38:10.700410 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m00:38:10.701382 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m00:38:10.702111 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m00:38:10.703096 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m00:38:10.704256 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m00:38:10.705046 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m00:38:10.705723 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m00:38:10.712594 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m00:38:10.725499 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m00:38:10.742199 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m00:38:10.743679 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m00:38:10.744781 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m00:38:10.745783 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m00:38:10.746614 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m00:38:10.747202 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m00:38:10.747884 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m00:38:10.748768 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m00:38:10.749391 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m00:38:10.749849 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m00:38:10.750461 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m00:38:10.751010 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m00:38:10.754331 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m00:38:10.755718 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m00:38:10.756763 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m00:38:10.757513 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:38:10.758409 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m00:38:10.759375 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m00:38:10.824561 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m00:38:10.825587 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m00:38:10.826182 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m00:38:10.826636 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m00:38:10.830745 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m00:38:10.831489 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m00:38:10.832044 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m00:38:10.832788 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m00:38:10.833236 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m00:38:10.833821 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m00:38:10.834404 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m00:38:10.834853 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m00:38:10.837671 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m00:38:10.838555 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m00:38:10.839145 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m00:38:10.842229 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m00:38:10.844936 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m00:38:10.847924 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m00:38:10.850746 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m00:38:10.851263 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m00:38:10.853629 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m00:38:10.857368 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m00:38:10.859781 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m00:38:10.860290 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m00:38:10.862338 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m00:38:10.865259 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m00:38:10.867811 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m00:38:10.868413 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m00:38:10.870799 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m00:38:10.875319 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m00:38:10.876837 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m00:38:10.879942 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m00:38:10.889849 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m00:38:10.890469 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m00:38:10.893544 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:38:10.894399 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m00:38:10.894926 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m00:38:10.895953 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:38:10.899774 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m00:38:10.900899 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m00:38:10.904918 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m00:38:10.908283 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m00:38:10.909377 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:38:10.912184 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m00:38:10.912819 [debug] [Thread-1 (]: SQL status: OK in 0.052 seconds
[0m00:38:10.915359 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m00:38:10.917971 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m00:38:10.918603 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m00:38:10.922188 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m00:38:10.926857 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m00:38:10.927554 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m00:38:10.928741 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:38:10.932299 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m00:38:10.933649 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:38:10.934336 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m00:38:10.934821 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:38:10.935683 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:38:10.937386 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m00:38:10.938002 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:38:10.938755 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:38:10.939894 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:38:10.940598 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:38:10.941555 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m00:38:10.942124 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:38:10.942702 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m00:38:10.943754 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m00:38:10.944339 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:38:10.944896 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m00:38:10.945457 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m00:38:10.945981 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:38:10.947154 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m00:38:10.947746 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m00:38:10.948282 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m00:38:10.948981 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m00:38:10.950031 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m00:38:10.950620 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m00:38:10.951554 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m00:38:10.952451 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m00:38:10.953292 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m00:38:10.954184 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m00:38:10.954864 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m00:38:10.955476 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m00:38:10.956105 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m00:38:10.956680 [debug] [Thread-2 (]: SQL status: OK in 0.019 seconds
[0m00:38:10.957299 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m00:38:10.958394 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m00:38:10.962728 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:38:10.963308 [debug] [Thread-3 (]: SQL status: OK in 0.022 seconds
[0m00:38:10.964537 [debug] [Thread-4 (]: SQL status: OK in 0.020 seconds
[0m00:38:10.965646 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger
    );
  
  
[0m00:38:10.966178 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:38:10.966718 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:38:10.968220 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:38:10.969666 [debug] [Thread-5 (]: SQL status: OK in 0.019 seconds
[0m00:38:10.970547 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m00:38:10.971995 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:38:10.973157 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m00:38:10.975174 [debug] [Thread-8 (]: SQL status: OK in 0.024 seconds
[0m00:38:10.975675 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:38:10.976135 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m00:38:10.978118 [debug] [Thread-6 (]: SQL status: OK in 0.025 seconds
[0m00:38:10.978573 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:38:10.979003 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:38:10.989745 [debug] [Thread-9 (]: SQL status: OK in 0.035 seconds
[0m00:38:10.990568 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:38:10.991122 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m00:38:10.997417 [debug] [Thread-7 (]: SQL status: OK in 0.042 seconds
[0m00:38:10.998267 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:38:10.998725 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m00:38:11.004156 [debug] [Thread-11 ]: SQL status: OK in 0.049 seconds
[0m00:38:11.005296 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:38:11.006034 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m00:38:11.009004 [debug] [Thread-10 ]: SQL status: OK in 0.053 seconds
[0m00:38:11.009786 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:38:11.010488 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m00:38:11.015404 [debug] [Thread-13 ]: SQL status: OK in 0.058 seconds
[0m00:38:11.016825 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:38:11.017291 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m00:38:11.024714 [debug] [Thread-12 ]: SQL status: OK in 0.066 seconds
[0m00:38:11.025313 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:38:11.025830 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:38:11.092276 [debug] [Thread-7 (]: SQL status: OK in 0.093 seconds
[0m00:38:11.120717 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:38:11.121891 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m00:38:11.123282 [debug] [Thread-7 (]: SQL status: OK in 0.000 seconds
[0m00:38:11.183986 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:38:11.185364 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:38:11.186817 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:38:11.194291 [debug] [Thread-5 (]: SQL status: OK in 0.220 seconds
[0m00:38:11.198317 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:38:11.199168 [debug] [Thread-7 (]: SQL status: OK in 0.011 seconds
[0m00:38:11.199750 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m00:38:11.221441 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:38:11.223343 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m00:38:11.224701 [debug] [Thread-5 (]: SQL status: OK in 0.002 seconds
[0m00:38:11.225386 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m00:38:11.227643 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:38:11.231731 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m00:38:11.232852 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:38:11.235112 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d76e30>]}
[0m00:38:11.236156 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:38:11.237357 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.48s]
[0m00:38:11.238643 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m00:38:11.239964 [debug] [Thread-8 (]: SQL status: OK in 0.263 seconds
[0m00:38:11.247994 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:38:11.250427 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m00:38:11.252748 [debug] [Thread-5 (]: SQL status: OK in 0.014 seconds
[0m00:38:11.268597 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:38:11.269623 [debug] [Thread-8 (]: SQL status: OK in 0.018 seconds
[0m00:38:11.270499 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m00:38:11.273682 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:38:11.277554 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:38:11.278314 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:38:11.279367 [debug] [Thread-5 (]: SQL status: OK in 0.005 seconds
[0m00:38:11.283036 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m00:38:11.283940 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d77e20>]}
[0m00:38:11.284866 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.54s]
[0m00:38:11.285863 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m00:38:11.286450 [debug] [Thread-8 (]: SQL status: OK in 0.007 seconds
[0m00:38:11.292265 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:38:11.293894 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m00:38:11.295893 [debug] [Thread-8 (]: SQL status: OK in 0.001 seconds
[0m00:38:11.299698 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m00:38:11.300953 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2670fee980>]}
[0m00:38:11.302206 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.55s]
[0m00:38:11.303601 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m00:38:11.424690 [debug] [Thread-4 (]: SQL status: OK in 0.452 seconds
[0m00:38:11.434580 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:38:11.436864 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m00:38:11.438560 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m00:38:11.442118 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:38:11.443718 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:38:11.444647 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:38:11.450564 [debug] [Thread-4 (]: SQL status: OK in 0.005 seconds
[0m00:38:11.458120 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:38:11.459859 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m00:38:11.464405 [debug] [Thread-4 (]: SQL status: OK in 0.002 seconds
[0m00:38:11.467602 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m00:38:11.469471 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d77940>]}
[0m00:38:11.471179 [debug] [Thread-2 (]: SQL status: OK in 0.503 seconds
[0m00:38:11.472712 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.76s]
[0m00:38:11.488873 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m00:38:11.500222 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:38:11.506448 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
alter table "mtastats"."main"."bond_payment_info__dbt_tmp" rename to "bond_payment_info"
[0m00:38:11.510270 [debug] [Thread-2 (]: SQL status: OK in 0.002 seconds
[0m00:38:11.524310 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:38:11.525255 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:38:11.529290 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:38:11.544641 [debug] [Thread-2 (]: SQL status: OK in 0.014 seconds
[0m00:38:11.556856 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:38:11.558704 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
drop table if exists "mtastats"."main"."bond_payment_info__dbt_backup" cascade
[0m00:38:11.560890 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m00:38:11.566926 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m00:38:11.582471 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d77340>]}
[0m00:38:11.584714 [info ] [Thread-2 (]: 2 of 13 OK created sql table model main.bond_payment_info ...................... [[32mOK[0m in 0.88s]
[0m00:38:11.586558 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m00:38:13.211814 [debug] [Thread-1 (]: SQL status: OK in 2.258 seconds
[0m00:38:13.217174 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:38:13.217998 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m00:38:13.219395 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:38:13.236050 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:38:13.238144 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:38:13.238855 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:38:13.258725 [debug] [Thread-1 (]: SQL status: OK in 0.019 seconds
[0m00:38:13.264022 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:38:13.280266 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m00:38:13.281646 [debug] [Thread-1 (]: SQL status: OK in 0.000 seconds
[0m00:38:13.284232 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m00:38:13.310637 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2665bfe080>]}
[0m00:38:13.311967 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.64s]
[0m00:38:13.314720 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m00:38:15.601466 [debug] [Thread-3 (]: SQL status: OK in 4.629 seconds
[0m00:38:15.622208 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:38:15.623249 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m00:38:15.624746 [debug] [Thread-3 (]: SQL status: OK in 0.001 seconds
[0m00:38:15.628544 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:38:15.629570 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:38:15.630678 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:38:15.646030 [debug] [Thread-3 (]: SQL status: OK in 0.014 seconds
[0m00:38:15.651958 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:38:15.652981 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m00:38:15.662978 [debug] [Thread-3 (]: SQL status: OK in 0.000 seconds
[0m00:38:15.665883 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m00:38:15.667072 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2665d41c60>]}
[0m00:38:15.668602 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 4.97s]
[0m00:38:15.669998 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m00:38:20.161809 [debug] [Thread-6 (]: SQL status: OK in 9.182 seconds
[0m00:38:20.168625 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:38:20.169459 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m00:38:20.171175 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m00:38:20.174538 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:38:20.175281 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:38:20.175886 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:38:20.207045 [debug] [Thread-6 (]: SQL status: OK in 0.030 seconds
[0m00:38:20.212285 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:38:20.213124 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m00:38:20.214260 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m00:38:20.218815 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m00:38:20.235677 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d77910>]}
[0m00:38:20.247006 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 9.47s]
[0m00:38:20.248625 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m00:38:20.259850 [debug] [Thread-11 ]: SQL status: OK in 9.253 seconds
[0m00:38:20.266170 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:38:20.267121 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m00:38:20.268739 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m00:38:20.272826 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:38:20.273972 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:38:20.274757 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:38:20.290294 [debug] [Thread-11 ]: SQL status: OK in 0.015 seconds
[0m00:38:20.296356 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:38:20.297252 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m00:38:20.298469 [debug] [Thread-11 ]: SQL status: OK in 0.000 seconds
[0m00:38:20.303116 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m00:38:20.304187 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d88670>]}
[0m00:38:20.305591 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 9.55s]
[0m00:38:20.308081 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m00:38:20.854778 [debug] [Thread-10 ]: SQL status: OK in 9.843 seconds
[0m00:38:20.860448 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:38:20.861525 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m00:38:20.862849 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m00:38:20.865778 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:38:20.866808 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:38:20.867581 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:38:20.882185 [debug] [Thread-10 ]: SQL status: OK in 0.014 seconds
[0m00:38:20.887804 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:38:20.888659 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m00:38:20.889779 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m00:38:20.892804 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m00:38:20.893845 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d88880>]}
[0m00:38:20.910884 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 10.14s]
[0m00:38:20.912156 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m00:38:21.108993 [debug] [Thread-13 ]: SQL status: OK in 10.091 seconds
[0m00:38:21.117997 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:38:21.119143 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m00:38:21.122165 [debug] [Thread-13 ]: SQL status: OK in 0.002 seconds
[0m00:38:21.125445 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:38:21.126477 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:38:21.127428 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:38:21.168090 [debug] [Thread-13 ]: SQL status: OK in 0.040 seconds
[0m00:38:21.173570 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:38:21.180435 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m00:38:21.181881 [debug] [Thread-13 ]: SQL status: OK in 0.000 seconds
[0m00:38:21.184504 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m00:38:21.185744 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f25bbdae380>]}
[0m00:38:21.187052 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 10.36s]
[0m00:38:21.188785 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m00:38:21.446431 [debug] [Thread-9 (]: SQL status: OK in 10.455 seconds
[0m00:38:21.453658 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:38:21.454787 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m00:38:21.456325 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:38:21.460092 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:38:21.461334 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:38:21.462333 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:38:21.488840 [debug] [Thread-9 (]: SQL status: OK in 0.025 seconds
[0m00:38:21.496084 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:38:21.497122 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m00:38:21.498537 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:38:21.504258 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m00:38:21.521710 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26641d6560>]}
[0m00:38:21.523609 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 10.77s]
[0m00:38:21.525244 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m00:38:21.631360 [debug] [Thread-12 ]: SQL status: OK in 10.605 seconds
[0m00:38:21.634716 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:38:21.635187 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m00:38:21.636062 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m00:38:21.637605 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:38:21.638003 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:38:21.638356 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:38:21.642636 [debug] [Thread-12 ]: SQL status: OK in 0.004 seconds
[0m00:38:21.644823 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:38:21.645228 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m00:38:21.645866 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m00:38:21.647012 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m00:38:21.726053 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': 'f29a6979-13cf-4b97-840b-3f9af75dbe8e', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f2664d88c40>]}
[0m00:38:21.726979 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 10.97s]
[0m00:38:21.727617 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m00:38:21.732600 [debug] [MainThread]: Using duckdb connection "master"
[0m00:38:21.733148 [debug] [MainThread]: On master: BEGIN
[0m00:38:21.733535 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m00:38:21.740809 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m00:38:21.741396 [debug] [MainThread]: On master: COMMIT
[0m00:38:21.741802 [debug] [MainThread]: Using duckdb connection "master"
[0m00:38:21.742088 [debug] [MainThread]: On master: COMMIT
[0m00:38:21.742625 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:38:21.742962 [debug] [MainThread]: On master: Close
[0m00:38:21.747623 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:38:21.748370 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m00:38:21.748689 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m00:38:21.748936 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m00:38:21.749154 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m00:38:21.749402 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m00:38:21.749610 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m00:38:21.750145 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m00:38:21.750778 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m00:38:21.751067 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m00:38:21.751281 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m00:38:21.751503 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m00:38:21.751725 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m00:38:21.751945 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m00:38:21.752442 [info ] [MainThread]: 
[0m00:38:21.752909 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 11.22 seconds (11.22s).
[0m00:38:21.754813 [debug] [MainThread]: Command end result
[0m00:38:21.783030 [info ] [MainThread]: 
[0m00:38:21.783603 [info ] [MainThread]: [32mCompleted successfully[0m
[0m00:38:21.783971 [info ] [MainThread]: 
[0m00:38:21.784321 [info ] [MainThread]: Done. PASS=13 WARN=0 ERROR=0 SKIP=0 TOTAL=13
[0m00:38:21.785127 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 11.756273, "process_user_time": 149.20102, "process_kernel_time": 3.043219, "process_mem_max_rss": "777832", "process_out_blocks": "15464", "process_in_blocks": "0"}
[0m00:38:21.785679 [debug] [MainThread]: Command `dbt run` succeeded at 00:38:21.785584 after 11.76 seconds
[0m00:38:21.786088 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26728e7010>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26726f8ac0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7f26729a5bd0>]}
[0m00:38:21.786479 [debug] [MainThread]: Flushing usage events
[0m00:53:55.833265 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97dc8b640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97c3875e0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97c387580>]}


============================== 00:53:55.836443 | 924fa471-87aa-43c9-bff2-1b2d033f7239 ==============================
[0m00:53:55.836443 [info ] [MainThread]: Running with dbt=1.8.7
[0m00:53:55.837001 [debug] [MainThread]: running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'profiles_dir': '/home/christianocean/mta/mta/transformations/dbt', 'version_check': 'True', 'fail_fast': 'False', 'log_path': '/home/christianocean/mta/mta/transformations/dbt/logs', 'debug': 'False', 'warn_error': 'None', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'log_format': 'default', 'introspect': 'True', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'invocation_command': 'dbt run', 'target_path': 'None', 'static_parser': 'True', 'send_anonymous_usage_stats': 'True'}
[0m00:53:56.040730 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'project_id', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff971119390>]}
[0m00:53:56.100962 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'adapter_info', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9790ca650>]}
[0m00:53:56.105215 [info ] [MainThread]: Registered adapter: duckdb=1.8.3
[0m00:53:56.117372 [debug] [MainThread]: checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7
[0m00:53:56.218299 [debug] [MainThread]: Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.
[0m00:53:56.218737 [debug] [MainThread]: Partial parsing enabled, no changes found, skipping parsing
[0m00:53:56.246625 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'load_project', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff970e48130>]}
[0m00:53:56.320141 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'resource_counts', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff970df6470>]}
[0m00:53:56.320749 [info ] [MainThread]: Found 13 models, 9 sources, 416 macros
[0m00:53:56.321131 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97dd2fb50>]}
[0m00:53:56.322866 [info ] [MainThread]: 
[0m00:53:56.323449 [debug] [MainThread]: Acquiring new duckdb connection 'master'
[0m00:53:56.327916 [debug] [ThreadPool]: Acquiring new duckdb connection 'list_mtastats'
[0m00:53:56.380361 [debug] [ThreadPool]: Using duckdb connection "list_mtastats"
[0m00:53:56.381050 [debug] [ThreadPool]: On list_mtastats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats"} */

    
    select schema_name
    from system.information_schema.schemata
    
    where catalog_name = '"mtastats"'
    
  
  
[0m00:53:56.381520 [debug] [ThreadPool]: Opening a new connection, currently in state init
[0m00:53:56.395870 [debug] [ThreadPool]: SQL status: OK in 0.014 seconds
[0m00:53:56.397089 [debug] [ThreadPool]: On list_mtastats: Close
[0m00:53:56.400894 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)
[0m00:53:56.401485 [debug] [ThreadPool]: Creating schema "database: "mtastats"
schema: "main"
"
[0m00:53:56.406935 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:53:56.407279 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
        select type from duckdb_databases()
        where database_name='mtastats'
        and type='sqlite'
    
  
[0m00:53:56.407568 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:53:56.414256 [debug] [ThreadPool]: SQL status: OK in 0.007 seconds
[0m00:53:56.415364 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:53:56.415673 [debug] [ThreadPool]: On create_mtastats_main: BEGIN
[0m00:53:56.416178 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:53:56.416466 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:53:56.416756 [debug] [ThreadPool]: On create_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "create_mtastats_main"} */

    
    
        create schema if not exists "mtastats"."main"
    
[0m00:53:56.417329 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:53:56.418042 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:53:56.418290 [debug] [ThreadPool]: Using duckdb connection "create_mtastats_main"
[0m00:53:56.418549 [debug] [ThreadPool]: On create_mtastats_main: COMMIT
[0m00:53:56.419002 [debug] [ThreadPool]: SQL status: OK in 0.000 seconds
[0m00:53:56.419269 [debug] [ThreadPool]: On create_mtastats_main: Close
[0m00:53:56.422537 [debug] [ThreadPool]: Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)
[0m00:53:56.426915 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:53:56.427266 [debug] [ThreadPool]: On list_mtastats_main: BEGIN
[0m00:53:56.427560 [debug] [ThreadPool]: Opening a new connection, currently in state closed
[0m00:53:56.433972 [debug] [ThreadPool]: SQL status: OK in 0.006 seconds
[0m00:53:56.434431 [debug] [ThreadPool]: Using duckdb connection "list_mtastats_main"
[0m00:53:56.434746 [debug] [ThreadPool]: On list_mtastats_main: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "connection_name": "list_mtastats_main"} */
select
      'mtastats' as database,
      table_name as name,
      table_schema as schema,
      CASE table_type
        WHEN 'BASE TABLE' THEN 'table'
        WHEN 'VIEW' THEN 'view'
        WHEN 'LOCAL TEMPORARY' THEN 'table'
        END as type
    from system.information_schema.tables
    where table_schema = 'main'
    and table_catalog = 'mtastats'
  
[0m00:53:56.453981 [debug] [ThreadPool]: SQL status: OK in 0.019 seconds
[0m00:53:56.455658 [debug] [ThreadPool]: On list_mtastats_main: ROLLBACK
[0m00:53:56.456421 [debug] [ThreadPool]: Failed to rollback 'list_mtastats_main'
[0m00:53:56.456704 [debug] [ThreadPool]: On list_mtastats_main: Close
[0m00:53:56.459865 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'runnable_timing', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97c32e470>]}
[0m00:53:56.460503 [debug] [MainThread]: Using duckdb connection "master"
[0m00:53:56.460974 [debug] [MainThread]: On master: BEGIN
[0m00:53:56.461469 [debug] [MainThread]: Opening a new connection, currently in state init
[0m00:53:56.470901 [debug] [MainThread]: SQL status: OK in 0.009 seconds
[0m00:53:56.471381 [debug] [MainThread]: On master: COMMIT
[0m00:53:56.471711 [debug] [MainThread]: Using duckdb connection "master"
[0m00:53:56.471985 [debug] [MainThread]: On master: COMMIT
[0m00:53:56.472552 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:53:56.472847 [debug] [MainThread]: On master: Close
[0m00:53:56.474636 [info ] [MainThread]: Concurrency: 16 threads (target='dev')
[0m00:53:56.475012 [info ] [MainThread]: 
[0m00:53:56.483015 [debug] [Thread-1 (]: Began running node model.mta.avg_riders_per_day
[0m00:53:56.483795 [debug] [Thread-2 (]: Began running node model.mta.bond_payment_info
[0m00:53:56.486181 [debug] [Thread-3 (]: Began running node model.mta.busiest_specific_times
[0m00:53:56.484585 [info ] [Thread-1 (]: 1 of 13 START sql table model main.avg_riders_per_day .......................... [RUN]
[0m00:53:56.487113 [debug] [Thread-4 (]: Began running node model.mta.daily_ridership
[0m00:53:56.487936 [debug] [Thread-5 (]: Began running node model.mta.expense_type_per_year
[0m00:53:56.488606 [info ] [Thread-2 (]: 2 of 13 START sql table model main.bond_payment_info ........................... [RUN]
[0m00:53:56.489295 [debug] [Thread-6 (]: Began running node model.mta.fare_class_boro
[0m00:53:56.490083 [info ] [Thread-3 (]: 3 of 13 START sql table model main.busiest_specific_times ...................... [RUN]
[0m00:53:56.491195 [debug] [Thread-1 (]: Acquiring new duckdb connection 'model.mta.avg_riders_per_day'
[0m00:53:56.491813 [debug] [Thread-7 (]: Began running node model.mta.labor_expenses_per_agency
[0m00:53:56.493561 [debug] [Thread-8 (]: Began running node model.mta.largest_expense_differences_2023
[0m00:53:56.492914 [info ] [Thread-4 (]: 4 of 13 START sql table model main.daily_ridership ............................. [RUN]
[0m00:53:56.495246 [debug] [Thread-9 (]: Began running node model.mta.omny_adoption_by_station
[0m00:53:56.496204 [debug] [Thread-10 ]: Began running node model.mta.omny_adoption_increase
[0m00:53:56.496912 [debug] [Thread-11 ]: Began running node model.mta.subway_station_stats
[0m00:53:56.497555 [info ] [Thread-5 (]: 5 of 13 START sql table model main.expense_type_per_year ....................... [RUN]
[0m00:53:56.498250 [debug] [Thread-12 ]: Began running node model.mta.total_riders_per_station
[0m00:53:56.498799 [debug] [Thread-13 ]: Began running node model.mta.weekly_riders_per_station
[0m00:53:56.499923 [debug] [Thread-2 (]: Acquiring new duckdb connection 'model.mta.bond_payment_info'
[0m00:53:56.500903 [info ] [Thread-6 (]: 6 of 13 START sql table model main.fare_class_boro ............................. [RUN]
[0m00:53:56.501793 [debug] [Thread-3 (]: Acquiring new duckdb connection 'model.mta.busiest_specific_times'
[0m00:53:56.502403 [debug] [Thread-1 (]: Began compiling node model.mta.avg_riders_per_day
[0m00:53:56.502999 [info ] [Thread-7 (]: 7 of 13 START sql table model main.labor_expenses_per_agency ................... [RUN]
[0m00:53:56.503728 [info ] [Thread-8 (]: 8 of 13 START sql table model main.largest_expense_differences_2023 ............ [RUN]
[0m00:53:56.504781 [debug] [Thread-4 (]: Acquiring new duckdb connection 'model.mta.daily_ridership'
[0m00:53:56.505691 [info ] [Thread-9 (]: 9 of 13 START sql table model main.omny_adoption_by_station .................... [RUN]
[0m00:53:56.506728 [info ] [Thread-10 ]: 10 of 13 START sql table model main.omny_adoption_increase ..................... [RUN]
[0m00:53:56.507670 [info ] [Thread-11 ]: 11 of 13 START sql table model main.subway_station_stats ....................... [RUN]
[0m00:53:56.508421 [debug] [Thread-5 (]: Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.expense_type_per_year)
[0m00:53:56.509026 [info ] [Thread-12 ]: 12 of 13 START sql table model main.total_riders_per_station ................... [RUN]
[0m00:53:56.509910 [info ] [Thread-13 ]: 13 of 13 START sql table model main.weekly_riders_per_station .................. [RUN]
[0m00:53:56.510495 [debug] [Thread-2 (]: Began compiling node model.mta.bond_payment_info
[0m00:53:56.511214 [debug] [Thread-6 (]: Acquiring new duckdb connection 'model.mta.fare_class_boro'
[0m00:53:56.511865 [debug] [Thread-3 (]: Began compiling node model.mta.busiest_specific_times
[0m00:53:56.518407 [debug] [Thread-7 (]: Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'
[0m00:53:56.522242 [debug] [Thread-1 (]: Writing injected SQL for node "model.mta.avg_riders_per_day"
[0m00:53:56.523047 [debug] [Thread-8 (]: Acquiring new duckdb connection 'model.mta.largest_expense_differences_2023'
[0m00:53:56.523644 [debug] [Thread-4 (]: Began compiling node model.mta.daily_ridership
[0m00:53:56.524346 [debug] [Thread-9 (]: Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'
[0m00:53:56.525101 [debug] [Thread-10 ]: Acquiring new duckdb connection 'model.mta.omny_adoption_increase'
[0m00:53:56.525971 [debug] [Thread-11 ]: Acquiring new duckdb connection 'model.mta.subway_station_stats'
[0m00:53:56.526929 [debug] [Thread-5 (]: Began compiling node model.mta.expense_type_per_year
[0m00:53:56.527929 [debug] [Thread-12 ]: Acquiring new duckdb connection 'model.mta.total_riders_per_station'
[0m00:53:56.528823 [debug] [Thread-13 ]: Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'
[0m00:53:56.533561 [debug] [Thread-2 (]: Writing injected SQL for node "model.mta.bond_payment_info"
[0m00:53:56.534412 [debug] [Thread-6 (]: Began compiling node model.mta.fare_class_boro
[0m00:53:56.537717 [debug] [Thread-3 (]: Writing injected SQL for node "model.mta.busiest_specific_times"
[0m00:53:56.538308 [debug] [Thread-7 (]: Began compiling node model.mta.labor_expenses_per_agency
[0m00:53:56.539021 [debug] [Thread-8 (]: Began compiling node model.mta.largest_expense_differences_2023
[0m00:53:56.546647 [debug] [Thread-4 (]: Writing injected SQL for node "model.mta.daily_ridership"
[0m00:53:56.547304 [debug] [Thread-9 (]: Began compiling node model.mta.omny_adoption_by_station
[0m00:53:56.547925 [debug] [Thread-1 (]: Began executing node model.mta.avg_riders_per_day
[0m00:53:56.548411 [debug] [Thread-10 ]: Began compiling node model.mta.omny_adoption_increase
[0m00:53:56.548894 [debug] [Thread-11 ]: Began compiling node model.mta.subway_station_stats
[0m00:53:56.614962 [debug] [Thread-5 (]: Writing injected SQL for node "model.mta.expense_type_per_year"
[0m00:53:56.615694 [debug] [Thread-12 ]: Began compiling node model.mta.total_riders_per_station
[0m00:53:56.616213 [debug] [Thread-13 ]: Began compiling node model.mta.weekly_riders_per_station
[0m00:53:56.618823 [debug] [Thread-6 (]: Writing injected SQL for node "model.mta.fare_class_boro"
[0m00:53:56.619742 [debug] [Thread-2 (]: Began executing node model.mta.bond_payment_info
[0m00:53:56.621871 [debug] [Thread-7 (]: Writing injected SQL for node "model.mta.labor_expenses_per_agency"
[0m00:53:56.624070 [debug] [Thread-8 (]: Writing injected SQL for node "model.mta.largest_expense_differences_2023"
[0m00:53:56.624896 [debug] [Thread-3 (]: Began executing node model.mta.busiest_specific_times
[0m00:53:56.627141 [debug] [Thread-9 (]: Writing injected SQL for node "model.mta.omny_adoption_by_station"
[0m00:53:56.633571 [debug] [Thread-4 (]: Began executing node model.mta.daily_ridership
[0m00:53:56.636282 [debug] [Thread-10 ]: Writing injected SQL for node "model.mta.omny_adoption_increase"
[0m00:53:56.649225 [debug] [Thread-11 ]: Writing injected SQL for node "model.mta.subway_station_stats"
[0m00:53:56.658863 [debug] [Thread-12 ]: Writing injected SQL for node "model.mta.total_riders_per_station"
[0m00:53:56.664538 [debug] [Thread-1 (]: Writing runtime sql for node "model.mta.avg_riders_per_day"
[0m00:53:56.665352 [debug] [Thread-5 (]: Began executing node model.mta.expense_type_per_year
[0m00:53:56.667792 [debug] [Thread-13 ]: Writing injected SQL for node "model.mta.weekly_riders_per_station"
[0m00:53:56.670693 [debug] [Thread-2 (]: Writing runtime sql for node "model.mta.bond_payment_info"
[0m00:53:56.673802 [debug] [Thread-3 (]: Writing runtime sql for node "model.mta.busiest_specific_times"
[0m00:53:56.674695 [debug] [Thread-8 (]: Began executing node model.mta.largest_expense_differences_2023
[0m00:53:56.675083 [debug] [Thread-6 (]: Began executing node model.mta.fare_class_boro
[0m00:53:56.675650 [debug] [Thread-7 (]: Began executing node model.mta.labor_expenses_per_agency
[0m00:53:56.679156 [debug] [Thread-4 (]: Writing runtime sql for node "model.mta.daily_ridership"
[0m00:53:56.679765 [debug] [Thread-9 (]: Began executing node model.mta.omny_adoption_by_station
[0m00:53:56.680521 [debug] [Thread-10 ]: Began executing node model.mta.omny_adoption_increase
[0m00:53:56.682008 [debug] [Thread-12 ]: Began executing node model.mta.total_riders_per_station
[0m00:53:56.686519 [debug] [Thread-5 (]: Writing runtime sql for node "model.mta.expense_type_per_year"
[0m00:53:56.687115 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:53:56.687684 [debug] [Thread-11 ]: Began executing node model.mta.subway_station_stats
[0m00:53:56.691625 [debug] [Thread-8 (]: Writing runtime sql for node "model.mta.largest_expense_differences_2023"
[0m00:53:56.692446 [debug] [Thread-13 ]: Began executing node model.mta.weekly_riders_per_station
[0m00:53:56.692926 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:53:56.693479 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:53:56.697135 [debug] [Thread-6 (]: Writing runtime sql for node "model.mta.fare_class_boro"
[0m00:53:56.699757 [debug] [Thread-7 (]: Writing runtime sql for node "model.mta.labor_expenses_per_agency"
[0m00:53:56.702682 [debug] [Thread-9 (]: Writing runtime sql for node "model.mta.omny_adoption_by_station"
[0m00:53:56.706711 [debug] [Thread-10 ]: Writing runtime sql for node "model.mta.omny_adoption_increase"
[0m00:53:56.707454 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:53:56.710394 [debug] [Thread-12 ]: Writing runtime sql for node "model.mta.total_riders_per_station"
[0m00:53:56.711172 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: BEGIN
[0m00:53:56.713550 [debug] [Thread-11 ]: Writing runtime sql for node "model.mta.subway_station_stats"
[0m00:53:56.714636 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:53:56.717259 [debug] [Thread-13 ]: Writing runtime sql for node "model.mta.weekly_riders_per_station"
[0m00:53:56.717742 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:53:56.718304 [debug] [Thread-2 (]: On model.mta.bond_payment_info: BEGIN
[0m00:53:56.718804 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: BEGIN
[0m00:53:56.721068 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:53:56.722432 [debug] [Thread-4 (]: On model.mta.daily_ridership: BEGIN
[0m00:53:56.723024 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:53:56.723858 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:53:56.724505 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:53:56.724997 [debug] [Thread-1 (]: Opening a new connection, currently in state init
[0m00:53:56.725852 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: BEGIN
[0m00:53:56.726394 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:53:56.727385 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: BEGIN
[0m00:53:56.727960 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:53:56.728565 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:53:56.728947 [debug] [Thread-2 (]: Opening a new connection, currently in state init
[0m00:53:56.729401 [debug] [Thread-3 (]: Opening a new connection, currently in state init
[0m00:53:56.729944 [debug] [Thread-6 (]: On model.mta.fare_class_boro: BEGIN
[0m00:53:56.730365 [debug] [Thread-4 (]: Opening a new connection, currently in state init
[0m00:53:56.730854 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: BEGIN
[0m00:53:56.731288 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: BEGIN
[0m00:53:56.731729 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: BEGIN
[0m00:53:56.744442 [debug] [Thread-5 (]: Opening a new connection, currently in state closed
[0m00:53:56.745261 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: BEGIN
[0m00:53:56.745840 [debug] [Thread-8 (]: Opening a new connection, currently in state init
[0m00:53:56.746578 [debug] [Thread-11 ]: On model.mta.subway_station_stats: BEGIN
[0m00:53:56.747144 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: BEGIN
[0m00:53:56.748281 [debug] [Thread-1 (]: SQL status: OK in 0.023 seconds
[0m00:53:56.748996 [debug] [Thread-6 (]: Opening a new connection, currently in state init
[0m00:53:56.749612 [debug] [Thread-9 (]: Opening a new connection, currently in state init
[0m00:53:56.750190 [debug] [Thread-10 ]: Opening a new connection, currently in state init
[0m00:53:56.750758 [debug] [Thread-7 (]: Opening a new connection, currently in state init
[0m00:53:56.751677 [debug] [Thread-12 ]: Opening a new connection, currently in state init
[0m00:53:56.752369 [debug] [Thread-11 ]: Opening a new connection, currently in state init
[0m00:53:56.753296 [debug] [Thread-13 ]: Opening a new connection, currently in state init
[0m00:53:56.754322 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:53:56.756965 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */

  
    
    

    create  table
      "mtastats"."main"."avg_riders_per_day__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    day_of_week
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:53:56.758049 [debug] [Thread-2 (]: SQL status: OK in 0.029 seconds
[0m00:53:56.758778 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:53:56.759418 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */

  
    
    

    create  table
      "mtastats"."main"."bond_payment_info__dbt_tmp"
  
    as (
      WITH payment_stats AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        MAX(timestamp) AS last_payment_date,
        AVG(amount) AS average_payment,
        COUNT(DISTINCT timestamp) AS total_payments,
        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
first_payment AS (
    SELECT
        general_ledger,
        MIN(timestamp) AS first_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount
    FROM
        mta_operations_statement fp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
),
last_payment AS (
    SELECT
        general_ledger,
        MAX(timestamp) AS last_payment_date,
        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount
    FROM
        mta_operations_statement lp
    WHERE
        scenario = 'Actual'
        AND type = 'Debt Service Expenses'
    GROUP BY
        general_ledger
)
-- Wrapping everything inside another DISTINCT query
SELECT DISTINCT
    ps.general_ledger,
    fp.first_payment_date,
    fp.first_payment_amount,
    ps.last_payment_date,
    lp.last_payment_amount,
    ps.average_payment,
    ps.median_payment,
    ps.total_payments
FROM
    payment_stats ps
LEFT JOIN
    first_payment fp ON ps.general_ledger = fp.general_ledger
LEFT JOIN
    last_payment lp ON ps.general_ledger = lp.general_ledger
ORDER BY
    ps.general_ledger
    );
  
  
[0m00:53:56.763250 [debug] [Thread-3 (]: SQL status: OK in 0.034 seconds
[0m00:53:56.764133 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:53:56.764976 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */

  
    
    

    create  table
      "mtastats"."main"."busiest_specific_times__dbt_tmp"
  
    as (
      SELECT 
    EXTRACT(HOUR FROM transit_timestamp) AS transit_hour, 
    AVG(ridership) AS average_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    transit_hour
ORDER BY 
    average_ridership DESC
    );
  
  
[0m00:53:56.771587 [debug] [Thread-5 (]: SQL status: OK in 0.027 seconds
[0m00:53:56.772447 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:53:56.773277 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */

  
    
    

    create  table
      "mtastats"."main"."expense_type_per_year__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    general_ledger,
    SUM(amount) AS total_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    scenario = 'Actual'
    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
GROUP BY 
    agency,
    fiscal_year,
    general_ledger
ORDER BY 
    agency, fiscal_year, general_ledger
    );
  
  
[0m00:53:56.774479 [debug] [Thread-4 (]: SQL status: OK in 0.044 seconds
[0m00:53:56.775125 [debug] [Thread-8 (]: SQL status: OK in 0.029 seconds
[0m00:53:56.775893 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:53:56.776609 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:53:56.777299 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */

  
    
    

    create  table
      "mtastats"."main"."daily_ridership__dbt_tmp"
  
    as (
      SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(subways_total_ridership) AS ridership,
    'subway' AS transport_type,
    AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(buses_total_ridership) AS ridership,
    'buses' AS transport_type,
    AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(lirr_total_ridership) AS ridership,
    'lirr' AS transport_type,
    AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(metro_north_total_ridership) AS ridership,
    'metro_north' AS transport_type,
    AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(access_a_ride_total_trips) AS ridership,
    'access_a_ride' AS transport_type,
    AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(bridges_tunnels_total_traffic) AS ridership,
    'bridges_tunnels' AS transport_type,
    AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type

UNION ALL

SELECT 
    DATE_TRUNC('week', date) AS week_start,
    SUM(staten_island_railway_total_ridership) AS ridership,
    'staten_island_railway' AS transport_type,
    AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic
FROM "mtastats"."main"."mta_daily_ridership"
GROUP BY week_start, transport_type
    );
  
  
[0m00:53:56.777981 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */

  
    
    

    create  table
      "mtastats"."main"."largest_expense_differences_2023__dbt_tmp"
  
    as (
      WITH expense_differences AS (
    SELECT
        agency,
        general_ledger,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) AS actual_expenses,
        SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS adopted_plan_expenses,
        SUM(CASE WHEN scenario = 'Actual' THEN amount ELSE 0 END) - SUM(CASE WHEN scenario = 'Adopted Budget' AND financial_plan_year = 2023 THEN amount ELSE 0 END) AS difference
    FROM
        "mtastats"."main"."mta_operations_statement"
    WHERE
        fiscal_year = 2023
        AND scenario IN ('Actual', 'Adopted Budget')
        AND financial_plan_year = 2023  -- Ensure we use only the 2023 Adopted Budget
        AND type = 'Total Expenses Before Non-Cash Liability Adjs.'
        AND general_ledger != 'Reimbursable Overhead'  -- Exclude Reimbursable Overhead
    GROUP BY
        agency, general_ledger
),
ranked_expenses AS (
    SELECT
        agency,
        general_ledger,
        actual_expenses,
        adopted_plan_expenses,
        difference,
        ROW_NUMBER() OVER (PARTITION BY agency ORDER BY difference DESC) AS rank
    FROM
        expense_differences
    WHERE
        difference > 0  -- Only include cases where actual expenses are larger than the adopted budget
)
SELECT
    agency,
    general_ledger,
    actual_expenses,
    adopted_plan_expenses,
    difference
FROM
    ranked_expenses
WHERE
    rank <= 5  -- Select the top 5 items per agency
ORDER BY
    difference, rank
    );
  
  
[0m00:53:56.783267 [debug] [Thread-6 (]: SQL status: OK in 0.034 seconds
[0m00:53:56.784061 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:53:56.784627 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */

  
    
    

    create  table
      "mtastats"."main"."fare_class_boro__dbt_tmp"
  
    as (
      WITH total_ridership_per_borough_daytype AS (
    -- Calculate total ridership for each borough and day type (Weekday or Weekend)
    SELECT 
        borough, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership_borough_daytype
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, day_type
),
ridership_by_fare_class AS (
    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)
    SELECT 
        borough, 
        fare_class_category, 
        CASE 
            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'
            ELSE 'Weekday'
        END AS day_type,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        borough, fare_class_category, day_type
)
SELECT 
    r.borough, 
    r.fare_class_category, 
    r.day_type,
    r.total_ridership, 
    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage
FROM 
    ridership_by_fare_class r
JOIN 
    total_ridership_per_borough_daytype t
    ON r.borough = t.borough 
    AND r.day_type = t.day_type
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:53:56.786771 [debug] [Thread-9 (]: SQL status: OK in 0.037 seconds
[0m00:53:56.787266 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:53:56.787713 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_by_station__dbt_tmp"
  
    as (
      WITH yearly_data AS (
    SELECT 
        station_complex,
        YEAR(transit_timestamp) AS year,
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) IN (2022, 2023, 2024)
    GROUP BY 
        station_complex, 
        YEAR(transit_timestamp)
),
pivoted_data AS (
    SELECT 
        station_complex,
        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,
        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,
        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024
    FROM 
        yearly_data
    GROUP BY 
        station_complex
)
SELECT 
    station_complex,
    omny_2022,
    omny_2023,
    omny_2024,
    CASE 
        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN 
            (omny_2023 - omny_2022) / omny_2022
        ELSE NULL
    END AS omny_2023_growth,
    CASE 
        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN 
            (omny_2024 - omny_2023) / omny_2023
        ELSE NULL
    END AS omny_2024_growth
FROM 
    pivoted_data
ORDER BY 
    station_complex
    );
  
  
[0m00:53:56.797926 [debug] [Thread-10 ]: SQL status: OK in 0.048 seconds
[0m00:53:56.800627 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:53:56.801220 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */

  
    
    

    create  table
      "mtastats"."main"."omny_adoption_increase__dbt_tmp"
  
    as (
      WITH omny_ridership_by_station_year AS (
    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        EXTRACT(YEAR FROM transit_timestamp) AS year, 
        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,
        SUM(ridership) AS total_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)
    GROUP BY 
        station_complex_id, station_complex, latitude, longitude, year
),
omny_percentage_by_station AS (
    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude
    SELECT 
        station_complex_id, 
        station_complex, 
        latitude, 
        longitude, 
        year, 
        (omny_ridership / total_ridership) AS omny_percentage
    FROM 
        omny_ridership_by_station_year
)
SELECT 
    s2023.station_complex_id AS station_id, 
    s2023.station_complex AS station_name,
    s2023.latitude,
    s2023.longitude,
    s2023.omny_percentage AS omny_percentage_2023,
    s2024.omny_percentage AS omny_percentage_2024,
    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase
FROM 
    omny_percentage_by_station s2023
JOIN 
    omny_percentage_by_station s2024 
    ON s2023.station_complex_id = s2024.station_complex_id
    AND s2023.latitude = s2024.latitude
    AND s2023.longitude = s2024.longitude
    AND s2023.year = 2023
    AND s2024.year = 2024
WHERE 
    s2024.omny_percentage > s2023.omny_percentage
ORDER BY 
    omny_percentage_increase DESC
    );
  
  
[0m00:53:56.809251 [debug] [Thread-7 (]: SQL status: OK in 0.058 seconds
[0m00:53:56.810267 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:53:56.810726 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */

  
    
    

    create  table
      "mtastats"."main"."labor_expenses_per_agency__dbt_tmp"
  
    as (
      SELECT 
    agency,
    fiscal_year,
    expense_type,
    general_ledger,
    SUM(amount) AS total_labor_expenses
FROM 
    "mtastats"."main"."mta_operations_statement"
WHERE 
    subtype = 'Labor Expenses' AND 
    scenario = 'Actual'
GROUP BY 
    agency,
    fiscal_year,
    expense_type,
    general_ledger
ORDER BY 
    agency, fiscal_year, expense_type, general_ledger
    );
  
  
[0m00:53:56.815581 [debug] [Thread-12 ]: SQL status: OK in 0.064 seconds
[0m00:53:56.816715 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:53:56.817211 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."total_riders_per_station__dbt_tmp"
  
    as (
      SELECT 
    station_complex_id, 
    station_complex, 
    latitude, 
    longitude, 
    SUM(ridership) AS total_ridership
FROM 
    "mtastats"."main"."mta_hourly_subway_socrata"
GROUP BY 
    station_complex_id, station_complex, latitude, longitude
ORDER BY 
    total_ridership DESC
    );
  
  
[0m00:53:56.821080 [debug] [Thread-11 ]: SQL status: OK in 0.069 seconds
[0m00:53:56.821647 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:53:56.822134 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */

  
    
    

    create  table
      "mtastats"."main"."subway_station_stats__dbt_tmp"
  
    as (
      WITH ridership_by_day AS (
    SELECT 
        station_complex,
        CAST(transit_timestamp AS DATE) AS day,
        DAYOFWEEK(transit_timestamp) AS weekday,
        SUM(ridership) AS daily_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    WHERE 
        YEAR(transit_timestamp) = 2024
    GROUP BY 
        station_complex, 
        CAST(transit_timestamp AS DATE), 
        DAYOFWEEK(transit_timestamp)
),
weekday_weekend AS (
    SELECT 
        station_complex,
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END AS day_type,
        AVG(daily_ridership) AS avg_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex, 
        CASE 
            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'
            ELSE 'weekend'
        END
),
single_day_stats AS (
    SELECT 
        station_complex,
        MAX(daily_ridership) AS highest_single_day_ridership,
        MIN(daily_ridership) AS lowest_single_day_ridership
    FROM 
        ridership_by_day
    GROUP BY 
        station_complex
),
highest_single_day AS (
    SELECT 
        station_complex,
        day AS highest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MAX(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
),
lowest_single_day AS (
    SELECT 
        station_complex,
        day AS lowest_single_day_ridership_day
    FROM 
        ridership_by_day rbd
    WHERE 
        rbd.daily_ridership = (
            SELECT 
                MIN(daily_ridership)
            FROM 
                ridership_by_day
            WHERE 
                station_complex = rbd.station_complex
        )
)
SELECT 
    rbd.station_complex,
    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,
    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,
    sds.highest_single_day_ridership,
    hsd.highest_single_day_ridership_day,
    sds.lowest_single_day_ridership,
    lsd.lowest_single_day_ridership_day,
    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_percentage_change
FROM 
    ridership_by_day rbd
JOIN 
    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex
JOIN 
    single_day_stats sds ON rbd.station_complex = sds.station_complex
JOIN 
    highest_single_day hsd ON rbd.station_complex = hsd.station_complex
JOIN 
    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex
GROUP BY 
    rbd.station_complex, 
    sds.highest_single_day_ridership, 
    sds.lowest_single_day_ridership, 
    hsd.highest_single_day_ridership_day, 
    lsd.lowest_single_day_ridership_day
ORDER BY 
    rbd.station_complex
    );
  
  
[0m00:53:56.832405 [debug] [Thread-13 ]: SQL status: OK in 0.079 seconds
[0m00:53:56.832941 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:53:56.833352 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */

  
    
    

    create  table
      "mtastats"."main"."weekly_riders_per_station__dbt_tmp"
  
    as (
      with weekly_ridership AS (
    SELECT 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp) AS week_start,
        SUM(ridership) AS total_weekly_ridership
    FROM 
        "mtastats"."main"."mta_hourly_subway_socrata"
    GROUP BY 
        station_complex, 
        DATE_TRUNC('week', transit_timestamp)
)
SELECT 
    station_complex, 
    week_start, 
    total_weekly_ridership
FROM 
    weekly_ridership
ORDER BY 
    station_complex, 
    week_start
    );
  
  
[0m00:53:57.038828 [debug] [Thread-5 (]: SQL status: OK in 0.265 seconds
[0m00:53:57.081109 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:53:57.081749 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
alter table "mtastats"."main"."expense_type_per_year__dbt_tmp" rename to "expense_type_per_year"
[0m00:53:57.083155 [debug] [Thread-5 (]: SQL status: OK in 0.001 seconds
[0m00:53:57.144168 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:53:57.145327 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:53:57.146373 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: COMMIT
[0m00:53:57.158592 [debug] [Thread-8 (]: SQL status: OK in 0.379 seconds
[0m00:53:57.164107 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:53:57.164856 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
alter table "mtastats"."main"."largest_expense_differences_2023__dbt_tmp" rename to "largest_expense_differences_2023"
[0m00:53:57.166985 [debug] [Thread-5 (]: SQL status: OK in 0.020 seconds
[0m00:53:57.188402 [debug] [Thread-5 (]: Using duckdb connection "model.mta.expense_type_per_year"
[0m00:53:57.189134 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.expense_type_per_year"} */
drop table if exists "mtastats"."main"."expense_type_per_year__dbt_backup" cascade
[0m00:53:57.189944 [debug] [Thread-8 (]: SQL status: OK in 0.025 seconds
[0m00:53:57.193279 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:53:57.194231 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:53:57.194682 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: COMMIT
[0m00:53:57.200169 [debug] [Thread-8 (]: SQL status: OK in 0.005 seconds
[0m00:53:57.200795 [debug] [Thread-5 (]: SQL status: OK in 0.010 seconds
[0m00:53:57.210942 [debug] [Thread-5 (]: On model.mta.expense_type_per_year: Close
[0m00:53:57.212961 [debug] [Thread-5 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97dd13220>]}
[0m00:53:57.214883 [debug] [Thread-8 (]: Using duckdb connection "model.mta.largest_expense_differences_2023"
[0m00:53:57.216041 [info ] [Thread-5 (]: 5 of 13 OK created sql table model main.expense_type_per_year .................. [[32mOK[0m in 0.70s]
[0m00:53:57.217423 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.largest_expense_differences_2023"} */
drop table if exists "mtastats"."main"."largest_expense_differences_2023__dbt_backup" cascade
[0m00:53:57.218279 [debug] [Thread-5 (]: Finished running node model.mta.expense_type_per_year
[0m00:53:57.221969 [debug] [Thread-8 (]: SQL status: OK in 0.003 seconds
[0m00:53:57.223782 [debug] [Thread-8 (]: On model.mta.largest_expense_differences_2023: Close
[0m00:53:57.224690 [debug] [Thread-8 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9645d4e20>]}
[0m00:53:57.225611 [info ] [Thread-8 (]: 8 of 13 OK created sql table model main.largest_expense_differences_2023 ....... [[32mOK[0m in 0.70s]
[0m00:53:57.226655 [debug] [Thread-8 (]: Finished running node model.mta.largest_expense_differences_2023
[0m00:53:57.311580 [debug] [Thread-7 (]: SQL status: OK in 0.500 seconds
[0m00:53:57.319031 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:53:57.320284 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
alter table "mtastats"."main"."labor_expenses_per_agency__dbt_tmp" rename to "labor_expenses_per_agency"
[0m00:53:57.322686 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m00:53:57.325662 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:53:57.326629 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:53:57.327383 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: COMMIT
[0m00:53:57.333087 [debug] [Thread-7 (]: SQL status: OK in 0.005 seconds
[0m00:53:57.339491 [debug] [Thread-7 (]: Using duckdb connection "model.mta.labor_expenses_per_agency"
[0m00:53:57.341514 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.labor_expenses_per_agency"} */
drop table if exists "mtastats"."main"."labor_expenses_per_agency__dbt_backup" cascade
[0m00:53:57.343630 [debug] [Thread-7 (]: SQL status: OK in 0.001 seconds
[0m00:53:57.347064 [debug] [Thread-7 (]: On model.mta.labor_expenses_per_agency: Close
[0m00:53:57.348033 [debug] [Thread-7 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97026b3a0>]}
[0m00:53:57.348984 [info ] [Thread-7 (]: 7 of 13 OK created sql table model main.labor_expenses_per_agency .............. [[32mOK[0m in 0.83s]
[0m00:53:57.349757 [debug] [Thread-7 (]: Finished running node model.mta.labor_expenses_per_agency
[0m00:53:57.446907 [debug] [Thread-4 (]: SQL status: OK in 0.668 seconds
[0m00:53:57.452888 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:53:57.453970 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
alter table "mtastats"."main"."daily_ridership__dbt_tmp" rename to "daily_ridership"
[0m00:53:57.455002 [debug] [Thread-4 (]: SQL status: OK in 0.000 seconds
[0m00:53:57.458474 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:53:57.458969 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:53:57.459392 [debug] [Thread-4 (]: On model.mta.daily_ridership: COMMIT
[0m00:53:57.466388 [debug] [Thread-4 (]: SQL status: OK in 0.006 seconds
[0m00:53:57.479484 [debug] [Thread-4 (]: Using duckdb connection "model.mta.daily_ridership"
[0m00:53:57.480322 [debug] [Thread-4 (]: On model.mta.daily_ridership: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.daily_ridership"} */
drop table if exists "mtastats"."main"."daily_ridership__dbt_backup" cascade
[0m00:53:57.484377 [debug] [Thread-4 (]: SQL status: OK in 0.001 seconds
[0m00:53:57.488808 [debug] [Thread-4 (]: On model.mta.daily_ridership: Close
[0m00:53:57.489974 [debug] [Thread-4 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9702690c0>]}
[0m00:53:57.491022 [info ] [Thread-4 (]: 4 of 13 OK created sql table model main.daily_ridership ........................ [[32mOK[0m in 0.99s]
[0m00:53:57.492505 [debug] [Thread-4 (]: Finished running node model.mta.daily_ridership
[0m00:53:57.496779 [debug] [Thread-2 (]: SQL status: OK in 0.736 seconds
[0m00:53:57.521271 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:53:57.522636 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
alter table "mtastats"."main"."bond_payment_info__dbt_tmp" rename to "bond_payment_info"
[0m00:53:57.525533 [debug] [Thread-2 (]: SQL status: OK in 0.001 seconds
[0m00:53:57.532545 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:53:57.533657 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:53:57.534545 [debug] [Thread-2 (]: On model.mta.bond_payment_info: COMMIT
[0m00:53:57.544255 [debug] [Thread-2 (]: SQL status: OK in 0.009 seconds
[0m00:53:57.557921 [debug] [Thread-2 (]: Using duckdb connection "model.mta.bond_payment_info"
[0m00:53:57.559270 [debug] [Thread-2 (]: On model.mta.bond_payment_info: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.bond_payment_info"} */
drop table if exists "mtastats"."main"."bond_payment_info__dbt_backup" cascade
[0m00:53:57.560594 [debug] [Thread-2 (]: SQL status: OK in 0.000 seconds
[0m00:53:57.566435 [debug] [Thread-2 (]: On model.mta.bond_payment_info: Close
[0m00:53:57.567958 [debug] [Thread-2 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97026b850>]}
[0m00:53:57.569304 [info ] [Thread-2 (]: 2 of 13 OK created sql table model main.bond_payment_info ...................... [[32mOK[0m in 1.07s]
[0m00:53:57.570948 [debug] [Thread-2 (]: Finished running node model.mta.bond_payment_info
[0m00:53:59.265311 [debug] [Thread-1 (]: SQL status: OK in 2.507 seconds
[0m00:53:59.278161 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:53:59.300833 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
alter table "mtastats"."main"."avg_riders_per_day__dbt_tmp" rename to "avg_riders_per_day"
[0m00:53:59.303023 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:53:59.311012 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:53:59.312131 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:53:59.312956 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: COMMIT
[0m00:53:59.350396 [debug] [Thread-1 (]: SQL status: OK in 0.036 seconds
[0m00:53:59.366017 [debug] [Thread-1 (]: Using duckdb connection "model.mta.avg_riders_per_day"
[0m00:53:59.390422 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.avg_riders_per_day"} */
drop table if exists "mtastats"."main"."avg_riders_per_day__dbt_backup" cascade
[0m00:53:59.392102 [debug] [Thread-1 (]: SQL status: OK in 0.001 seconds
[0m00:53:59.395286 [debug] [Thread-1 (]: On model.mta.avg_riders_per_day: Close
[0m00:53:59.396457 [debug] [Thread-1 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9701e2740>]}
[0m00:53:59.397997 [info ] [Thread-1 (]: 1 of 13 OK created sql table model main.avg_riders_per_day ..................... [[32mOK[0m in 2.91s]
[0m00:53:59.399452 [debug] [Thread-1 (]: Finished running node model.mta.avg_riders_per_day
[0m00:54:02.243273 [debug] [Thread-3 (]: SQL status: OK in 5.477 seconds
[0m00:54:02.249345 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:54:02.250436 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
alter table "mtastats"."main"."busiest_specific_times__dbt_tmp" rename to "busiest_specific_times"
[0m00:54:02.291192 [debug] [Thread-3 (]: SQL status: OK in 0.040 seconds
[0m00:54:02.294466 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:54:02.295274 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:54:02.295931 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: COMMIT
[0m00:54:02.310171 [debug] [Thread-3 (]: SQL status: OK in 0.009 seconds
[0m00:54:02.315139 [debug] [Thread-3 (]: Using duckdb connection "model.mta.busiest_specific_times"
[0m00:54:02.316199 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.busiest_specific_times"} */
drop table if exists "mtastats"."main"."busiest_specific_times__dbt_backup" cascade
[0m00:54:02.330959 [debug] [Thread-3 (]: SQL status: OK in 0.005 seconds
[0m00:54:02.336047 [debug] [Thread-3 (]: On model.mta.busiest_specific_times: Close
[0m00:54:02.351357 [debug] [Thread-3 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9701e4580>]}
[0m00:54:02.352880 [info ] [Thread-3 (]: 3 of 13 OK created sql table model main.busiest_specific_times ................. [[32mOK[0m in 5.85s]
[0m00:54:02.354242 [debug] [Thread-3 (]: Finished running node model.mta.busiest_specific_times
[0m00:54:03.245926 [debug] [Thread-6 (]: SQL status: OK in 6.460 seconds
[0m00:54:03.252232 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:54:03.258188 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
alter table "mtastats"."main"."fare_class_boro__dbt_tmp" rename to "fare_class_boro"
[0m00:54:03.259972 [debug] [Thread-6 (]: SQL status: OK in 0.001 seconds
[0m00:54:03.264170 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:54:03.265244 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:54:03.266135 [debug] [Thread-6 (]: On model.mta.fare_class_boro: COMMIT
[0m00:54:03.308422 [debug] [Thread-6 (]: SQL status: OK in 0.019 seconds
[0m00:54:03.314151 [debug] [Thread-6 (]: Using duckdb connection "model.mta.fare_class_boro"
[0m00:54:03.315097 [debug] [Thread-6 (]: On model.mta.fare_class_boro: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.fare_class_boro"} */
drop table if exists "mtastats"."main"."fare_class_boro__dbt_backup" cascade
[0m00:54:03.316217 [debug] [Thread-6 (]: SQL status: OK in 0.000 seconds
[0m00:54:03.318525 [debug] [Thread-6 (]: On model.mta.fare_class_boro: Close
[0m00:54:03.319549 [debug] [Thread-6 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97026b730>]}
[0m00:54:03.320700 [info ] [Thread-6 (]: 6 of 13 OK created sql table model main.fare_class_boro ........................ [[32mOK[0m in 6.81s]
[0m00:54:03.346884 [debug] [Thread-6 (]: Finished running node model.mta.fare_class_boro
[0m00:54:03.979037 [debug] [Thread-13 ]: SQL status: OK in 7.145 seconds
[0m00:54:03.985631 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:54:03.986754 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
alter table "mtastats"."main"."weekly_riders_per_station__dbt_tmp" rename to "weekly_riders_per_station"
[0m00:54:04.010960 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m00:54:04.015004 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:54:04.016092 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:54:04.016922 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: COMMIT
[0m00:54:04.051549 [debug] [Thread-13 ]: SQL status: OK in 0.034 seconds
[0m00:54:04.057466 [debug] [Thread-13 ]: Using duckdb connection "model.mta.weekly_riders_per_station"
[0m00:54:04.059850 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.weekly_riders_per_station"} */
drop table if exists "mtastats"."main"."weekly_riders_per_station__dbt_backup" cascade
[0m00:54:04.061987 [debug] [Thread-13 ]: SQL status: OK in 0.001 seconds
[0m00:54:04.064736 [debug] [Thread-13 ]: On model.mta.weekly_riders_per_station: Close
[0m00:54:04.066111 [debug] [Thread-13 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff9701615d0>]}
[0m00:54:04.090678 [info ] [Thread-13 ]: 13 of 13 OK created sql table model main.weekly_riders_per_station ............. [[32mOK[0m in 7.54s]
[0m00:54:04.092403 [debug] [Thread-13 ]: Finished running node model.mta.weekly_riders_per_station
[0m00:54:04.354807 [debug] [Thread-10 ]: SQL status: OK in 7.553 seconds
[0m00:54:04.363336 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:54:04.390148 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
alter table "mtastats"."main"."omny_adoption_increase__dbt_tmp" rename to "omny_adoption_increase"
[0m00:54:04.391852 [debug] [Thread-10 ]: SQL status: OK in 0.001 seconds
[0m00:54:04.394995 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:54:04.395903 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:54:04.396915 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: COMMIT
[0m00:54:04.430193 [debug] [Thread-10 ]: SQL status: OK in 0.032 seconds
[0m00:54:04.437111 [debug] [Thread-10 ]: Using duckdb connection "model.mta.omny_adoption_increase"
[0m00:54:04.437998 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_increase"} */
drop table if exists "mtastats"."main"."omny_adoption_increase__dbt_backup" cascade
[0m00:54:04.439151 [debug] [Thread-10 ]: SQL status: OK in 0.000 seconds
[0m00:54:04.441776 [debug] [Thread-10 ]: On model.mta.omny_adoption_increase: Close
[0m00:54:04.442946 [debug] [Thread-10 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff96453b8e0>]}
[0m00:54:04.460720 [info ] [Thread-10 ]: 10 of 13 OK created sql table model main.omny_adoption_increase ................ [[32mOK[0m in 7.92s]
[0m00:54:04.462316 [debug] [Thread-10 ]: Finished running node model.mta.omny_adoption_increase
[0m00:54:05.194841 [debug] [Thread-12 ]: SQL status: OK in 8.377 seconds
[0m00:54:05.222015 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:54:05.223309 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
alter table "mtastats"."main"."total_riders_per_station__dbt_tmp" rename to "total_riders_per_station"
[0m00:54:05.225018 [debug] [Thread-12 ]: SQL status: OK in 0.001 seconds
[0m00:54:05.228263 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:54:05.229279 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:54:05.230197 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: COMMIT
[0m00:54:05.238665 [debug] [Thread-12 ]: SQL status: OK in 0.007 seconds
[0m00:54:05.243329 [debug] [Thread-12 ]: Using duckdb connection "model.mta.total_riders_per_station"
[0m00:54:05.244132 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.total_riders_per_station"} */
drop table if exists "mtastats"."main"."total_riders_per_station__dbt_backup" cascade
[0m00:54:05.245364 [debug] [Thread-12 ]: SQL status: OK in 0.000 seconds
[0m00:54:05.247633 [debug] [Thread-12 ]: On model.mta.total_riders_per_station: Close
[0m00:54:05.248532 [debug] [Thread-12 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff964511450>]}
[0m00:54:05.249590 [info ] [Thread-12 ]: 12 of 13 OK created sql table model main.total_riders_per_station .............. [[32mOK[0m in 8.72s]
[0m00:54:05.251250 [debug] [Thread-12 ]: Finished running node model.mta.total_riders_per_station
[0m00:54:05.494892 [debug] [Thread-9 (]: SQL status: OK in 8.706 seconds
[0m00:54:05.500960 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:54:05.502024 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
alter table "mtastats"."main"."omny_adoption_by_station__dbt_tmp" rename to "omny_adoption_by_station"
[0m00:54:05.504293 [debug] [Thread-9 (]: SQL status: OK in 0.001 seconds
[0m00:54:05.509775 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:54:05.510751 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:54:05.511534 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: COMMIT
[0m00:54:05.525116 [debug] [Thread-9 (]: SQL status: OK in 0.013 seconds
[0m00:54:05.529769 [debug] [Thread-9 (]: Using duckdb connection "model.mta.omny_adoption_by_station"
[0m00:54:05.530665 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.omny_adoption_by_station"} */
drop table if exists "mtastats"."main"."omny_adoption_by_station__dbt_backup" cascade
[0m00:54:05.531831 [debug] [Thread-9 (]: SQL status: OK in 0.000 seconds
[0m00:54:05.533994 [debug] [Thread-9 (]: On model.mta.omny_adoption_by_station: Close
[0m00:54:05.534890 [debug] [Thread-9 (]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff964523d60>]}
[0m00:54:05.535957 [info ] [Thread-9 (]: 9 of 13 OK created sql table model main.omny_adoption_by_station ............... [[32mOK[0m in 9.01s]
[0m00:54:05.537271 [debug] [Thread-9 (]: Finished running node model.mta.omny_adoption_by_station
[0m00:54:08.084142 [debug] [Thread-11 ]: SQL status: OK in 11.261 seconds
[0m00:54:08.087721 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:54:08.088098 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
alter table "mtastats"."main"."subway_station_stats__dbt_tmp" rename to "subway_station_stats"
[0m00:54:08.089044 [debug] [Thread-11 ]: SQL status: OK in 0.001 seconds
[0m00:54:08.090395 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:54:08.090729 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:54:08.091021 [debug] [Thread-11 ]: On model.mta.subway_station_stats: COMMIT
[0m00:54:08.096488 [debug] [Thread-11 ]: SQL status: OK in 0.005 seconds
[0m00:54:08.098799 [debug] [Thread-11 ]: Using duckdb connection "model.mta.subway_station_stats"
[0m00:54:08.099169 [debug] [Thread-11 ]: On model.mta.subway_station_stats: /* {"app": "dbt", "dbt_version": "1.8.7", "profile_name": "default", "target_name": "dev", "node_id": "model.mta.subway_station_stats"} */
drop table if exists "mtastats"."main"."subway_station_stats__dbt_backup" cascade
[0m00:54:08.099882 [debug] [Thread-11 ]: SQL status: OK in 0.000 seconds
[0m00:54:08.101088 [debug] [Thread-11 ]: On model.mta.subway_station_stats: Close
[0m00:54:08.183175 [debug] [Thread-11 ]: Sending event: {'category': 'dbt', 'action': 'run_model', 'label': '924fa471-87aa-43c9-bff2-1b2d033f7239', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff970161390>]}
[0m00:54:08.184011 [info ] [Thread-11 ]: 11 of 13 OK created sql table model main.subway_station_stats .................. [[32mOK[0m in 11.66s]
[0m00:54:08.184623 [debug] [Thread-11 ]: Finished running node model.mta.subway_station_stats
[0m00:54:08.188957 [debug] [MainThread]: Using duckdb connection "master"
[0m00:54:08.189276 [debug] [MainThread]: On master: BEGIN
[0m00:54:08.189525 [debug] [MainThread]: Opening a new connection, currently in state closed
[0m00:54:08.196417 [debug] [MainThread]: SQL status: OK in 0.007 seconds
[0m00:54:08.196924 [debug] [MainThread]: On master: COMMIT
[0m00:54:08.197427 [debug] [MainThread]: Using duckdb connection "master"
[0m00:54:08.197791 [debug] [MainThread]: On master: COMMIT
[0m00:54:08.198425 [debug] [MainThread]: SQL status: OK in 0.000 seconds
[0m00:54:08.198695 [debug] [MainThread]: On master: Close
[0m00:54:08.202608 [debug] [MainThread]: Connection 'master' was properly closed.
[0m00:54:08.203209 [debug] [MainThread]: Connection 'model.mta.expense_type_per_year' was properly closed.
[0m00:54:08.203534 [debug] [MainThread]: Connection 'model.mta.avg_riders_per_day' was properly closed.
[0m00:54:08.203800 [debug] [MainThread]: Connection 'model.mta.bond_payment_info' was properly closed.
[0m00:54:08.204075 [debug] [MainThread]: Connection 'model.mta.busiest_specific_times' was properly closed.
[0m00:54:08.204420 [debug] [MainThread]: Connection 'model.mta.daily_ridership' was properly closed.
[0m00:54:08.204761 [debug] [MainThread]: Connection 'model.mta.fare_class_boro' was properly closed.
[0m00:54:08.205070 [debug] [MainThread]: Connection 'model.mta.labor_expenses_per_agency' was properly closed.
[0m00:54:08.205331 [debug] [MainThread]: Connection 'model.mta.largest_expense_differences_2023' was properly closed.
[0m00:54:08.205659 [debug] [MainThread]: Connection 'model.mta.omny_adoption_by_station' was properly closed.
[0m00:54:08.205929 [debug] [MainThread]: Connection 'model.mta.omny_adoption_increase' was properly closed.
[0m00:54:08.206168 [debug] [MainThread]: Connection 'model.mta.subway_station_stats' was properly closed.
[0m00:54:08.206438 [debug] [MainThread]: Connection 'model.mta.total_riders_per_station' was properly closed.
[0m00:54:08.206691 [debug] [MainThread]: Connection 'model.mta.weekly_riders_per_station' was properly closed.
[0m00:54:08.207823 [info ] [MainThread]: 
[0m00:54:08.208487 [info ] [MainThread]: Finished running 13 table models in 0 hours 0 minutes and 11.88 seconds (11.88s).
[0m00:54:08.210613 [debug] [MainThread]: Command end result
[0m00:54:08.243445 [info ] [MainThread]: 
[0m00:54:08.244110 [info ] [MainThread]: [32mCompleted successfully[0m
[0m00:54:08.244515 [info ] [MainThread]: 
[0m00:54:08.244894 [info ] [MainThread]: Done. PASS=13 WARN=0 ERROR=0 SKIP=0 TOTAL=13
[0m00:54:08.246101 [debug] [MainThread]: Resource report: {"command_name": "run", "command_success": true, "command_wall_clock_time": 12.464398, "process_user_time": 151.24815, "process_kernel_time": 5.727697, "process_mem_max_rss": "701972", "process_in_blocks": "9408", "process_out_blocks": "23808"}
[0m00:54:08.247208 [debug] [MainThread]: Command `dbt run` succeeded at 00:54:08.246987 after 12.47 seconds
[0m00:54:08.247847 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97dc8b640>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff970f841c0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x7ff97d21a350>]}
[0m00:54:08.248238 [debug] [MainThread]: Flushing usage events
