{"data": {"log_version": 3, "version": "=1.8.7"}, "info": {"category": "", "code": "A001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Running with dbt=1.8.7", "name": "MainReportVersion", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:20.992062Z"}}
{"data": {"args": {"cache_selected_only": "False", "debug": "False", "empty": "False", "fail_fast": "False", "indirect_selection": "eager", "introspect": "True", "invocation_command": "dbt build --select fqn:*", "log_cache_events": "False", "log_format": "json", "log_path": "/home/christiandata/mtadata/mta/transformations/dbt/target/dbt_project_assets-d3bbd51-4ce3bb6", "no_print": "None", "partial_parse": "True", "printer_width": "80", "profiles_dir": "/home/christiandata/mtadata/mta/transformations/dbt", "quiet": "False", "send_anonymous_usage_stats": "False", "static_parser": "True", "target_path": "target/dbt_project_assets-d3bbd51-4ce3bb6", "use_colors": "True", "use_experimental_parser": "False", "version_check": "True", "warn_error": "None", "warn_error_options": "WarnErrorOptions(include=[], exclude=[])", "write_json": "True"}}, "info": {"category": "", "code": "A002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "running dbt with arguments {'printer_width': '80', 'indirect_selection': 'eager', 'log_cache_events': 'False', 'write_json': 'True', 'partial_parse': 'True', 'cache_selected_only': 'False', 'warn_error': 'None', 'debug': 'False', 'fail_fast': 'False', 'log_path': '/home/christiandata/mtadata/mta/transformations/dbt/target/dbt_project_assets-d3bbd51-4ce3bb6', 'version_check': 'True', 'profiles_dir': '/home/christiandata/mtadata/mta/transformations/dbt', 'use_colors': 'True', 'use_experimental_parser': 'False', 'no_print': 'None', 'quiet': 'False', 'empty': 'False', 'warn_error_options': 'WarnErrorOptions(include=[], exclude=[])', 'static_parser': 'True', 'invocation_command': 'dbt build --select fqn:*', 'log_format': 'json', 'target_path': 'target/dbt_project_assets-d3bbd51-4ce3bb6', 'introspect': 'True', 'send_anonymous_usage_stats': 'False'}", "name": "MainReportArgs", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:20.994821Z"}}
{"data": {"adapter_name": "duckdb", "adapter_version": "=1.8.3"}, "info": {"category": "", "code": "E034", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Registered adapter: duckdb=1.8.3", "name": "AdapterRegistered", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.261313Z"}}
{"data": {"checksum": "4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0", "profile": "", "target": "", "vars": "{}", "version": "1.8.7"}, "info": {"category": "", "code": "I025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "checksum: 4af21dafb485259c48497ac86b711ddb1982f3d0f1c0ca4e09356de488b753c0, vars: {}, profile: , target: , version: 1.8.7", "name": "StateCheckVarsHash", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.270680Z"}}
{"data": {"added": 0, "changed": 0, "deleted": 0}, "info": {"category": "", "code": "I040", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Partial parsing enabled: 0 files deleted, 0 files added, 0 files changed.", "name": "PartialParsingEnabled", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.361449Z"}}
{"data": {}, "info": {"category": "", "code": "I017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Partial parsing enabled, no changes found, skipping parsing", "name": "PartialParsingSkipParsing", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.362158Z"}}
{"data": {"stat_line": "12 models, 9 sources, 416 macros"}, "info": {"category": "", "code": "W006", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Found 12 models, 9 sources, 416 macros", "name": "FoundStats", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.625289Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.627518Z"}}
{"data": {"conn_name": "master", "conn_type": "duckdb"}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'master'", "name": "NewConnection", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.628237Z"}}
{"data": {"conn_name": "list_mtastats", "conn_type": "duckdb"}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'list_mtastats'", "name": "NewConnection", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.634117Z"}}
{"data": {"conn_name": "list_mtastats", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"list_mtastats\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.687237Z"}}
{"data": {"conn_name": "list_mtastats", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"list_mtastats\"} */\n\n    \n    select schema_name\n    from system.information_schema.schemata\n    \n    where catalog_name = '\"mtastats\"'\n    \n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"list_mtastats\"} */\n\n    \n    select schema_name\n    from system.information_schema.schemata\n    \n    where catalog_name = '\"mtastats\"'\n    \n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.687914Z"}}
{"data": {"connection_state": "init"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.688367Z"}}
{"data": {"elapsed": 0.013191204, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.013 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.701748Z"}}
{"data": {"conn_name": "list_mtastats"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.703821Z"}}
{"data": {"conn_name": "create_mtastats_main", "orig_conn_name": "list_mtastats"}, "info": {"category": "", "code": "E006", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Re-using an available connection from the pool (formerly list_mtastats, now create_mtastats_main)", "name": "ConnectionReused", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.706718Z"}}
{"data": {"relation": {"database": "mtastats", "identifier": "", "schema": "main"}}, "info": {"category": "", "code": "E020", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Creating schema \"database: \"mtastats\"\nschema: \"main\"\n\"", "name": "SchemaCreation", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.707388Z"}}
{"data": {"conn_name": "create_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"create_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.777957Z"}}
{"data": {"conn_name": "create_mtastats_main", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"create_mtastats_main\"} */\n\n    \n        select type from duckdb_databases()\n        where database_name='mtastats'\n        and type='sqlite'\n    \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"create_mtastats_main\"} */\n\n    \n        select type from duckdb_databases()\n        where database_name='mtastats'\n        and type='sqlite'\n    \n  ", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.778593Z"}}
{"data": {"connection_state": "closed"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state closed", "name": "NewConnectionOpening", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.779006Z"}}
{"data": {"elapsed": 0.00735893, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.007 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.786466Z"}}
{"data": {"conn_name": "create_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"create_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.788458Z"}}
{"data": {"conn_name": "create_mtastats_main", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.788919Z"}}
{"data": {"elapsed": 0.000457804, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.789827Z"}}
{"data": {"conn_name": "create_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"create_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.790474Z"}}
{"data": {"conn_name": "create_mtastats_main", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"create_mtastats_main\"} */\n\n    \n    \n        create schema if not exists \"mtastats\".\"main\"\n    "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"create_mtastats_main\"} */\n\n    \n    \n        create schema if not exists \"mtastats\".\"main\"\n    ", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.790986Z"}}
{"data": {"elapsed": 0.00053705, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.001 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.791953Z"}}
{"data": {"conn_name": "create_mtastats_main"}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.793030Z"}}
{"data": {"conn_name": "create_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"create_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.793542Z"}}
{"data": {"conn_name": "create_mtastats_main", "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.793938Z"}}
{"data": {"elapsed": 0.000167543, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.794500Z"}}
{"data": {"conn_name": "create_mtastats_main"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On create_mtastats_main: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "ThreadPoolExecutor-0_0", "ts": "2025-01-30T16:00:21.794938Z"}}
{"data": {"conn_name": "list_mtastats_main", "orig_conn_name": "create_mtastats_main"}, "info": {"category": "", "code": "E006", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Re-using an available connection from the pool (formerly create_mtastats_main, now list_mtastats_main)", "name": "ConnectionReused", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.798981Z"}}
{"data": {"conn_name": "list_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"list_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.805032Z"}}
{"data": {"conn_name": "list_mtastats_main", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats_main: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.805622Z"}}
{"data": {"connection_state": "closed"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state closed", "name": "NewConnectionOpening", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.806020Z"}}
{"data": {"elapsed": 0.005886231, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.006 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.811960Z"}}
{"data": {"conn_name": "list_mtastats_main", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"list_mtastats_main\"", "name": "ConnectionUsed", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.812494Z"}}
{"data": {"conn_name": "list_mtastats_main", "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"list_mtastats_main\"} */\nselect\n      'mtastats' as database,\n      table_name as name,\n      table_schema as schema,\n      CASE table_type\n        WHEN 'BASE TABLE' THEN 'table'\n        WHEN 'VIEW' THEN 'view'\n        WHEN 'LOCAL TEMPORARY' THEN 'table'\n        END as type\n    from system.information_schema.tables\n    where table_schema = 'main'\n    and table_catalog = 'mtastats'\n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats_main: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"connection_name\": \"list_mtastats_main\"} */\nselect\n      'mtastats' as database,\n      table_name as name,\n      table_schema as schema,\n      CASE table_type\n        WHEN 'BASE TABLE' THEN 'table'\n        WHEN 'VIEW' THEN 'view'\n        WHEN 'LOCAL TEMPORARY' THEN 'table'\n        END as type\n    from system.information_schema.tables\n    where table_schema = 'main'\n    and table_catalog = 'mtastats'\n  ", "name": "SQLQuery", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.812944Z"}}
{"data": {"elapsed": 0.021740075, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.022 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.835267Z"}}
{"data": {"conn_name": "list_mtastats_main"}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats_main: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.837238Z"}}
{"data": {"conn_name": "list_mtastats_main", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n"}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'list_mtastats_main'", "name": "RollbackFailed", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.838596Z"}}
{"data": {"conn_name": "list_mtastats_main"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On list_mtastats_main: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "ThreadPoolExecutor-1_0", "ts": "2025-01-30T16:00:21.839090Z"}}
{"data": {"conn_name": "master", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"master\"", "name": "ConnectionUsed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.844400Z"}}
{"data": {"conn_name": "master", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.844907Z"}}
{"data": {"connection_state": "init"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.845302Z"}}
{"data": {"elapsed": 0.005982141, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.006 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.851434Z"}}
{"data": {"conn_name": "master"}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.852418Z"}}
{"data": {"conn_name": "master", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"master\"", "name": "ConnectionUsed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.852876Z"}}
{"data": {"conn_name": "master", "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.853551Z"}}
{"data": {"elapsed": 0.000397736, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.854354Z"}}
{"data": {"conn_name": "master"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.854857Z"}}
{"data": {"node_count": 12, "num_threads": 16, "target_name": "dev"}, "info": {"category": "", "code": "Q027", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Concurrency: 16 threads (target='dev')", "name": "ConcurrencyLine", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.857162Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:21.857641Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.avg_riders_per_day", "name": "NodeStart", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.863957Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.bond_payment_info", "name": "NodeStart", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.864814Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.daily_ridership", "name": "NodeStart", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.866684Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.expense_type_per_year", "name": "NodeStart", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.868065Z"}}
{"data": {"description": "sql table model main.avg_riders_per_day", "index": 1, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "1 of 12 START sql table model main.avg_riders_per_day .......................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.865907Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.fare_class_boro", "name": "NodeStart", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.869292Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.forecast_accuracy_2023", "name": "NodeStart", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.870601Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.labor_expenses_per_agency", "name": "NodeStart", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.871244Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.omny_adoption_by_station", "name": "NodeStart", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.871944Z"}}
{"data": {"description": "sql table model main.bond_payment_info", "index": 2, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "2 of 12 START sql table model main.bond_payment_info ........................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.870042Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.omny_adoption_increase", "name": "NodeStart", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:21.873220Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.subway_station_stats", "name": "NodeStart", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:21.875010Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.total_riders_per_station", "name": "NodeStart", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:21.875776Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "Q024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began running node model.mta.weekly_riders_per_station", "name": "NodeStart", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:21.876428Z"}}
{"data": {"description": "sql table model main.daily_ridership", "index": 3, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "3 of 12 START sql table model main.daily_ridership ............................. [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.874226Z"}}
{"data": {"description": "sql table model main.expense_type_per_year", "index": 4, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "4 of 12 START sql table model main.expense_type_per_year ....................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.877504Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.avg_riders_per_day'", "name": "NewConnection", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.878434Z"}}
{"data": {"description": "sql table model main.fare_class_boro", "index": 5, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "5 of 12 START sql table model main.fare_class_boro ............................. [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.879184Z"}}
{"data": {"description": "sql table model main.forecast_accuracy_2023", "index": 6, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "6 of 12 START sql table model main.forecast_accuracy_2023 ...................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.880005Z"}}
{"data": {"description": "sql table model main.labor_expenses_per_agency", "index": 7, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "7 of 12 START sql table model main.labor_expenses_per_agency ................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.880953Z"}}
{"data": {"description": "sql table model main.omny_adoption_by_station", "index": 8, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "8 of 12 START sql table model main.omny_adoption_by_station .................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.881906Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.bond_payment_info'", "name": "NewConnection", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.883449Z"}}
{"data": {"description": "sql table model main.omny_adoption_increase", "index": 9, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "9 of 12 START sql table model main.omny_adoption_increase ...................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:21.884982Z"}}
{"data": {"description": "sql table model main.subway_station_stats", "index": 10, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "10 of 12 START sql table model main.subway_station_stats ....................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:21.886427Z"}}
{"data": {"description": "sql table model main.total_riders_per_station", "index": 11, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "11 of 12 START sql table model main.total_riders_per_station ................... [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:21.888295Z"}}
{"data": {"description": "sql table model main.weekly_riders_per_station", "index": 12, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "total": 12}, "info": {"category": "", "code": "Q011", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "12 of 12 START sql table model main.weekly_riders_per_station .................. [RUN]", "name": "LogStartLine", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:21.889552Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.daily_ridership'", "name": "NewConnection", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.890724Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.expense_type_per_year'", "name": "NewConnection", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.891645Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.avg_riders_per_day", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.892312Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "orig_conn_name": "list_mtastats_main"}, "info": {"category": "", "code": "E006", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Re-using an available connection from the pool (formerly list_mtastats_main, now model.mta.fare_class_boro)", "name": "ConnectionReused", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.893128Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.forecast_accuracy_2023'", "name": "NewConnection", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.894046Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.labor_expenses_per_agency'", "name": "NewConnection", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.895153Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.omny_adoption_by_station'", "name": "NewConnection", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.896269Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.bond_payment_info", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.897346Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.omny_adoption_increase'", "name": "NewConnection", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:21.898182Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.subway_station_stats'", "name": "NewConnection", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:21.898901Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.total_riders_per_station'", "name": "NewConnection", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:21.899610Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "started", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E005", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Acquiring new duckdb connection 'model.mta.weekly_riders_per_station'", "name": "NewConnection", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:21.900442Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.daily_ridership", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.901394Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.expense_type_per_year", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.902213Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.avg_riders_per_day\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.910751Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.fare_class_boro", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.911534Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.forecast_accuracy_2023", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.912195Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.labor_expenses_per_agency", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.912968Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.omny_adoption_by_station", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.913743Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.bond_payment_info\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.917282Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.omny_adoption_increase", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:21.918389Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.subway_station_stats", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:21.919373Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.total_riders_per_station", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:21.920240Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "Q030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began compiling node model.mta.weekly_riders_per_station", "name": "NodeCompiling", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:21.920985Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.daily_ridership\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.927027Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.expense_type_per_year\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.931705Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.fare_class_boro\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.936280Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.forecast_accuracy_2023\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.940826Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.labor_expenses_per_agency\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.944594Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.omny_adoption_by_station\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.947841Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.avg_riders_per_day", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:21.948658Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.omny_adoption_increase\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:21.953500Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.bond_payment_info", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:21.954273Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.subway_station_stats\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:21.958615Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.total_riders_per_station\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:21.961897Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "compiling", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "Q029", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing injected SQL for node \"model.mta.weekly_riders_per_station\"", "name": "WritingInjectedSQLForNode", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:21.966911Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.daily_ridership", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:21.968337Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.expense_type_per_year", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:21.969646Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.fare_class_boro", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:21.970382Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.forecast_accuracy_2023", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:21.971017Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.labor_expenses_per_agency", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:21.972418Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.omny_adoption_by_station", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:21.978269Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.bond_payment_info\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.bond_payment_info\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.015083Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.avg_riders_per_day\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.avg_riders_per_day\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.018118Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.omny_adoption_increase", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.019194Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.total_riders_per_station", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.020806Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.subway_station_stats", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.021428Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.daily_ridership\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.daily_ridership\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.025489Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "Q031", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Began executing node model.mta.weekly_riders_per_station", "name": "NodeExecuting", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.026123Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.expense_type_per_year\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.expense_type_per_year\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.029871Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.fare_class_boro\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.fare_class_boro\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.033693Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.forecast_accuracy_2023\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.forecast_accuracy_2023\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.040399Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.labor_expenses_per_agency\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.labor_expenses_per_agency\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.044137Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.omny_adoption_by_station\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.omny_adoption_by_station\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.047859Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.omny_adoption_increase\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.omny_adoption_increase\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.052057Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.total_riders_per_station\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.total_riders_per_station\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.056509Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.subway_station_stats\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.subway_station_stats\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.060450Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.bond_payment_info\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.061451Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.avg_riders_per_day\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.062810Z"}}
{"data": {"msg": "Writing runtime sql for node \"model.mta.weekly_riders_per_station\"", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "I063", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Writing runtime sql for node \"model.mta.weekly_riders_per_station\"", "name": "JinjaLogDebug", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.066593Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.daily_ridership\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.067178Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.expense_type_per_year\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.068759Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.fare_class_boro\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.069522Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.labor_expenses_per_agency\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.071048Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.forecast_accuracy_2023\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.071814Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.omny_adoption_by_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.072702Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.omny_adoption_increase\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.073701Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.total_riders_per_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.074458Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.075141Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.avg_riders_per_day: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.075722Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.subway_station_stats\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.076224Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.077102Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.weekly_riders_per_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.077633Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.078218Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.fare_class_boro: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.078777Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.079477Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.080073Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_by_station: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.080639Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_increase: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.081192Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.total_riders_per_station: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.081756Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.082293Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.082861Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.subway_station_stats: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.083441Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.084059Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.weekly_riders_per_station: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.084680Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.085272Z"}}
{"data": {"connection_state": "closed", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state closed", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.085903Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.086555Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.087193Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.087771Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.088320Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.088906Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.097695Z"}}
{"data": {"connection_state": "init", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state init", "name": "NewConnectionOpening", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.098745Z"}}
{"data": {"elapsed": 0.017948907, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.018 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.100274Z"}}
{"data": {"elapsed": 0.019146817, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.019 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.102131Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.bond_payment_info\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.104157Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.avg_riders_per_day\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.105439Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"bond_payment_info__dbt_tmp\"\n  \n    as (\n      WITH payment_stats AS (\n    SELECT\n        general_ledger,\n        MIN(timestamp) AS first_payment_date,\n        MAX(timestamp) AS last_payment_date,\n        AVG(amount) AS average_payment,\n        COUNT(DISTINCT timestamp) AS total_payments,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment\n    FROM\n        \"mtastats\".\"main\".\"mta_operations_statement\"\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n),\nfirst_payment AS (\n    SELECT\n        general_ledger,\n        MIN(timestamp) AS first_payment_date,\n        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount\n    FROM\n        mta_operations_statement fp\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n),\nlast_payment AS (\n    SELECT\n        general_ledger,\n        MAX(timestamp) AS last_payment_date,\n        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount\n    FROM\n        mta_operations_statement lp\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n)\n-- Wrapping everything inside another DISTINCT query\nSELECT DISTINCT\n    ps.general_ledger,\n    fp.first_payment_date,\n    fp.first_payment_amount,\n    ps.last_payment_date,\n    lp.last_payment_amount,\n    ps.average_payment,\n    ps.median_payment,\n    ps.total_payments\nFROM\n    payment_stats ps\nLEFT JOIN\n    first_payment fp ON ps.general_ledger = fp.general_ledger\nLEFT JOIN\n    last_payment lp ON ps.general_ledger = lp.general_ledger\nORDER BY\n    ps.general_ledger\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"bond_payment_info__dbt_tmp\"\n  \n    as (\n      WITH payment_stats AS (\n    SELECT\n        general_ledger,\n        MIN(timestamp) AS first_payment_date,\n        MAX(timestamp) AS last_payment_date,\n        AVG(amount) AS average_payment,\n        COUNT(DISTINCT timestamp) AS total_payments,\n        PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY amount) AS median_payment\n    FROM\n        \"mtastats\".\"main\".\"mta_operations_statement\"\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n),\nfirst_payment AS (\n    SELECT\n        general_ledger,\n        MIN(timestamp) AS first_payment_date,\n        (SELECT amount FROM mta_operations_statement WHERE general_ledger = fp.general_ledger AND timestamp = MIN(fp.timestamp)) AS first_payment_amount\n    FROM\n        mta_operations_statement fp\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n),\nlast_payment AS (\n    SELECT\n        general_ledger,\n        MAX(timestamp) AS last_payment_date,\n        (SELECT amount FROM mta_operations_statement WHERE general_ledger = lp.general_ledger AND timestamp = MAX(lp.timestamp)) AS last_payment_amount\n    FROM\n        mta_operations_statement lp\n    WHERE\n        scenario = 'Actual'\n        AND type = 'Debt Service Expenses'\n    GROUP BY\n        general_ledger\n)\n-- Wrapping everything inside another DISTINCT query\nSELECT DISTINCT\n    ps.general_ledger,\n    fp.first_payment_date,\n    fp.first_payment_amount,\n    ps.last_payment_date,\n    lp.last_payment_amount,\n    ps.average_payment,\n    ps.median_payment,\n    ps.total_payments\nFROM\n    payment_stats ps\nLEFT JOIN\n    first_payment fp ON ps.general_ledger = fp.general_ledger\nLEFT JOIN\n    last_payment lp ON ps.general_ledger = lp.general_ledger\nORDER BY\n    ps.general_ledger\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.106437Z"}}
{"data": {"elapsed": 0.02305878, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.023 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.107150Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.avg_riders_per_day\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"avg_riders_per_day__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, \n    AVG(ridership) AS average_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.avg_riders_per_day: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.avg_riders_per_day\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"avg_riders_per_day__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, \n    AVG(ridership) AS average_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.108029Z"}}
{"data": {"elapsed": 0.03440094, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.034 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.119844Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.daily_ridership\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.121027Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.expense_type_per_year\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.122372Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"daily_ridership__dbt_tmp\"\n  \n    as (\n      WITH ridership_data AS (\n    SELECT  \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(subways_total_ridership) AS ridership,\n        'Subway' AS transport_type,\n        AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(buses_total_ridership) AS ridership,\n        'Buses' AS transport_type,\n        AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(lirr_total_ridership) AS ridership,\n        'LIRR' AS transport_type,\n        AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(metro_north_total_ridership) AS ridership,\n        'Metro North' AS transport_type,\n        AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(access_a_ride_total_trips) AS ridership,\n        'Access-A-Ride' AS transport_type,\n        AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(bridges_tunnels_total_traffic) AS ridership,\n        'Bridges and Tunnels' AS transport_type,\n        AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(staten_island_railway_total_ridership) AS ridership,\n        'Staten Island Railway' AS transport_type,\n        AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n),\nweather_data AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        daily_weather_asset\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    rd.week_start, \n    rd.transport_type,\n    rd.ridership,\n    rd.avg_pct_pre_pandemic,\n    wd.avg_weekly_temperature,\n    wd.total_weekly_precipitation\nFROM \n    ridership_data rd\nLEFT JOIN \n    weather_data wd\nON \n    rd.week_start = wd.week_start\nWHERE \n    rd.week_start < '2024-10-15'\nORDER BY \n    rd.week_start, rd.transport_type\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"daily_ridership__dbt_tmp\"\n  \n    as (\n      WITH ridership_data AS (\n    SELECT  \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(subways_total_ridership) AS ridership,\n        'Subway' AS transport_type,\n        AVG(subways_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(buses_total_ridership) AS ridership,\n        'Buses' AS transport_type,\n        AVG(buses_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(lirr_total_ridership) AS ridership,\n        'LIRR' AS transport_type,\n        AVG(lirr_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(metro_north_total_ridership) AS ridership,\n        'Metro North' AS transport_type,\n        AVG(metro_north_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(access_a_ride_total_trips) AS ridership,\n        'Access-A-Ride' AS transport_type,\n        AVG(access_a_ride_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(bridges_tunnels_total_traffic) AS ridership,\n        'Bridges and Tunnels' AS transport_type,\n        AVG(bridges_tunnels_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n\n    UNION ALL\n\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        SUM(staten_island_railway_total_ridership) AS ridership,\n        'Staten Island Railway' AS transport_type,\n        AVG(staten_island_railway_pct_pre_pandemic) AS avg_pct_pre_pandemic\n    FROM \"mtastats\".\"main\".\"mta_daily_ridership\"\n    GROUP BY week_start, transport_type\n),\nweather_data AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        daily_weather_asset\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    rd.week_start, \n    rd.transport_type,\n    rd.ridership,\n    rd.avg_pct_pre_pandemic,\n    wd.avg_weekly_temperature,\n    wd.total_weekly_precipitation\nFROM \n    ridership_data rd\nLEFT JOIN \n    weather_data wd\nON \n    rd.week_start = wd.week_start\nWHERE \n    rd.week_start < '2024-10-15'\nORDER BY \n    rd.week_start, rd.transport_type\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.123907Z"}}
{"data": {"elapsed": 0.038793016, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.039 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.124744Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"expense_type_per_year__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency,\n    fiscal_year,\n    general_ledger,\n    SUM(amount) AS total_expenses\nFROM \n    \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE \n    scenario = 'Actual'\n    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'\nGROUP BY \n    agency,\n    fiscal_year,\n    general_ledger\nORDER BY \n    agency, fiscal_year, general_ledger\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"expense_type_per_year__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency,\n    fiscal_year,\n    general_ledger,\n    SUM(amount) AS total_expenses\nFROM \n    \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE \n    scenario = 'Actual'\n    AND type = 'Total Expenses Before Non-Cash Liability Adjs.'\nGROUP BY \n    agency,\n    fiscal_year,\n    general_ledger\nORDER BY \n    agency, fiscal_year, general_ledger\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.125620Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.fare_class_boro\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.127064Z"}}
{"data": {"elapsed": 0.04167763, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.042 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.128298Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.fare_class_boro\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"fare_class_boro__dbt_tmp\"\n  \n    as (\n      WITH total_ridership_per_borough_daytype AS (\n    -- Calculate total ridership for each borough and day type (Weekday or Weekend)\n    SELECT \n        borough, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership_borough_daytype\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, day_type\n),\nridership_by_fare_class AS (\n    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)\n    SELECT \n        borough, \n        fare_class_category, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.fare_class_boro: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.fare_class_boro\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"fare_class_boro__dbt_tmp\"\n  \n    as (\n      WITH total_ridership_per_borough_daytype AS (\n    -- Calculate total ridership for each borough and day type (Weekday or Weekend)\n    SELECT \n        borough, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership_borough_daytype\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, day_type\n),\nridership_by_fare_class AS (\n    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)\n    SELECT \n        borough, \n        fare_class_category, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.129598Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.labor_expenses_per_agency\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.130486Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency_full_name,\n    financial_plan_year,\n    expense_type,\n    general_ledger,\n    SUM(amount) AS total_labor_expenses\nFROM \n    \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE \n    subtype = 'Labor Expenses' AND \n    scenario = 'Actual'\nGROUP BY \n    agency_full_name,\n    financial_plan_year,\n    expense_type,\n    general_ledger\nORDER BY \n    agency_full_name, financial_plan_year, expense_type, general_ledger\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency_full_name,\n    financial_plan_year,\n    expense_type,\n    general_ledger,\n    SUM(amount) AS total_labor_expenses\nFROM \n    \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE \n    subtype = 'Labor Expenses' AND \n    scenario = 'Actual'\nGROUP BY \n    agency_full_name,\n    financial_plan_year,\n    expense_type,\n    general_ledger\nORDER BY \n    agency_full_name, financial_plan_year, expense_type, general_ledger\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.132971Z"}}
{"data": {"elapsed": 0.04690588, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.047 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.134329Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.forecast_accuracy_2023\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.136391Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency_full_name,\n    general_ledger,\n    expense_type,\n\n    -- Total amounts for Adopted Budget by Financial Plan Year\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2019 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2019,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2020 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2020,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2021 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2021,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2022 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2022,\n\n    -- Total amount for Actual 2023\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) AS total_actual_2023,\n\n    -- Differences between Actual and Adopted Budget for each year\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2019 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2019_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2020 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2020_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2021 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2021_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2022 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2022_vs_actual,\n\n    -- Percentage differences for each year\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2019_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2020_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2021_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2022_vs_actual\n\nFROM \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE type = 'Total Expenses Before Non-Cash Liability Adjs.'\nGROUP BY agency_full_name, general_ledger, expense_type\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_tmp\"\n  \n    as (\n      SELECT \n    agency_full_name,\n    general_ledger,\n    expense_type,\n\n    -- Total amounts for Adopted Budget by Financial Plan Year\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2019 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2019,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2020 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2020,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2021 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2021,\n\n    SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2022 \n        THEN amount \n        ELSE 0 \n    END) AS total_adopted_budget_2022,\n\n    -- Total amount for Actual 2023\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) AS total_actual_2023,\n\n    -- Differences between Actual and Adopted Budget for each year\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2019 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2019_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2020 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2020_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2021 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2021_vs_actual,\n\n    SUM(CASE \n        WHEN scenario = 'Actual' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2023 \n        THEN amount \n        ELSE 0 \n    END) - SUM(CASE \n        WHEN scenario = 'Adopted Budget' \n            AND fiscal_year = 2023 \n            AND financial_plan_year = 2022 \n        THEN amount \n        ELSE 0 \n    END) AS difference_2022_vs_actual,\n\n    -- Percentage differences for each year\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2019 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2019_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2020 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2020_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2021 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2021_vs_actual,\n\n    CASE \n        WHEN SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END) <> 0 \n        THEN (SUM(CASE \n            WHEN scenario = 'Actual' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2023 \n            THEN amount \n            ELSE 0 \n        END) - SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END)) / SUM(CASE \n            WHEN scenario = 'Adopted Budget' \n                AND fiscal_year = 2023 \n                AND financial_plan_year = 2022 \n            THEN amount \n            ELSE 0 \n        END)\n        ELSE NULL \n    END AS percentage_diff_2022_vs_actual\n\nFROM \"mtastats\".\"main\".\"mta_operations_statement\"\nWHERE type = 'Total Expenses Before Non-Cash Liability Adjs.'\nGROUP BY agency_full_name, general_ledger, expense_type\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.137982Z"}}
{"data": {"elapsed": 0.052895714, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.053 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.140765Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.omny_adoption_by_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.143893Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_by_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_by_station__dbt_tmp\"\n  \n    as (\n      WITH yearly_data AS (\n    SELECT \n        station_complex,\n        YEAR(transit_timestamp) AS year,\n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_by_station: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_by_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_by_station__dbt_tmp\"\n  \n    as (\n      WITH yearly_data AS (\n    SELECT \n        station_complex,\n        YEAR(transit_timestamp) AS year,\n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.145679Z"}}
{"data": {"elapsed": 0.060902014, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.061 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.149382Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.omny_adoption_increase\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.151860Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_increase\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_increase__dbt_tmp\"\n  \n    as (\n      WITH omny_ridership_by_station_year AS (\n    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        EXTRACT(YEAR FROM transit_timestamp) AS year, \n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_increase: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_increase\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_increase__dbt_tmp\"\n  \n    as (\n      WITH omny_ridership_by_station_year AS (\n    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        EXTRACT(YEAR FROM transit_timestamp) AS year, \n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.154828Z"}}
{"data": {"elapsed": 0.07129359, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.071 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.160282Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.total_riders_per_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.161519Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.total_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"total_riders_per_station__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    SUM(ridership) AS total_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.total_riders_per_station: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.total_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"total_riders_per_station__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    SUM(ridership) AS total_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.162908Z"}}
{"data": {"elapsed": 0.069426134, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.069 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.167166Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.subway_station_stats\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.170018Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.subway_station_stats\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"subway_station_stats__dbt_tmp\"\n  \n    as (\n      WITH ridership_by_day AS (\n    -- Calculate daily ridership for each station, weekday/weekend split\n    SELECT \n        station_complex,\n        CAST(transit_timestamp AS DATE) AS day,\n        DAYOFWEEK(transit_timestamp) AS weekday,\n        SUM(ridership) AS daily_ridership,\n        SUM(transfers) AS daily_transfers,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.subway_station_stats: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.subway_station_stats\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"subway_station_stats__dbt_tmp\"\n  \n    as (\n      WITH ridership_by_day AS (\n    -- Calculate daily ridership for each station, weekday/weekend split\n    SELECT \n        station_complex,\n        CAST(transit_timestamp AS DATE) AS day,\n        DAYOFWEEK(transit_timestamp) AS weekday,\n        SUM(ridership) AS daily_ridership,\n        SUM(transfers) AS daily_transfers,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.171775Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.fare_class_boro\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"fare_class_boro__dbt_tmp\"\n  \n    as (\n      WITH total_ridership_per_borough_daytype AS (\n    -- Calculate total ridership for each borough and day type (Weekday or Weekend)\n    SELECT \n        borough, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership_borough_daytype\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, day_type\n),\nridership_by_fare_class AS (\n    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)\n    SELECT \n        borough, \n        fare_class_category, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.fare_class_boro\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"fare_class_boro__dbt_tmp\"\n  \n    as (\n      WITH total_ridership_per_borough_daytype AS (\n    -- Calculate total ridership for each borough and day type (Weekday or Weekend)\n    SELECT \n        borough, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership_borough_daytype\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, day_type\n),\nridership_by_fare_class AS (\n    -- Calculate total ridership by fare class category, borough, and day type (Weekday/Weekend)\n    SELECT \n        borough, \n        fare_class_category, \n        CASE \n            WHEN EXTRACT(DAYOFWEEK FROM transit_timestamp) IN (1, 7) THEN 'Weekend'\n            ELSE 'Weekday'\n        END AS day_type,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.181922Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.avg_riders_per_day\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"avg_riders_per_day__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, \n    AVG(ridership) AS average_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.avg_riders_per_day\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"avg_riders_per_day__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    EXTRACT(DAYOFWEEK FROM transit_timestamp) AS day_of_week, \n    AVG(ridership) AS average_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.182991Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.184159Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.186267Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.fare_class_boro: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.189231Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.avg_riders_per_day: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.190792Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_by_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_by_station__dbt_tmp\"\n  \n    as (\n      WITH yearly_data AS (\n    SELECT \n        station_complex,\n        YEAR(transit_timestamp) AS year,\n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_by_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_by_station__dbt_tmp\"\n  \n    as (\n      WITH yearly_data AS (\n    SELECT \n        station_complex,\n        YEAR(transit_timestamp) AS year,\n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) * 1.0 / SUM(ridership) AS omny_percentage\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.191743Z"}}
{"data": {"elapsed": 0.09623045, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.096 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.194994Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.202318Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.total_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"total_riders_per_station__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    SUM(ridership) AS total_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.total_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"total_riders_per_station__dbt_tmp\"\n  \n    as (\n      SELECT \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    SUM(ridership) AS total_ridership\nFROM \n    \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.204611Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_increase\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_increase__dbt_tmp\"\n  \n    as (\n      WITH omny_ridership_by_station_year AS (\n    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        EXTRACT(YEAR FROM transit_timestamp) AS year, \n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.omny_adoption_increase\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"omny_adoption_increase__dbt_tmp\"\n  \n    as (\n      WITH omny_ridership_by_station_year AS (\n    -- Calculate the OMNY ridership and total ridership for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        EXTRACT(YEAR FROM transit_timestamp) AS year, \n        SUM(CASE WHEN payment_method = 'omny' THEN ridership ELSE 0 END) AS omny_ridership,\n        SUM(ridership) AS total_ridership\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.206696Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.weekly_riders_per_station\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.214622Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_by_station: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.217813Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.subway_station_stats\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"subway_station_stats__dbt_tmp\"\n  \n    as (\n      WITH ridership_by_day AS (\n    -- Calculate daily ridership for each station, weekday/weekend split\n    SELECT \n        station_complex,\n        CAST(transit_timestamp AS DATE) AS day,\n        DAYOFWEEK(transit_timestamp) AS weekday,\n        SUM(ridership) AS daily_ridership,\n        SUM(transfers) AS daily_transfers,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.subway_station_stats\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"subway_station_stats__dbt_tmp\"\n  \n    as (\n      WITH ridership_by_day AS (\n    -- Calculate daily ridership for each station, weekday/weekend split\n    SELECT \n        station_complex,\n        CAST(transit_timestamp AS DATE) AS day,\n        DAYOFWEEK(transit_timestamp) AS weekday,\n        SUM(ridership) AS daily_ridership,\n        SUM(transfers) AS daily_transfers,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.221306Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.223597Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.226554Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.weekly_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"weekly_riders_per_station__dbt_tmp\"\n  \n    as (\n      WITH weekly_ridership AS (\n    SELECT \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp) AS week_start,\n        SUM(ridership) AS total_weekly_ridership,\n        MIN(latitude) AS latitude,  -- Assuming latitude is the same for each station complex, use MIN() or MAX()\n        MIN(longitude) AS longitude  -- Assuming longitude is the same for each station complex, use MIN() or MAX()\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  "}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.weekly_riders_per_station: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.weekly_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"weekly_riders_per_station__dbt_tmp\"\n  \n    as (\n      WITH weekly_ridership AS (\n    SELECT \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp) AS week_start,\n        SUM(ridership) AS total_weekly_ridership,\n        MIN(latitude) AS latitude,  -- Assuming latitude is the same for each station complex, use MIN() or MAX()\n        MIN(longitude) AS longitude  -- Assuming longitude is the same for each station complex, use MIN() or MAX()\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  ", "name": "SQLQuery", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.231457Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.243920Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.total_riders_per_station: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.247348Z"}}
{"data": {"elapsed": 0.12490153, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.125 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.251667Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_increase: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.253897Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.subway_station_stats: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.261221Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.omny_adoption_by_station'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.265066Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  ...\n             ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.avg_riders_per_day'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.268393Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.fare_class_boro'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.270294Z"}}
{"data": {"args": [], "base_msg": "Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.weekly_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"weekly_riders_per_station__dbt_tmp\"\n  \n    as (\n      WITH weekly_ridership AS (\n    SELECT \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp) AS week_start,\n        SUM(ridership) AS total_weekly_ridership,\n        MIN(latitude) AS latitude,  -- Assuming latitude is the same for each station complex, use MIN() or MAX()\n        MIN(longitude) AS longitude  -- Assuming longitude is the same for each station complex, use MIN() or MAX()\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  ", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Error running SQL: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.weekly_riders_per_station\"} */\n\n  \n    \n    \n\n    create  table\n      \"mtastats\".\"main\".\"weekly_riders_per_station__dbt_tmp\"\n  \n    as (\n      WITH weekly_ridership AS (\n    SELECT \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp) AS week_start,\n        SUM(ridership) AS total_weekly_ridership,\n        MIN(latitude) AS latitude,  -- Assuming latitude is the same for each station complex, use MIN() or MAX()\n        MIN(longitude) AS longitude  -- Assuming longitude is the same for each station complex, use MIN() or MAX()\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  ", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.271779Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.daily_ridership\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.279086Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  ...\n             ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.total_riders_per_station'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.280130Z"}}
{"data": {"elapsed": 0.15172924, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.152 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.280948Z"}}
{"data": {"elapsed": 0.17262813, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.173 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.281726Z"}}
{"data": {"elapsed": 0.14726634, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.147 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.282605Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.subway_station_stats'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.285107Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_by_station: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.286301Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.omny_adoption_increase'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.287540Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.avg_riders_per_day: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.288628Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.fare_class_boro: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.289598Z"}}
{"data": {"args": [], "base_msg": "Rolling back transaction.", "name": "DuckDB", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E001", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "DuckDB adapter: Rolling back transaction.", "name": "AdapterEventDebug", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.290354Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\nalter table \"mtastats\".\"main\".\"daily_ridership__dbt_tmp\" rename to \"daily_ridership\""}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\nalter table \"mtastats\".\"main\".\"daily_ridership__dbt_tmp\" rename to \"daily_ridership\"", "name": "SQLQuery", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.291115Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.total_riders_per_station: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.291961Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.expense_type_per_year\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.295882Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.bond_payment_info\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.298871Z"}}
{"data": {"elapsed": 0.15801677, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.158 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.299570Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.labor_expenses_per_agency\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.302736Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.subway_station_stats: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.303417Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.omny_adoption_increase: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.305429Z"}}
{"data": {"exc": "Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2022, 2023, 2024)\n    GROUP BY \n        station_complex, \n        YEAR(transit_timestamp)\n),\npivoted_data AS (\n    SELECT \n        station_complex,\n        MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n        MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n        MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n    FROM \n        yearly_data\n    GROUP BY \n        station_complex\n)\nSELECT \n    station_complex,\n    omny_2022,\n    omny_2023,\n    omny_2024,\n    CASE \n        WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n            (omny_2023 - omny_2022) / omny_2022\n        ELSE NULL\n    END AS omny_2023_growth,\n    CASE \n        WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n            (omny_2024 - omny_2023) / omny_2023\n        ELSE NULL\n    END AS omny_2024_growth\nFROM \n    pivoted_data\nORDER BY \n    station_complex\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.306669Z"}}
{"data": {"exc": "Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, \n    station_complex, \n    latitude, \n    longitude, \n    day_of_week\nORDER BY \n    average_ridership DESC\n    );\n  \n  ...\n             ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.309554Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.weekly_riders_per_station: ROLLBACK", "name": "Rollback", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.310576Z"}}
{"data": {"exc": "Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        borough, fare_class_category, day_type\n)\nSELECT \n    r.borough, \n    r.fare_class_category, \n    r.day_type,\n    r.total_ridership, \n    ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\nFROM \n    ridership_by_fare_class r\nJOIN \n    total_ridership_per_borough_daytype t\n    ON r.borough = t.borough \n    AND r.day_type = t.day_type\nORDER BY \n    total_ridership DESC\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.311537Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\nalter table \"mtastats\".\"main\".\"expense_type_per_year__dbt_tmp\" rename to \"expense_type_per_year\""}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\nalter table \"mtastats\".\"main\".\"expense_type_per_year__dbt_tmp\" rename to \"expense_type_per_year\"", "name": "SQLQuery", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.313358Z"}}
{"data": {"elapsed": 0.001973026, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.002 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.314251Z"}}
{"data": {"exc": "Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\nGROUP BY \n    station_complex_id, station_complex, latitude, longitude\nORDER BY \n    total_ridership DESC\n    );\n  \n  ...\n             ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.315095Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\nalter table \"mtastats\".\"main\".\"bond_payment_info__dbt_tmp\" rename to \"bond_payment_info\""}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\nalter table \"mtastats\".\"main\".\"bond_payment_info__dbt_tmp\" rename to \"bond_payment_info\"", "name": "SQLQuery", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.315742Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.forecast_accuracy_2023\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.319106Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\nalter table \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_tmp\" rename to \"labor_expenses_per_agency\""}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\nalter table \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_tmp\" rename to \"labor_expenses_per_agency\"", "name": "SQLQuery", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.319861Z"}}
{"data": {"exc": "Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) = 2024\n    GROUP BY \n        station_complex, \n        CAST(transit_timestamp AS DATE), \n        DAYOFWEEK(transit_timestamp)\n),\ntotal_riders_ytd AS (\n    -- Total riders in 2023 and 2024 YTD\n    SELECT \n        station_complex,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n        SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n        MIN(latitude) AS latitude,   -- Add latitude\n        MIN(longitude) AS longitude  -- Add longitude\n    FROM \n        \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        YEAR(transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex\n),\nweekday_weekend AS (\n    -- Calculate weekday vs. weekend ridership and percentage of transfers\n    SELECT \n        station_complex,\n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END AS day_type,\n        AVG(daily_ridership) AS avg_ridership,\n        SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex, \n        CASE \n            WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n            ELSE 'weekend'\n        END\n),\nsingle_day_stats AS (\n    -- Highest and lowest single day ridership\n    SELECT \n        station_complex,\n        MAX(daily_ridership) AS highest_single_day_ridership,\n        MIN(daily_ridership) AS lowest_single_day_ridership\n    FROM \n        ridership_by_day\n    GROUP BY \n        station_complex\n),\nhighest_single_day AS (\n    -- Day with highest single day ridership\n    SELECT \n        station_complex,\n        day AS highest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MAX(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n),\nlowest_single_day AS (\n    -- Day with lowest single day ridership\n    SELECT \n        station_complex,\n        day AS lowest_single_day_ridership_day\n    FROM \n        ridership_by_day rbd\n    WHERE \n        rbd.daily_ridership = (\n            SELECT \n                MIN(daily_ridership)\n            FROM \n                ridership_by_day\n            WHERE \n                station_complex = rbd.station_complex\n        )\n)\nSELECT \n    rbd.station_complex,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n    sds.highest_single_day_ridership,\n    hsd.highest_single_day_ridership_day,\n    sds.lowest_single_day_ridership,\n    lsd.lowest_single_day_ridership_day,\n    MAX(ty.total_riders_2023) AS total_riders_2023,\n    MAX(ty.total_riders_2024) AS total_riders_2024,\n    MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n    MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n    (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n    MAX(rbd.latitude) AS latitude,   -- Add latitude\n    MAX(rbd.longitude) AS longitude  -- Add longitude\nFROM \n    ridership_by_day rbd\nJOIN \n    weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\nJOIN \n    single_day_stats sds ON rbd.station_complex = sds.station_complex\nJOIN \n    highest_single_day hsd ON rbd.station_complex = hsd.station_complex\nJOIN \n    lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\nJOIN \n    total_riders_ytd ty ON rbd.station_complex = ty.station_complex\nGROUP BY \n    rbd.station_complex, \n    sds.highest_single_day_ridership, \n    sds.lowest_single_day_ridership, \n    hsd.highest_single_day_ridership_day, \n    lsd.lowest_single_day_ridership_day\nORDER BY \n    rbd.station_complex\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.323586Z"}}
{"data": {"exc": "Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    WHERE \n        EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n    GROUP BY \n        station_complex_id, station_complex, latitude, longitude, year\n),\nomny_percentage_by_station AS (\n    -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n    SELECT \n        station_complex_id, \n        station_complex, \n        latitude, \n        longitude, \n        year, \n        (omny_ridership / total_ridership) AS omny_percentage\n    FROM \n        omny_ridership_by_station_year\n)\nSELECT \n    s2023.station_complex_id AS station_id, \n    s2023.station_complex AS station_name,\n    s2023.latitude,\n    s2023.longitude,\n    s2023.omny_percentage AS omny_percentage_2023,\n    s2024.omny_percentage AS omny_percentage_2024,\n    (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\nFROM \n    omny_percentage_by_station s2023\nJOIN \n    omny_percentage_by_station s2024 \n    ON s2023.station_complex_id = s2024.station_complex_id\n    AND s2023.latitude = s2024.latitude\n    AND s2023.longitude = s2024.longitude\n    AND s2023.year = 2023\n    AND s2024.year = 2024\nWHERE \n    s2024.omny_percentage > s2023.omny_percentage\nORDER BY \n    omny_percentage_increase DESC\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.327690Z"}}
{"data": {"description": "sql table model main.omny_adoption_by_station", "execution_time": 0.4285555, "index": 8, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.324554", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "8 of 12 ERROR creating sql table model main.omny_adoption_by_station ........... [\u001b[31mERROR\u001b[0m in 0.43s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.326277Z"}}
{"data": {"description": "sql table model main.avg_riders_per_day", "execution_time": 0.45064092, "index": 1, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.328802", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "1 of 12 ERROR creating sql table model main.avg_riders_per_day ................. [\u001b[31mERROR\u001b[0m in 0.45s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.329169Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 352, in connection_named\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^\n\nDuring handling of the above exception, another exception occurred:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/connections.py\", line 328, in _rollback_handle\n    connection.handle.rollback()\nAttributeError: 'DuckDBConnectionWrapper' object has no attribute 'rollback'\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E009", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Failed to rollback 'model.mta.weekly_riders_per_station'", "name": "RollbackFailed", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.331676Z"}}
{"data": {"description": "sql table model main.fare_class_boro", "execution_time": 0.43764782, "index": 5, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.330539", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "5 of 12 ERROR creating sql table model main.fare_class_boro .................... [\u001b[31mERROR\u001b[0m in 0.44s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.330819Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.351916Z"}}
{"data": {"description": "sql table model main.total_riders_per_station", "execution_time": 0.45317078, "index": 11, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.352586", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "11 of 12 ERROR creating sql table model main.total_riders_per_station .......... [\u001b[31mERROR\u001b[0m in 0.45s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.352980Z"}}
{"data": {"elapsed": 0.021280777, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.021 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.354068Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\nalter table \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_tmp\" rename to \"forecast_accuracy_2023\""}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\nalter table \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_tmp\" rename to \"forecast_accuracy_2023\"", "name": "SQLQuery", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.355137Z"}}
{"data": {"description": "sql table model main.subway_station_stats", "execution_time": 0.45792317, "index": 10, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.356630", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "10 of 12 ERROR creating sql table model main.subway_station_stats .............. [\u001b[31mERROR\u001b[0m in 0.46s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.357101Z"}}
{"data": {"elapsed": 0.002927373, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.003 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.359137Z"}}
{"data": {"elapsed": 0.005069498, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.005 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.359824Z"}}
{"data": {"description": "sql table model main.omny_adoption_increase", "execution_time": 0.46033168, "index": 9, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.358257", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "9 of 12 ERROR creating sql table model main.omny_adoption_increase ............. [\u001b[31mERROR\u001b[0m in 0.46s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.358586Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.324554", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871774", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}, "run_result": {"adapter_response": {}, "execution_time": 0.4285555, "message": "Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-8 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.978085Z", "name": "compile", "started_at": "2025-01-30T16:00:21.945294Z"}, {"completed_at": "2025-01-30T16:00:22.217641Z", "name": "execute", "started_at": "2025-01-30T16:00:22.044877Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.omny_adoption_by_station", "name": "NodeFinished", "pid": 739127, "thread": "Thread-8 (worker)", "ts": "2025-01-30T16:00:22.361449Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.328802", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.863769", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}, "run_result": {"adapter_response": {}, "execution_time": 0.45064092, "message": "Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "num_failures": 0, "status": "error", "thread": "Thread-1 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.948442Z", "name": "compile", "started_at": "2025-01-30T16:00:21.903056Z"}, {"completed_at": "2025-01-30T16:00:22.190648Z", "name": "execute", "started_at": "2025-01-30T16:00:21.972865Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.avg_riders_per_day", "name": "NodeFinished", "pid": 739127, "thread": "Thread-1 (worker)", "ts": "2025-01-30T16:00:22.362743Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.weekly_riders_per_station: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.363811Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.330539", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.869173", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}, "run_result": {"adapter_response": {}, "execution_time": 0.43764782, "message": "Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-5 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.970262Z", "name": "compile", "started_at": "2025-01-30T16:00:21.932629Z"}, {"completed_at": "2025-01-30T16:00:22.189010Z", "name": "execute", "started_at": "2025-01-30T16:00:22.030474Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.fare_class_boro", "name": "NodeFinished", "pid": 739127, "thread": "Thread-5 (worker)", "ts": "2025-01-30T16:00:22.364678Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.daily_ridership\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.365511Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.352586", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.875660", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}, "run_result": {"adapter_response": {}, "execution_time": 0.45317078, "message": "Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "num_failures": 0, "status": "error", "thread": "Thread-11 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.020663Z", "name": "compile", "started_at": "2025-01-30T16:00:21.959260Z"}, {"completed_at": "2025-01-30T16:00:22.247128Z", "name": "execute", "started_at": "2025-01-30T16:00:22.052861Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.total_riders_per_station", "name": "NodeFinished", "pid": 739127, "thread": "Thread-11 (worker)", "ts": "2025-01-30T16:00:22.366611Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.369085Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.356630", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.874884", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}, "run_result": {"adapter_response": {}, "execution_time": 0.45792317, "message": "Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-10 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.021321Z", "name": "compile", "started_at": "2025-01-30T16:00:21.954920Z"}, {"completed_at": "2025-01-30T16:00:22.261006Z", "name": "execute", "started_at": "2025-01-30T16:00:22.057360Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.subway_station_stats", "name": "NodeFinished", "pid": 739127, "thread": "Thread-10 (worker)", "ts": "2025-01-30T16:00:22.370470Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.373949Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.376583Z"}}
{"data": {"elapsed": 0.007551129, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.008 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.377329Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.358257", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.873022", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}, "run_result": {"adapter_response": {}, "execution_time": 0.46033168, "message": "Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-9 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.018979Z", "name": "compile", "started_at": "2025-01-30T16:00:21.949568Z"}, {"completed_at": "2025-01-30T16:00:22.253663Z", "name": "execute", "started_at": "2025-01-30T16:00:22.049125Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.omny_adoption_increase", "name": "NodeFinished", "pid": 739127, "thread": "Thread-9 (worker)", "ts": "2025-01-30T16:00:22.378442Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.381441Z"}}
{"data": {"exc": "Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "exc_info": "Traceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 84, in exception_handler\n    yield\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 93, in add_query\n    cursor.execute(sql, bindings)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/environments/local.py\", line 23, in execute\n    return self._cursor.execute(sql)\nduckdb.duckdb.CatalogException: Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\nDid you mean \"hourly_weather_asset\"?\nLINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n    GROUP BY \n        station_complex, \n        DATE_TRUNC('week', transit_timestamp)\n),\nweekly_weather AS (\n    SELECT \n        DATE_TRUNC('week', date) AS week_start,\n        AVG(temperature_mean) AS avg_weekly_temperature,\n        SUM(precipitation_sum) AS total_weekly_precipitation\n    FROM \n        \"mtastats\".\"main\".\"daily_weather_asset\"\n    GROUP BY \n        DATE_TRUNC('week', date)\n)\nSELECT \n    wr.station_complex, \n    wr.week_start, \n    wr.total_weekly_ridership,\n    wr.latitude,\n    wr.longitude,\n    ww.avg_weekly_temperature,\n    ww.total_weekly_precipitation\nFROM \n    weekly_ridership wr\nLEFT JOIN \n    weekly_weather ww\nON \n    wr.week_start = ww.week_start\nWHERE \n    wr.week_start < '2024-09-17'\nORDER BY \n    wr.station_complex, \n    wr.week_start\n    );\n  \n  ...\n                 ^\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 368, in safe_run\n    result = self.compile_and_execute(manifest, ctx)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 314, in compile_and_execute\n    result = self.run(ctx.node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/base.py\", line 415, in run\n    return self.execute(compiled_node, manifest)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/task/run.py\", line 298, in execute\n    result = MacroGenerator(\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 83, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/clients/jinja.py\", line 84, in __call__\n    return self.call_macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt_common/clients/jinja.py\", line 322, in call_macro\n    return macro(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 768, in __call__\n    return self._invoke(arguments, autoescape)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 782, in _invoke\n    rv = self._func(*arguments)\n  File \"<template>\", line 52, in macro\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/sandbox.py\", line 394, in call\n    return __context.call(__obj, *args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/jinja2/runtime.py\", line 303, in call\n    return __obj(*args, **kwargs)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/base/impl.py\", line 379, in execute\n    return self.connections.execute(sql=sql, auto_begin=auto_begin, fetch=fetch, limit=limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 119, in execute\n    return super().execute(sql, auto_begin, fetch, limit)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 154, in execute\n    _, cursor = self.add_query(sql, auto_begin)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/sql/connections.py\", line 76, in add_query\n    with self.exception_handler(sql):\n  File \"/home/christiandata/.local/share/uv/python/cpython-3.10.16-linux-x86_64-gnu/lib/python3.10/contextlib.py\", line 153, in __exit__\n    self.gen.throw(typ, value, traceback)\n  File \"/home/christiandata/mtadata/.venv/lib/python3.10/site-packages/dbt/adapters/duckdb/connections.py\", line 92, in exception_handler\n    raise dbt.exceptions.DbtRuntimeError(str(exc)) from exc\ndbt_common.exceptions.base.DbtRuntimeError: Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^\n", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "W002", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "name": "CatchableExceptionOnRun", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.382365Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.expense_type_per_year\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.383418Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.labor_expenses_per_agency\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.384346Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.bond_payment_info\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.384916Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.386751Z"}}
{"data": {"description": "sql table model main.weekly_riders_per_station", "execution_time": 0.48779845, "index": 12, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.387936", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "status": "error", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "12 of 12 ERROR creating sql table model main.weekly_riders_per_station ......... [\u001b[31mERROR\u001b[0m in 0.49s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.388401Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.390045Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.391212Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.392018Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.forecast_accuracy_2023\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.392838Z"}}
{"data": {"elapsed": 0.005814946, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.006 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.393583Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.387936", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.876318", "node_status": "error", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}, "run_result": {"adapter_response": {}, "execution_time": 0.48779845, "message": "Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-12 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.025971Z", "name": "compile", "started_at": "2025-01-30T16:00:21.962506Z"}, {"completed_at": "2025-01-30T16:00:22.310453Z", "name": "execute", "started_at": "2025-01-30T16:00:22.063614Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.weekly_riders_per_station", "name": "NodeFinished", "pid": 739127, "thread": "Thread-12 (worker)", "ts": "2025-01-30T16:00:22.394586Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.397549Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.daily_ridership\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.404845Z"}}
{"data": {"elapsed": 0.010558349, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.011 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.405965Z"}}
{"data": {"elapsed": 0.01134752, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.011 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.407008Z"}}
{"data": {"elapsed": 0.012163182, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.012 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.408003Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\ndrop table if exists \"mtastats\".\"main\".\"daily_ridership__dbt_backup\" cascade"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.daily_ridership\"} */\ndrop table if exists \"mtastats\".\"main\".\"daily_ridership__dbt_backup\" cascade", "name": "SQLQuery", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.409508Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.expense_type_per_year\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.413098Z"}}
{"data": {"elapsed": 0.004745902, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.005 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.413989Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.labor_expenses_per_agency\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.416670Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.bond_payment_info\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.419427Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\ndrop table if exists \"mtastats\".\"main\".\"expense_type_per_year__dbt_backup\" cascade"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.expense_type_per_year\"} */\ndrop table if exists \"mtastats\".\"main\".\"expense_type_per_year__dbt_backup\" cascade", "name": "SQLQuery", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.420232Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "conn_type": "duckdb", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"model.mta.forecast_accuracy_2023\"", "name": "ConnectionUsed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.423228Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\ndrop table if exists \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_backup\" cascade"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.labor_expenses_per_agency\"} */\ndrop table if exists \"mtastats\".\"main\".\"labor_expenses_per_agency__dbt_backup\" cascade", "name": "SQLQuery", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.424478Z"}}
{"data": {"elapsed": 0.005361438, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.005 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.425439Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\ndrop table if exists \"mtastats\".\"main\".\"bond_payment_info__dbt_backup\" cascade"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.bond_payment_info\"} */\ndrop table if exists \"mtastats\".\"main\".\"bond_payment_info__dbt_backup\" cascade", "name": "SQLQuery", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.426098Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "sql": "/* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\ndrop table if exists \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_backup\" cascade"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: /* {\"app\": \"dbt\", \"dbt_version\": \"1.8.7\", \"profile_name\": \"default\", \"target_name\": \"dev\", \"node_id\": \"model.mta.forecast_accuracy_2023\"} */\ndrop table if exists \"mtastats\".\"main\".\"forecast_accuracy_2023__dbt_backup\" cascade", "name": "SQLQuery", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.427217Z"}}
{"data": {"conn_name": "model.mta.daily_ridership", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.daily_ridership: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.430215Z"}}
{"data": {"elapsed": 0.003834982, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.004 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.430839Z"}}
{"data": {"elapsed": 0.004057832, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.004 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.431919Z"}}
{"data": {"description": "sql table model main.daily_ridership", "execution_time": 0.5425434, "index": 3, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.432860", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "status": "OK", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "3 of 12 OK created sql table model main.daily_ridership ........................ [\u001b[32mOK\u001b[0m in 0.54s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.433242Z"}}
{"data": {"elapsed": 0.002516603, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.003 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.434229Z"}}
{"data": {"elapsed": 0.00242842, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.002 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.434859Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.expense_type_per_year: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.436327Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.labor_expenses_per_agency: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.438115Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.432860", "node_name": "daily_ridership", "node_path": "daily_ridership.sql", "node_relation": {"alias": "daily_ridership", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"daily_ridership\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.866518", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.daily_ridership"}, "run_result": {"adapter_response": {"_message": "OK"}, "execution_time": 0.5425434, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-3 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.968153Z", "name": "compile", "started_at": "2025-01-30T16:00:21.921625Z"}, {"completed_at": "2025-01-30T16:00:22.430094Z", "name": "execute", "started_at": "2025-01-30T16:00:22.021957Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.daily_ridership", "name": "NodeFinished", "pid": 739127, "thread": "Thread-3 (worker)", "ts": "2025-01-30T16:00:22.438963Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.bond_payment_info: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.441497Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "executing", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On model.mta.forecast_accuracy_2023: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.444149Z"}}
{"data": {"description": "sql table model main.expense_type_per_year", "execution_time": 0.5541296, "index": 4, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.445513", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "status": "OK", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "4 of 12 OK created sql table model main.expense_type_per_year .................. [\u001b[32mOK\u001b[0m in 0.55s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.445899Z"}}
{"data": {"description": "sql table model main.labor_expenses_per_agency", "execution_time": 0.55203176, "index": 7, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.446937", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "status": "OK", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "7 of 12 OK created sql table model main.labor_expenses_per_agency .............. [\u001b[32mOK\u001b[0m in 0.55s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.447360Z"}}
{"data": {"description": "sql table model main.bond_payment_info", "execution_time": 0.56576896, "index": 2, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.448737", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "status": "OK", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "2 of 12 OK created sql table model main.bond_payment_info ...................... [\u001b[32mOK\u001b[0m in 0.57s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.449067Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.445513", "node_name": "expense_type_per_year", "node_path": "expense_type_per_year.sql", "node_relation": {"alias": "expense_type_per_year", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"expense_type_per_year\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.867815", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.expense_type_per_year"}, "run_result": {"adapter_response": {"_message": "OK"}, "execution_time": 0.5541296, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-4 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.969509Z", "name": "compile", "started_at": "2025-01-30T16:00:21.927782Z"}, {"completed_at": "2025-01-30T16:00:22.436194Z", "name": "execute", "started_at": "2025-01-30T16:00:22.026708Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.expense_type_per_year", "name": "NodeFinished", "pid": 739127, "thread": "Thread-4 (worker)", "ts": "2025-01-30T16:00:22.484490Z"}}
{"data": {"description": "sql table model main.forecast_accuracy_2023", "execution_time": 0.5900042, "index": 6, "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.483843", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "status": "OK", "total": 12}, "info": {"category": "", "code": "Q012", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "6 of 12 OK created sql table model main.forecast_accuracy_2023 ................. [\u001b[32mOK\u001b[0m in 0.59s]", "name": "LogModelResult", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.485500Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.446937", "node_name": "labor_expenses_per_agency", "node_path": "labor_expenses_per_agency.sql", "node_relation": {"alias": "labor_expenses_per_agency", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"labor_expenses_per_agency\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.871120", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.labor_expenses_per_agency"}, "run_result": {"adapter_response": {"_message": "OK"}, "execution_time": 0.55203176, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-7 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.972278Z", "name": "compile", "started_at": "2025-01-30T16:00:21.941662Z"}, {"completed_at": "2025-01-30T16:00:22.438018Z", "name": "execute", "started_at": "2025-01-30T16:00:22.040971Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.labor_expenses_per_agency", "name": "NodeFinished", "pid": 739127, "thread": "Thread-7 (worker)", "ts": "2025-01-30T16:00:22.486751Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.448737", "node_name": "bond_payment_info", "node_path": "bond_payment_info.sql", "node_relation": {"alias": "bond_payment_info", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"bond_payment_info\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.864682", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.bond_payment_info"}, "run_result": {"adapter_response": {"_message": "OK"}, "execution_time": 0.56576896, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-2 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.954125Z", "name": "compile", "started_at": "2025-01-30T16:00:21.914257Z"}, {"completed_at": "2025-01-30T16:00:22.441234Z", "name": "execute", "started_at": "2025-01-30T16:00:22.006206Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.bond_payment_info", "name": "NodeFinished", "pid": 739127, "thread": "Thread-2 (worker)", "ts": "2025-01-30T16:00:22.487605Z"}}
{"data": {"node_info": {"materialized": "table", "meta": {}, "node_finished_at": "2025-01-30T16:00:22.483843", "node_name": "forecast_accuracy_2023", "node_path": "forecast_accuracy_2023.sql", "node_relation": {"alias": "forecast_accuracy_2023", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"forecast_accuracy_2023\"", "schema": "main"}, "node_started_at": "2025-01-30T16:00:21.870493", "node_status": "success", "resource_type": "model", "unique_id": "model.mta.forecast_accuracy_2023"}, "run_result": {"adapter_response": {"_message": "OK"}, "execution_time": 0.5900042, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-6 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.970890Z", "name": "compile", "started_at": "2025-01-30T16:00:21.937134Z"}, {"completed_at": "2025-01-30T16:00:22.443962Z", "name": "execute", "started_at": "2025-01-30T16:00:22.034361Z"}]}}, "info": {"category": "", "code": "Q025", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Finished running node model.mta.forecast_accuracy_2023", "name": "NodeFinished", "pid": 739127, "thread": "Thread-6 (worker)", "ts": "2025-01-30T16:00:22.488921Z"}}
{"data": {"conn_name": "master", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"master\"", "name": "ConnectionUsed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.494276Z"}}
{"data": {"conn_name": "master", "sql": "BEGIN"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: BEGIN", "name": "SQLQuery", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.495014Z"}}
{"data": {"connection_state": "closed"}, "info": {"category": "", "code": "E037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Opening a new connection, currently in state closed", "name": "NewConnectionOpening", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.495530Z"}}
{"data": {"elapsed": 0.007691816, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.008 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.503313Z"}}
{"data": {"conn_name": "master"}, "info": {"category": "", "code": "E018", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: COMMIT", "name": "SQLCommit", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.504098Z"}}
{"data": {"conn_name": "master", "conn_type": "duckdb"}, "info": {"category": "", "code": "E015", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Using duckdb connection \"master\"", "name": "ConnectionUsed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.504571Z"}}
{"data": {"conn_name": "master", "sql": "COMMIT"}, "info": {"category": "", "code": "E016", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: COMMIT", "name": "SQLQuery", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.505025Z"}}
{"data": {"elapsed": 0.000316177, "status": "OK"}, "info": {"category": "", "code": "E017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "SQL status: OK in 0.000 seconds", "name": "SQLQueryStatus", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.505751Z"}}
{"data": {"conn_name": "master"}, "info": {"category": "", "code": "E010", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "On master: Close", "name": "ConnectionClosed", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.506358Z"}}
{"data": {"conn_name": "master"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'master' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.511728Z"}}
{"data": {"conn_name": "model.mta.fare_class_boro"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.fare_class_boro' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.512972Z"}}
{"data": {"conn_name": "model.mta.avg_riders_per_day"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.avg_riders_per_day' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.513579Z"}}
{"data": {"conn_name": "model.mta.bond_payment_info"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.bond_payment_info' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.514058Z"}}
{"data": {"conn_name": "model.mta.daily_ridership"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.daily_ridership' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.514510Z"}}
{"data": {"conn_name": "model.mta.expense_type_per_year"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.expense_type_per_year' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.515007Z"}}
{"data": {"conn_name": "model.mta.forecast_accuracy_2023"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.forecast_accuracy_2023' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.515384Z"}}
{"data": {"conn_name": "model.mta.labor_expenses_per_agency"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.labor_expenses_per_agency' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.515770Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_by_station"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.omny_adoption_by_station' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.516148Z"}}
{"data": {"conn_name": "model.mta.omny_adoption_increase"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.omny_adoption_increase' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.516531Z"}}
{"data": {"conn_name": "model.mta.subway_station_stats"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.subway_station_stats' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.516952Z"}}
{"data": {"conn_name": "model.mta.total_riders_per_station"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.total_riders_per_station' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.517313Z"}}
{"data": {"conn_name": "model.mta.weekly_riders_per_station"}, "info": {"category": "", "code": "E008", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Connection 'model.mta.weekly_riders_per_station' was properly closed.", "name": "ConnectionClosedInCleanup", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.517677Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.518288Z"}}
{"data": {"execution": " in 0 hours 0 minutes and 0.89 seconds", "execution_time": 0.89006495, "stat_line": "12 table models"}, "info": {"category": "", "code": "E047", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Finished running 12 table models in 0 hours 0 minutes and 0.89 seconds (0.89s).", "name": "FinishedRunningStats", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.518857Z"}}
{"data": {"elapsed_time": 0.89006495, "generated_at": "2025-01-30T16:00:22Z", "results": [{"adapter_response": {}, "execution_time": 0.4285555, "message": "Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-8 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.978085Z", "name": "compile", "started_at": "2025-01-30T16:00:21.945294Z"}, {"completed_at": "2025-01-30T16:00:22.217641Z", "name": "execute", "started_at": "2025-01-30T16:00:22.044877Z"}]}, {"adapter_response": {}, "execution_time": 0.45064092, "message": "Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "num_failures": 0, "status": "error", "thread": "Thread-1 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.948442Z", "name": "compile", "started_at": "2025-01-30T16:00:21.903056Z"}, {"completed_at": "2025-01-30T16:00:22.190648Z", "name": "execute", "started_at": "2025-01-30T16:00:21.972865Z"}]}, {"adapter_response": {}, "execution_time": 0.43764782, "message": "Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-5 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.970262Z", "name": "compile", "started_at": "2025-01-30T16:00:21.932629Z"}, {"completed_at": "2025-01-30T16:00:22.189010Z", "name": "execute", "started_at": "2025-01-30T16:00:22.030474Z"}]}, {"adapter_response": {}, "execution_time": 0.45317078, "message": "Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "num_failures": 0, "status": "error", "thread": "Thread-11 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.020663Z", "name": "compile", "started_at": "2025-01-30T16:00:21.959260Z"}, {"completed_at": "2025-01-30T16:00:22.247128Z", "name": "execute", "started_at": "2025-01-30T16:00:22.052861Z"}]}, {"adapter_response": {}, "execution_time": 0.45792317, "message": "Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-10 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.021321Z", "name": "compile", "started_at": "2025-01-30T16:00:21.954920Z"}, {"completed_at": "2025-01-30T16:00:22.261006Z", "name": "execute", "started_at": "2025-01-30T16:00:22.057360Z"}]}, {"adapter_response": {}, "execution_time": 0.46033168, "message": "Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-9 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.018979Z", "name": "compile", "started_at": "2025-01-30T16:00:21.949568Z"}, {"completed_at": "2025-01-30T16:00:22.253663Z", "name": "execute", "started_at": "2025-01-30T16:00:22.049125Z"}]}, {"adapter_response": {}, "execution_time": 0.48779845, "message": "Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "num_failures": 0, "status": "error", "thread": "Thread-12 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:22.025971Z", "name": "compile", "started_at": "2025-01-30T16:00:21.962506Z"}, {"completed_at": "2025-01-30T16:00:22.310453Z", "name": "execute", "started_at": "2025-01-30T16:00:22.063614Z"}]}, {"adapter_response": {"_message": "OK"}, "execution_time": 0.5425434, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-3 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.968153Z", "name": "compile", "started_at": "2025-01-30T16:00:21.921625Z"}, {"completed_at": "2025-01-30T16:00:22.430094Z", "name": "execute", "started_at": "2025-01-30T16:00:22.021957Z"}]}, {"adapter_response": {"_message": "OK"}, "execution_time": 0.5541296, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-4 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.969509Z", "name": "compile", "started_at": "2025-01-30T16:00:21.927782Z"}, {"completed_at": "2025-01-30T16:00:22.436194Z", "name": "execute", "started_at": "2025-01-30T16:00:22.026708Z"}]}, {"adapter_response": {"_message": "OK"}, "execution_time": 0.55203176, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-7 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.972278Z", "name": "compile", "started_at": "2025-01-30T16:00:21.941662Z"}, {"completed_at": "2025-01-30T16:00:22.438018Z", "name": "execute", "started_at": "2025-01-30T16:00:22.040971Z"}]}, {"adapter_response": {"_message": "OK"}, "execution_time": 0.56576896, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-2 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.954125Z", "name": "compile", "started_at": "2025-01-30T16:00:21.914257Z"}, {"completed_at": "2025-01-30T16:00:22.441234Z", "name": "execute", "started_at": "2025-01-30T16:00:22.006206Z"}]}, {"adapter_response": {"_message": "OK"}, "execution_time": 0.5900042, "message": "OK", "num_failures": 0, "status": "success", "thread": "Thread-6 (worker)", "timing_info": [{"completed_at": "2025-01-30T16:00:21.970890Z", "name": "compile", "started_at": "2025-01-30T16:00:21.937134Z"}, {"completed_at": "2025-01-30T16:00:22.443962Z", "name": "execute", "started_at": "2025-01-30T16:00:22.034361Z"}]}], "success": false}, "info": {"category": "", "code": "Q037", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Command end result", "name": "EndRunResult", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.521226Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.557586Z"}}
{"data": {"keyboard_interrupt": false, "num_errors": 7, "num_warnings": 0}, "info": {"category": "", "code": "Z030", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "\u001b[31mCompleted with 7 errors and 0 warnings:\u001b[0m", "name": "EndOfRunSummary", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.558620Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.559215Z"}}
{"data": {"msg": "Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_by_station", "node_path": "omny_adoption_by_station.sql", "node_relation": {"alias": "omny_adoption_by_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_by_station\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.omny_adoption_by_station"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model omny_adoption_by_station (models/omny_adoption_by_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 17:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2022, 2023, 2024)\n      GROUP BY \n          station_complex, \n          YEAR(transit_timestamp)\n  ),\n  pivoted_data AS (\n      SELECT \n          station_complex,\n          MAX(CASE WHEN year = 2022 THEN omny_percentage ELSE NULL END) AS omny_2022,\n          MAX(CASE WHEN year = 2023 THEN omny_percentage ELSE NULL END) AS omny_2023,\n          MAX(CASE WHEN year = 2024 THEN omny_percentage ELSE NULL END) AS omny_2024\n      FROM \n          yearly_data\n      GROUP BY \n          station_complex\n  )\n  SELECT \n      station_complex,\n      omny_2022,\n      omny_2023,\n      omny_2024,\n      CASE \n          WHEN omny_2022 IS NOT NULL AND omny_2023 IS NOT NULL THEN \n              (omny_2023 - omny_2022) / omny_2022\n          ELSE NULL\n      END AS omny_2023_growth,\n      CASE \n          WHEN omny_2023 IS NOT NULL AND omny_2024 IS NOT NULL THEN \n              (omny_2024 - omny_2023) / omny_2023\n          ELSE NULL\n      END AS omny_2024_growth\n  FROM \n      pivoted_data\n  ORDER BY \n      station_complex\n      );\n    \n    ...\n                   ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.560055Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.560700Z"}}
{"data": {"msg": "Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "avg_riders_per_day", "node_path": "avg_riders_per_day.sql", "node_relation": {"alias": "avg_riders_per_day", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"avg_riders_per_day\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.avg_riders_per_day"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model avg_riders_per_day (models/avg_riders_per_day.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, \n      station_complex, \n      latitude, \n      longitude, \n      day_of_week\n  ORDER BY \n      average_ridership DESC\n      );\n    \n    ...\n               ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.561295Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.561866Z"}}
{"data": {"msg": "Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "fare_class_boro", "node_path": "fare_class_boro.sql", "node_relation": {"alias": "fare_class_boro", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"fare_class_boro\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.fare_class_boro"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model fare_class_boro (models/fare_class_boro.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 36:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          borough, fare_class_category, day_type\n  )\n  SELECT \n      r.borough, \n      r.fare_class_category, \n      r.day_type,\n      r.total_ridership, \n      ROUND(r.total_ridership / t.total_ridership_borough_daytype, 4) AS ridership_percentage\n  FROM \n      ridership_by_fare_class r\n  JOIN \n      total_ridership_per_borough_daytype t\n      ON r.borough = t.borough \n      AND r.day_type = t.day_type\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n                   ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.562384Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.562937Z"}}
{"data": {"msg": "Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "total_riders_per_station", "node_path": "total_riders_per_station.sql", "node_relation": {"alias": "total_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"total_riders_per_station\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.total_riders_per_station"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model total_riders_per_station (models/total_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 18:     \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n  GROUP BY \n      station_complex_id, station_complex, latitude, longitude\n  ORDER BY \n      total_ridership DESC\n      );\n    \n    ...\n               ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.563450Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.564464Z"}}
{"data": {"msg": "Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "subway_station_stats", "node_path": "subway_station_stats.sql", "node_relation": {"alias": "subway_station_stats", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"subway_station_stats\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.subway_station_stats"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model subway_station_stats (models/subway_station_stats.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) = 2024\n      GROUP BY \n          station_complex, \n          CAST(transit_timestamp AS DATE), \n          DAYOFWEEK(transit_timestamp)\n  ),\n  total_riders_ytd AS (\n      -- Total riders in 2023 and 2024 YTD\n      SELECT \n          station_complex,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2023 THEN ridership ELSE 0 END) AS total_riders_2023,\n          SUM(CASE WHEN YEAR(transit_timestamp) = 2024 THEN ridership ELSE 0 END) AS total_riders_2024,\n          MIN(latitude) AS latitude,   -- Add latitude\n          MIN(longitude) AS longitude  -- Add longitude\n      FROM \n          \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          YEAR(transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex\n  ),\n  weekday_weekend AS (\n      -- Calculate weekday vs. weekend ridership and percentage of transfers\n      SELECT \n          station_complex,\n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END AS day_type,\n          AVG(daily_ridership) AS avg_ridership,\n          SUM(daily_transfers) * 1.0 / SUM(daily_ridership) AS transfer_percentage\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex, \n          CASE \n              WHEN weekday IN (2, 3, 4, 5, 6) THEN 'weekday'\n              ELSE 'weekend'\n          END\n  ),\n  single_day_stats AS (\n      -- Highest and lowest single day ridership\n      SELECT \n          station_complex,\n          MAX(daily_ridership) AS highest_single_day_ridership,\n          MIN(daily_ridership) AS lowest_single_day_ridership\n      FROM \n          ridership_by_day\n      GROUP BY \n          station_complex\n  ),\n  highest_single_day AS (\n      -- Day with highest single day ridership\n      SELECT \n          station_complex,\n          day AS highest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MAX(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  ),\n  lowest_single_day AS (\n      -- Day with lowest single day ridership\n      SELECT \n          station_complex,\n          day AS lowest_single_day_ridership_day\n      FROM \n          ridership_by_day rbd\n      WHERE \n          rbd.daily_ridership = (\n              SELECT \n                  MIN(daily_ridership)\n              FROM \n                  ridership_by_day\n              WHERE \n                  station_complex = rbd.station_complex\n          )\n  )\n  SELECT \n      rbd.station_complex,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS avg_weekday_ridership,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) AS avg_weekend_ridership,\n      sds.highest_single_day_ridership,\n      hsd.highest_single_day_ridership_day,\n      sds.lowest_single_day_ridership,\n      lsd.lowest_single_day_ridership_day,\n      MAX(ty.total_riders_2023) AS total_riders_2023,\n      MAX(ty.total_riders_2024) AS total_riders_2024,\n      MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekday_transfer_percentage,\n      MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.avg_ridership END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.avg_ridership END) AS weekend_ridership_percentage_change,\n      (MAX(CASE WHEN wwd.day_type = 'weekend' THEN wwd.transfer_percentage END) - MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END)) * 1.0 / MAX(CASE WHEN wwd.day_type = 'weekday' THEN wwd.transfer_percentage END) AS weekend_transfer_percentage_change,\n      MAX(rbd.latitude) AS latitude,   -- Add latitude\n      MAX(rbd.longitude) AS longitude  -- Add longitude\n  FROM \n      ridership_by_day rbd\n  JOIN \n      weekday_weekend wwd ON rbd.station_complex = wwd.station_complex\n  JOIN \n      single_day_stats sds ON rbd.station_complex = sds.station_complex\n  JOIN \n      highest_single_day hsd ON rbd.station_complex = hsd.station_complex\n  JOIN \n      lowest_single_day lsd ON rbd.station_complex = lsd.station_complex\n  JOIN \n      total_riders_ytd ty ON rbd.station_complex = ty.station_complex\n  GROUP BY \n      rbd.station_complex, \n      sds.highest_single_day_ridership, \n      sds.lowest_single_day_ridership, \n      hsd.highest_single_day_ridership_day, \n      lsd.lowest_single_day_ridership_day\n  ORDER BY \n      rbd.station_complex\n      );\n    \n    ...\n                   ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.565741Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.567369Z"}}
{"data": {"msg": "Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "omny_adoption_increase", "node_path": "omny_adoption_increase.sql", "node_relation": {"alias": "omny_adoption_increase", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"omny_adoption_increase\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.omny_adoption_increase"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model omny_adoption_increase (models/omny_adoption_increase.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 22:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      WHERE \n          EXTRACT(YEAR FROM transit_timestamp) IN (2023, 2024)\n      GROUP BY \n          station_complex_id, station_complex, latitude, longitude, year\n  ),\n  omny_percentage_by_station AS (\n      -- Calculate the OMNY percentage for each station in 2023 and 2024, including latitude and longitude\n      SELECT \n          station_complex_id, \n          station_complex, \n          latitude, \n          longitude, \n          year, \n          (omny_ridership / total_ridership) AS omny_percentage\n      FROM \n          omny_ridership_by_station_year\n  )\n  SELECT \n      s2023.station_complex_id AS station_id, \n      s2023.station_complex AS station_name,\n      s2023.latitude,\n      s2023.longitude,\n      s2023.omny_percentage AS omny_percentage_2023,\n      s2024.omny_percentage AS omny_percentage_2024,\n      (s2024.omny_percentage - s2023.omny_percentage) AS omny_percentage_increase\n  FROM \n      omny_percentage_by_station s2023\n  JOIN \n      omny_percentage_by_station s2024 \n      ON s2023.station_complex_id = s2024.station_complex_id\n      AND s2023.latitude = s2024.latitude\n      AND s2023.longitude = s2024.longitude\n      AND s2023.year = 2023\n      AND s2024.year = 2024\n  WHERE \n      s2024.omny_percentage > s2023.omny_percentage\n  ORDER BY \n      omny_percentage_increase DESC\n      );\n    \n    ...\n                   ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.568226Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.569236Z"}}
{"data": {"msg": "Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "node_info": {"materialized": "table", "meta": {}, "node_finished_at": "", "node_name": "weekly_riders_per_station", "node_path": "weekly_riders_per_station.sql", "node_relation": {"alias": "weekly_riders_per_station", "database": "mtastats", "relation_name": "\"mtastats\".\"main\".\"weekly_riders_per_station\"", "schema": "main"}, "node_started_at": "", "node_status": "None", "resource_type": "model", "unique_id": "model.mta.weekly_riders_per_station"}}, "info": {"category": "", "code": "Z024", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "error", "msg": "  Runtime Error in model weekly_riders_per_station (models/weekly_riders_per_station.sql)\n  Catalog Error: Table with name mta_hourly_subway_socrata does not exist!\n  Did you mean \"hourly_weather_asset\"?\n  LINE 19:         \"mtastats\".\"main\".\"mta_hourly_subway_socrata\"\n      GROUP BY \n          station_complex, \n          DATE_TRUNC('week', transit_timestamp)\n  ),\n  weekly_weather AS (\n      SELECT \n          DATE_TRUNC('week', date) AS week_start,\n          AVG(temperature_mean) AS avg_weekly_temperature,\n          SUM(precipitation_sum) AS total_weekly_precipitation\n      FROM \n          \"mtastats\".\"main\".\"daily_weather_asset\"\n      GROUP BY \n          DATE_TRUNC('week', date)\n  )\n  SELECT \n      wr.station_complex, \n      wr.week_start, \n      wr.total_weekly_ridership,\n      wr.latitude,\n      wr.longitude,\n      ww.avg_weekly_temperature,\n      ww.total_weekly_precipitation\n  FROM \n      weekly_ridership wr\n  LEFT JOIN \n      weekly_weather ww\n  ON \n      wr.week_start = ww.week_start\n  WHERE \n      wr.week_start < '2024-09-17'\n  ORDER BY \n      wr.station_complex, \n      wr.week_start\n      );\n    \n    ...\n                   ^", "name": "RunResultError", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.569815Z"}}
{"data": {"msg": ""}, "info": {"category": "", "code": "Z017", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "", "name": "Formatting", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.570479Z"}}
{"data": {"stats": {"error": 7, "pass": 5, "skip": 0, "total": 12, "warn": 0}}, "info": {"category": "", "code": "Z023", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "info", "msg": "Done. PASS=5 WARN=0 ERROR=7 SKIP=0 TOTAL=12", "name": "StatsLine", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.570964Z"}}
{"data": {"command_name": "build", "command_success": false, "command_wall_clock_time": 1.6508119, "process_in_blocks": "18200", "process_kernel_time": 0.515141, "process_mem_max_rss": "300640", "process_out_blocks": "8176", "process_user_time": 2.915701}, "info": {"category": "", "code": "Z051", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Resource report: {\"command_name\": \"build\", \"command_wall_clock_time\": 1.6508119, \"process_user_time\": 2.915701, \"process_kernel_time\": 0.515141, \"process_mem_max_rss\": \"300640\", \"process_in_blocks\": \"18200\", \"process_out_blocks\": \"8176\", \"command_success\": false}", "name": "ResourceReport", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.571740Z"}}
{"data": {"command": "dbt build", "completed_at": "2025-01-30T16:00:22.572380Z", "elapsed": 1.6515845, "success": false}, "info": {"category": "", "code": "Q039", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Command `dbt build` failed at 08:00:22.572380 after 1.65 seconds", "name": "CommandCompleted", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.572490Z"}}
{"data": {}, "info": {"category": "", "code": "Z042", "extra": {}, "invocation_id": "075090d0-62d4-4219-a46a-99ab253db3dc", "level": "debug", "msg": "Flushing usage events", "name": "FlushEvents", "pid": 739127, "thread": "MainThread", "ts": "2025-01-30T16:00:22.573046Z"}}
